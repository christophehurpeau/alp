{"version":3,"sources":["../src/index.js"],"names":["deprecate","argv","deepFreeze","parseJSON","existsSync","readFileSync","_existsConfigSync","dirname","name","_loadConfigSync","content","ConfigOptions","packageConfig","version","Config","_map","Map","_dirname","replace","options","env","process","CONFIG_ENV","NODE_ENV","argvOverrides","config","loadConfigSync","key","value","set","existsConfigSync","has","Error","socketPath","port","delete","PORT","Number","forEach","splitted","split","length","reduce","partialKey","undefined","last","pop","map","get","alpConfig","app","loadSync","existsConfig","loadConfig","context"],"mappings":"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","file":"index.js","sourcesContent":["import { deprecate } from 'util';\nimport argv from 'minimist-argv';\nimport deepFreeze from 'deep-freeze-es6';\nimport parseJSON from 'parse-json-object-as-map';\nimport { existsSync, readFileSync } from 'fs';\n\nfunction _existsConfigSync(dirname: string, name: string) {\n  return existsSync(`${dirname}${name}.json`);\n}\n\nfunction _loadConfigSync(dirname: string, name: string) {\n  let content = readFileSync(`${dirname}${name}.json`);\n  return parseJSON(content);\n}\n\ntype ConfigOptions = {\n    argv?: Array<string>,\n    packageConfig?: Object,\n    version?: string,\n}\n\nexport class Config {\n  _map: Map;\n  _dirname: string;\n  packageConfig: Object;\n\n  constructor(dirname: string) {\n    this._map = new Map();\n    this._dirname = dirname.replace(/\\/*$/, '/');\n  }\n\n  loadSync(options: ConfigOptions = {}): Map {\n    const env = process.env.CONFIG_ENV || process.env.NODE_ENV || 'development';\n    const { argv: argvOverrides = [], packageConfig, version } = options;\n    this.packageConfig = packageConfig;\n\n    const config = this.loadConfigSync('common');\n    // eslint-disable-next-line no-restricted-syntax\n    for (let [key, value] of this.loadConfigSync(env)) {\n      config.set(key, value);\n    }\n\n    if (this.existsConfigSync('local')) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (let [key, value] of this.loadConfigSync('local')) {\n        config.set(key, value);\n      }\n    }\n\n    if (config.has('version')) {\n      throw new Error('Cannot have \"version\", in config.');\n    }\n\n    config.set('version', version || argv.version || packageConfig.version);\n\n    let socketPath = argv['socket-path'] || argv.socketPath;\n    if (socketPath) {\n      config.set('socketPath', socketPath);\n    } else if (argv.port) {\n      config.set('port', argv.port);\n      config.delete('socketPath');\n    } else if (process.env.PORT) {\n      config.set('port', Number(process.env.PORT));\n      config.delete('socketPath');\n    }\n\n    argvOverrides.forEach(key => {\n      const splitted = key.split('.');\n      const value = splitted.length !== 0\n                && splitted.reduce((config, partialKey) => config && config[partialKey], argv);\n      if (value !== undefined) {\n        const last = splitted.pop();\n        const map = splitted.length === 0 ? config\n                    : splitted.reduce((config, partialKey) => config.get(partialKey), config);\n        map.set(last, value);\n      }\n    });\n\n    return this._map = deepFreeze(config);\n  }\n\n  get(key: string): any {\n    return this._map.get(key);\n  }\n\n  existsConfigSync(name: string): boolean {\n    return _existsConfigSync(this._dirname, name);\n  }\n\n  loadConfigSync(name: string): Map {\n    return _loadConfigSync(this._dirname, name);\n  }\n}\n\nexport default function alpConfig(dirname: ?string, options: ConfigOptions = {}) {\n  return (app, config: ?Config) => {\n    if (!config) {\n      config = new Config(dirname, options);\n      config.loadSync(options);\n    }\n\n    app.existsConfig = deprecate((name) => config.existsConfigSync(name), 'use app.existsConfigSync');\n    app.loadConfig = deprecate((name) => config.loadConfigSync(name), 'use app.loadConfigSync');\n\n    app.existsConfigSync = name => config.existsConfigSync(name);\n    app.loadConfigSync = name => config.loadConfigSync(name);\n\n    app.config = config;\n    app.context.config = config;\n\n    return config;\n  };\n}\n"]}