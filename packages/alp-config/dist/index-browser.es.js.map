{"version":3,"file":"index-browser.es.js","sources":["../src/browserStoredConfig.js","../src/browser.js"],"sourcesContent":["/* global localStorage */\nimport deepFreeze from 'deep-freeze-es6';\nimport parseJSON from 'parse-json-object-as-map';\nimport stringify from 'stringify-json';\n\nconst map = (() => {\n  const config = localStorage.getItem('ibex-config');\n  if (config === null) {\n    return new Map();\n  }\n\n  return parseJSON(config);\n})();\n\nmap.forEach(value => deepFreeze(value));\n\nexport function getVersion() {\n  return map.get('version');\n}\n\nexport function has(key) {\n  return map.has(key);\n}\n\nexport function get(key) {\n  return map.get(key);\n}\n\nexport function save() {\n  localStorage.setItem('ibex-config', stringify(map));\n}\n\nexport function set(key, value) {\n  map.set(key, value);\n  save();\n}\n\nexport function clear(version) {\n  map.clear();\n  map.set('version', version);\n  save();\n}\n","/* global fetch */\nimport parseJSON from 'parse-json-object-as-map';\nimport * as storedConfig from './browserStoredConfig';\n\nfunction fetchConfig(path) {\n  return fetch(`${path}.json`)\n    .then(res => res.text())\n    .then(text => parseJSON(text))\n    .catch(() => false);\n}\n\n/**\n * @param {string} path\n * @returns {Promise|Map}\n */\nfunction getConfig(path) {\n  if (storedConfig.has(path)) {\n    return storedConfig.get(path);\n  }\n  return fetchConfig(path);\n}\n\n/**\n * @param {string} path\n * @returns {Promise|Boolean}\n */\nfunction existsConfig(path) {\n  if (storedConfig.has(path)) {\n    return storedConfig.get(path) !== false;\n  }\n  return fetchConfig(path);\n}\n\nconst getOrFetchAppConfig = function(version, environment, configPath) {\n  if (storedConfig.getVersion() === version && storedConfig.has('_appConfig')) {\n    return Promise.resolve(storedConfig.get('_appConfig'));\n  }\n\n  storedConfig.clear(version);\n\n  return Promise.all([\n    getConfig(`${configPath}common`),\n    environment && getConfig(`${configPath}environment`),\n    getConfig(`${configPath}local`),\n  ]).then(([config, ...others]) => {\n    if (!config) config = new Map();\n    config.set('version', version);\n\n    others.filter(Boolean).forEach(jsonConfig => {\n      jsonConfig.forEach((value, key) => config.set(key, value));\n    });\n\n    storedConfig.set('_appConfig', config);\n\n    return config;\n  });\n};\n\nexport default function alpConfig(configPath) {\n  configPath = configPath.replace(/\\/*$/, '/');\n  return function(app) {\n    app.existsConfig = name => existsConfig(`${configPath}${name}`);\n    app.loadConfig = name => getConfig(`${configPath}${name}`);\n\n    const version = app.appVersion;\n\n    if (!version) {\n      throw new Error('Missing appVersion');\n    }\n\n    return getOrFetchAppConfig(version, app.environment, configPath).then(config => {\n      app.config = config;\n      app.context.config = config;\n      return config;\n    });\n  };\n}\n"],"names":["map","config","localStorage","getItem","Map","parseJSON","forEach","deepFreeze","value","getVersion","get","has","key","save","setItem","stringify","set","clear","version","fetchConfig","path","fetch","then","res","text","catch","getConfig","storedConfig","existsConfig","getOrFetchAppConfig","environment","configPath","Promise","resolve","all","others","filter","Boolean","alpConfig","replace","app","name","loadConfig","appVersion","Error","context"],"mappings":"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"}