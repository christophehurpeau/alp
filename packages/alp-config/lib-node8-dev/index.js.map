{"version":3,"sources":["../src/index.js"],"names":["alpConfig","_existsConfigSync","dirname","name","_loadConfigSync","content","Config","constructor","_map","Map","_dirname","replace","loadSync","options","env","process","CONFIG_ENV","NODE_ENV","argv","argvOverrides","packageConfig","version","config","loadConfigSync","key","value","set","existsConfigSync","has","Error","socketPath","port","delete","PORT","Number","forEach","splitted","split","length","reduce","partialKey","last","pop","map","get","app","existsConfig","loadConfig","context"],"mappings":"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","file":"index.js","sourcesContent":["import { deprecate } from 'util';\nimport argv from 'minimist-argv';\nimport deepFreeze from 'deep-freeze-es6';\nimport parseJSON from 'parse-json-object-as-map';\nimport { existsSync, readFileSync } from 'fs';\n\nfunction _existsConfigSync(dirname: string, name: string) {\n  return existsSync(`${dirname}${name}.json`);\n}\n\nfunction _loadConfigSync(dirname: string, name: string) {\n  let content = readFileSync(`${dirname}${name}.json`);\n  return parseJSON(content);\n}\n\ntype ConfigOptions = {|\n  argv: ?Array<string>,\n  packageConfig: ?Object,\n  version: ?string,\n|};\n\nexport class Config {\n  _map: Map<string, any>;\n  _dirname: string;\n  packageConfig: Object;\n\n  constructor(dirname: string) {\n    this._map = new Map();\n    this._dirname = dirname.replace(/\\/*$/, '/');\n  }\n\n  loadSync(options: ConfigOptions = {}): Map<string, any> {\n    const env = process.env.CONFIG_ENV || process.env.NODE_ENV || 'development';\n    const { argv: argvOverrides = [], packageConfig, version } = options;\n    this.packageConfig = packageConfig;\n\n    const config = this.loadConfigSync('common');\n    // eslint-disable-next-line no-restricted-syntax\n    for (let [key, value] of this.loadConfigSync(env)) {\n      config.set(key, value);\n    }\n\n    if (this.existsConfigSync('local')) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (let [key, value] of this.loadConfigSync('local')) {\n        config.set(key, value);\n      }\n    }\n\n    if (config.has('version')) {\n      throw new Error('Cannot have \"version\", in config.');\n    }\n\n    config.set('version', version || argv.version || packageConfig.version);\n\n    let socketPath = argv['socket-path'] || argv.socketPath;\n    if (socketPath) {\n      config.set('socketPath', socketPath);\n    } else if (argv.port) {\n      config.set('port', argv.port);\n      config.delete('socketPath');\n    } else if (process.env.PORT) {\n      config.set('port', Number(process.env.PORT));\n      config.delete('socketPath');\n    }\n\n    argvOverrides.forEach(key => {\n      const splitted = key.split('.');\n      const value =\n        splitted.length !== 0 &&\n        splitted.reduce((config, partialKey) => config && config[partialKey], argv);\n      if (value !== undefined) {\n        const last = splitted.pop();\n        const map =\n          splitted.length === 0\n            ? config\n            : splitted.reduce((config, partialKey) => config.get(partialKey), config);\n        map.set(last, value);\n      }\n    });\n\n    return (this._map = deepFreeze(config));\n  }\n\n  get(key: string): any {\n    return this._map.get(key);\n  }\n\n  existsConfigSync(name: string): boolean {\n    return _existsConfigSync(this._dirname, name);\n  }\n\n  loadConfigSync(name: string): Map<string, any> {\n    return _loadConfigSync(this._dirname, name);\n  }\n}\n\nexport default function alpConfig(dirname: ?string, options: ConfigOptions = {}) {\n  return (app, config: ?Config) => {\n    if (!config) {\n      config = new Config(dirname);\n      config.loadSync(options);\n    }\n\n    app.existsConfig = deprecate(name => config.existsConfigSync(name), 'use app.existsConfigSync');\n    app.loadConfig = deprecate(name => config.loadConfigSync(name), 'use app.loadConfigSync');\n\n    app.existsConfigSync = name => config.existsConfigSync(name);\n    app.loadConfigSync = name => config.loadConfigSync(name);\n\n    app.config = config;\n    app.context.config = config;\n\n    return config;\n  };\n}\n"]}