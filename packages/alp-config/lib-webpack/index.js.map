{"version":3,"sources":["../src/index.js"],"names":["deprecate","argv","deepFreeze","parseJSON","existsSync","readFileSync","_existsConfigSync","dirname","name","_loadConfigSync","content","Config","_map","Map","_dirname","replace","options","env","process","CONFIG_ENV","NODE_ENV","argvOverrides","packageConfig","version","config","loadConfigSync","key","value","set","existsConfigSync","has","Error","socketPath","port","delete","forEach","splitted","split","length","reduce","partialKey","undefined","last","pop","map","get","alpConfig","app","loadSync","existsConfig","loadConfig","context"],"mappings":"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","file":"index.js","sourcesContent":["import { deprecate } from 'util';\nimport argv from 'minimist-argv';\nimport deepFreeze from 'deep-freeze-es6';\nimport parseJSON from 'parse-json-object-as-map';\nimport { existsSync, readFileSync } from 'fs';\n\nfunction _existsConfigSync(dirname: string, name: string) {\n  return existsSync(`${dirname}${name}.json`);\n}\n\nfunction _loadConfigSync(dirname: string, name: string) {\n  let content = readFileSync(`${dirname}${name}.json`);\n  return parseJSON(content);\n}\n\ntype ConfigOptions = {\n    argv?: Array<string>,\n    packageConfig?: Object,\n    version?: string,\n}\n\nexport class Config {\n  _map: Map;\n  _dirname: string;\n  packageConfig: Object;\n\n  constructor(dirname: string) {\n    this._map = new Map();\n    this._dirname = dirname.replace(/\\/*$/, '/');\n  }\n\n  loadSync(options: ConfigOptions = {}): Map {\n    const env = process.env.CONFIG_ENV || process.env.NODE_ENV || 'development';\n    const { argv: argvOverrides = [], packageConfig, version } = options;\n    this.packageConfig = packageConfig;\n\n    const config = this.loadConfigSync('common');\n    // eslint-disable-next-line no-restricted-syntax\n    for (let [key, value] of this.loadConfigSync(env)) {\n      config.set(key, value);\n    }\n\n    if (this.existsConfigSync('local')) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (let [key, value] of this.loadConfigSync('local')) {\n        config.set(key, value);\n      }\n    }\n\n    if (config.has('version')) {\n      throw new Error('Cannot have \"version\", in config.');\n    }\n\n    config.set('version', version || argv.version || packageConfig.version);\n\n    let socketPath = argv['socket-path'] || argv.socketPath;\n    if (socketPath) {\n      config.set('socketPath', socketPath);\n    } else if (argv.port) {\n      config.set('port', argv.port);\n      config.delete('socketPath');\n    }\n\n    argvOverrides.forEach(key => {\n      const splitted = key.split('.');\n      const value = splitted.length !== 0\n                && splitted.reduce((config, partialKey) => config && config[partialKey], argv);\n      if (value !== undefined) {\n        const last = splitted.pop();\n        const map = splitted.length === 0 ? config\n                    : splitted.reduce((config, partialKey) => config.get(partialKey), config);\n        map.set(last, value);\n      }\n    });\n\n    return this._map = deepFreeze(config);\n  }\n\n  get(key: string): any {\n    return this._map.get(key);\n  }\n\n  existsConfigSync(name: string): boolean {\n    return _existsConfigSync(this._dirname, name);\n  }\n\n  loadConfigSync(name: string): Map {\n    return _loadConfigSync(this._dirname, name);\n  }\n}\n\nexport default function alpConfig(dirname: ?string, options: ConfigOptions = {}) {\n  return (app, config: ?Config) => {\n    if (!config) {\n      config = new Config(dirname, options);\n      config.loadSync(options);\n    }\n\n    app.existsConfig = deprecate((name) => config.existsConfigSync(name), 'use app.existsConfigSync');\n    app.loadConfig = deprecate((name) => config.loadConfigSync(name), 'use app.loadConfigSync');\n\n    app.existsConfigSync = name => config.existsConfigSync(name);\n    app.loadConfigSync = name => config.loadConfigSync(name);\n\n    app.config = config;\n    app.context.config = config;\n\n    return config;\n  };\n}\n"]}