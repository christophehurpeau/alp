{"version":3,"sources":["../src/index.js"],"names":["deprecate","argv","deepFreeze","parseJSON","existsSync","readFileSync","_existsConfigSync","dirname","name","_loadConfigSync","content","Config","constructor","_map","Map","_dirname","replace","loadSync","options","env","process","CONFIG_ENV","NODE_ENV","argvOverrides","packageConfig","version","config","loadConfigSync","key","value","set","existsConfigSync","has","Error","socketPath","port","delete","PORT","Number","forEach","splitted","split","length","reduce","partialKey","last","pop","map","get","alpConfig","app","existsConfig","loadConfig","context"],"mappings":"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","file":"index.js","sourcesContent":["import { deprecate } from 'util';\nimport argv from 'minimist-argv';\nimport deepFreeze from 'deep-freeze-es6';\nimport parseJSON from 'parse-json-object-as-map';\nimport { existsSync, readFileSync } from 'fs';\n\nfunction _existsConfigSync(dirname: string, name: string) {\n  return existsSync(`${dirname}${name}.json`);\n}\n\nfunction _loadConfigSync(dirname: string, name: string) {\n  let content = readFileSync(`${dirname}${name}.json`);\n  return parseJSON(content);\n}\n\ntype ConfigOptions = {|\n  argv: ?Array<string>,\n  packageConfig: ?Object,\n  version: ?string,\n|};\n\nexport class Config {\n  _map: Map<string, any>;\n  _dirname: string;\n  packageConfig: Object;\n\n  constructor(dirname: string) {\n    this._map = new Map();\n    this._dirname = dirname.replace(/\\/*$/, '/');\n  }\n\n  loadSync(options: ConfigOptions = {}): Map<string, any> {\n    const env = process.env.CONFIG_ENV || process.env.NODE_ENV || 'development';\n    const { argv: argvOverrides = [], packageConfig, version } = options;\n    this.packageConfig = packageConfig;\n\n    const config = this.loadConfigSync('common');\n    // eslint-disable-next-line no-restricted-syntax\n    for (let [key, value] of this.loadConfigSync(env)) {\n      config.set(key, value);\n    }\n\n    if (this.existsConfigSync('local')) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (let [key, value] of this.loadConfigSync('local')) {\n        config.set(key, value);\n      }\n    }\n\n    if (config.has('version')) {\n      throw new Error('Cannot have \"version\", in config.');\n    }\n\n    config.set('version', version || argv.version || packageConfig.version);\n\n    let socketPath = argv['socket-path'] || argv.socketPath;\n    if (socketPath) {\n      config.set('socketPath', socketPath);\n    } else if (argv.port) {\n      config.set('port', argv.port);\n      config.delete('socketPath');\n    } else if (process.env.PORT) {\n      config.set('port', Number(process.env.PORT));\n      config.delete('socketPath');\n    }\n\n    argvOverrides.forEach(key => {\n      const splitted = key.split('.');\n      const value =\n        splitted.length !== 0 &&\n        splitted.reduce((config, partialKey) => config && config[partialKey], argv);\n      if (value !== undefined) {\n        const last = splitted.pop();\n        const map =\n          splitted.length === 0\n            ? config\n            : splitted.reduce((config, partialKey) => config.get(partialKey), config);\n        map.set(last, value);\n      }\n    });\n\n    return (this._map = deepFreeze(config));\n  }\n\n  get(key: string): any {\n    return this._map.get(key);\n  }\n\n  existsConfigSync(name: string): boolean {\n    return _existsConfigSync(this._dirname, name);\n  }\n\n  loadConfigSync(name: string): Map<string, any> {\n    return _loadConfigSync(this._dirname, name);\n  }\n}\n\nexport default function alpConfig(dirname: ?string, options: ConfigOptions = {}) {\n  return (app, config: ?Config) => {\n    if (!config) {\n      config = new Config(dirname);\n      config.loadSync(options);\n    }\n\n    app.existsConfig = deprecate(name => config.existsConfigSync(name), 'use app.existsConfigSync');\n    app.loadConfig = deprecate(name => config.loadConfigSync(name), 'use app.loadConfigSync');\n\n    app.existsConfigSync = name => config.existsConfigSync(name);\n    app.loadConfigSync = name => config.loadConfigSync(name);\n\n    app.config = config;\n    app.context.config = config;\n\n    return config;\n  };\n}\n"]}