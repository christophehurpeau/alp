{"version":3,"sources":["../src/load.js"],"names":["IntlMessageFormat","load","translations","language","result","Map","loadMap","map","prefix","forEach","value","key","set"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,oBAA9B;;;AAEA,eAAe,SAASC,IAAT,CAAcC,YAAd,EAAiCC,QAAjC,EAAmD;AAAA,0BAAzB,YAAyB;;AAAA,sBAAV,UAAU;;AAAA;AAAA;;AAChE,QAAMC,SAAS,IAAIC,GAAJ,EAAf;;AAEC,YAASC,OAAT,CAAiBC,GAAjB,EAAsBC,MAAtB,EAA8B;AAC7BD,QAAIE,OAAJ,CAAY,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC1B,UAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7B,eAAOJ,QAAQI,KAAR,EAAgB,GAAEF,MAAO,GAAEG,GAAI,GAA/B,CAAP;AACD;;AAEDP,aAAOQ,GAAP,CAAY,GAAEJ,MAAO,GAAEG,GAAI,EAA3B,EAA8B,IAAIX,iBAAJ,CAAsBU,KAAtB,EAA6BP,QAA7B,CAA9B;AACD,KAND;AAOD,GARA,EAQCD,YARD,EAQe,EARf,CAAD;;AAUA,SAAOE,MAAP;AACD","file":"load.js","sourcesContent":["import IntlMessageFormat from 'intl-messageformat';\n\nexport default function load(translations: Map, language: string) {\n  const result = new Map();\n\n  (function loadMap(map, prefix) {\n    map.forEach((value, key) => {\n      if (typeof value === 'object') {\n        return loadMap(value, `${prefix}${key}.`);\n      }\n\n      result.set(`${prefix}${key}`, new IntlMessageFormat(value, language));\n    });\n  }(translations, ''));\n\n  return result;\n}\n"]}