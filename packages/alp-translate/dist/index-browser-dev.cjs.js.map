{"version":3,"file":"index-browser-dev.cjs.js","sources":["../src/load.ts","../src/browser.ts"],"sourcesContent":["import IntlMessageFormat from 'intl-messageformat';\n\nexport type Translations = ReadonlyMap<string, IntlMessageFormat>;\n\nexport default function load(\n  translations: ReadonlyMap<string, unknown>,\n  language: string,\n): Translations {\n  const result = new Map();\n\n  (function loadMap(map, prefix) {\n    map.forEach((value: any, key) => {\n      if (typeof value === 'object') {\n        return loadMap(value, `${prefix}${key}.`);\n      }\n\n      result.set(`${prefix}${key}`, new IntlMessageFormat(value, language));\n    });\n  })(translations, '');\n\n  return result;\n}\n","import type { BrowserApplicationInCreation, Context } from 'alp-types';\nimport load from './load';\n\ninterface Args {\n  [key: string]: any;\n}\n\ndeclare module 'alp-types' {\n  interface BaseContext {\n    language: string;\n    t: (id: string, args: Args) => string;\n  }\n  interface Context {}\n}\n\nexport default function alpTranslate(\n  dirname: string,\n): (app: BrowserApplicationInCreation) => Promise<void> {\n  dirname = dirname.replace(/\\/*$/, '/');\n  return async (app: BrowserApplicationInCreation): Promise<void> => {\n    const language = app.context.language;\n\n    const map = await app.loadConfig(dirname + language);\n    const translations = load(map, language);\n\n    Object.assign(app.context, {\n      t(this: Context, key: string, args?: { [key: string]: any }): string {\n        const msg = translations.get(key);\n        if (!msg) return key;\n        return msg.format(args) as string;\n      },\n    });\n  };\n}\n"],"names":["load","translations","language","result","Map","loadMap","map","prefix","forEach","value","key","set","IntlMessageFormat","alpTranslate","dirname","replace","app","context","loadConfig","Object","t","args","msg","get","format","assign"],"mappings":";;;;;;;;;;;;;;AAIe,SAASA,IAAT,CACbC,YADa,EAEbC,QAFa,EAGC;AACd,MAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AAEA,GAAC,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,MAAtB,EAA8B;AAC7BD,IAAAA,GAAG,CAACE,OAAJ,CAAY,UAACC,KAAD,EAAaC,GAAb,EAAqB;AAC/B,UAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7B,eAAOJ,OAAO,CAACI,KAAD,EAAS,GAAEF,MAAO,GAAEG,GAAI,GAAxB,CAAd;AACD;;AAEDP,MAAAA,MAAM,CAACQ,GAAP,CAAY,GAAEJ,MAAO,GAAEG,GAAI,EAA3B,EAA8B,IAAIE,0BAAJ,CAAsBH,KAAtB,EAA6BP,QAA7B,CAA9B;AACD,KAND;AAOD,GARD,EAQGD,YARH,EAQiB,EARjB;;AAUA,SAAOE,MAAP;AACD;;ACNc,SAASU,YAAT,CACbC,OADa,EAEyC;AACtDA,EAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwB,GAAxB,CAAV;AACA;AAAA,0FAAO,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACCd,cAAAA,QADD,GACYc,GAAG,CAACC,OAAJ,CAAYf,QADxB;AAAA;AAAA,qBAGac,GAAG,CAACE,UAAJ,CAAeJ,OAAO,GAAGZ,QAAzB,CAHb;;AAAA;AAGCI,cAAAA,GAHD;AAICL,cAAAA,YAJD,GAIgBD,IAAI,CAACM,GAAD,EAAMJ,QAAN,CAJpB;AAAA,4BAMLiB,MANK;AAAA,4BAMSH,GAAG,CAACC,OANb;AAAA;AAOHG,gBAAAA,CAAC,CAAgBV,GAAhB,EAA6BW,IAA7B,EAAoE;AAC7DC,kBAAAA,GAD6D,GACvDrB,YAAY,CAACsB,GAAb,CAAiBb,GAAjB,CADuD;AAEnE,sBAAI,CAACY,GAAL,EAAU,OAAOZ,GAAP;AACV,yBAAOY,GAAG,CAACE,MAAJ,CAAWH,IAAX,CAAP;AACD;;AAXE;;AAAA,0BAMEI,MANF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcD;;;;"}