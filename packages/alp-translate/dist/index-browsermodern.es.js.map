{"version":3,"file":"index-browsermodern.es.js","sources":["../src/load.ts","../src/browser.ts"],"sourcesContent":["import IntlMessageFormatDefault from 'intl-messageformat';\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nconst IntlMessageFormat: typeof IntlMessageFormatDefault =\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  (IntlMessageFormatDefault as any).default || IntlMessageFormatDefault;\n\nexport type Translations = ReadonlyMap<string, IntlMessageFormatDefault>;\n\nexport default function load(\n  translations: ReadonlyMap<string, unknown>,\n  language: string,\n): Translations {\n  const result = new Map();\n\n  (function loadMap(map, prefix) {\n    map.forEach((value: any, key) => {\n      if (typeof value === 'object') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        loadMap(value, `${prefix}${key}.`);\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      result.set(`${prefix}${key}`, new IntlMessageFormat(value, language));\n    });\n  })(translations, '');\n\n  return result;\n}\n","import type { BrowserApplicationInCreation, Context } from 'alp-types';\nimport load from './load';\n\ntype Args = Record<string, any>;\n\ndeclare module 'alp-types' {\n  interface BaseContext {\n    language: string;\n    t: (id: string, args: Args) => string;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-shadow,  @typescript-eslint/no-empty-interface\n  interface Context {}\n}\n\nexport default function alpTranslate(\n  dirname: string,\n): (app: BrowserApplicationInCreation) => Promise<void> {\n  dirname = dirname.replace(/\\/*$/, '/');\n  return async (app: BrowserApplicationInCreation): Promise<void> => {\n    const language = app.context.language;\n\n    const map = await app.loadConfig(dirname + language);\n    const translations = load(map, language);\n\n    Object.assign(app.context, {\n      t(this: Context, key: string, args?: Record<string, any>): string {\n        const msg = translations.get(key);\n        if (!msg) return key;\n        return msg.format(args) as string;\n      },\n    });\n  };\n}\n"],"names":["IntlMessageFormat","IntlMessageFormatDefault","default","load","translations","language","result","Map","loadMap","map","prefix","forEach","value","key","set","alpTranslate","dirname","replace","app","context","loadConfig","Object","assign","t","args","msg","get","format"],"mappings":";;AAGA,MAAMA,iBAAkD;AAErDC,wBAAD,CAAkCC,OAAlC,IAA6CD,wBAF/C;AAMe,SAASE,IAAT,CACbC,YADa,EAEbC,QAFa,EAGC;EACd,MAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;EAEA,CAAC,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,MAAtB,EAA8B;IAC7BD,GAAG,CAACE,OAAJ,CAAY,CAACC,KAAD,EAAaC,GAAb,KAAqB;MAC/B,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;;QAE7BJ,OAAO,CAACI,KAAD,EAAS,GAAEF,MAAO,GAAEG,GAAI,GAAxB,CAAP;QACA;OAJ6B;;;MAQ/BP,MAAM,CAACQ,GAAP,CAAY,GAAEJ,MAAO,GAAEG,GAAI,EAA3B,EAA8B,IAAIb,iBAAJ,CAAsBY,KAAtB,EAA6BP,QAA7B,CAA9B;KARF;GADF,EAWGD,YAXH,EAWiB,EAXjB;;EAaA,OAAOE,MAAP;AACD;;ACfc,SAASS,YAAT,CACbC,OADa,EAEyC;EACtDA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwB,GAAxB,CAAV;EACA,OAAO,MAAOC,GAAP,IAA4D;IACjE,MAAMb,QAAQ,GAAGa,GAAG,CAACC,OAAJ,CAAYd,QAA7B;IAEA,MAAMI,GAAG,GAAG,MAAMS,GAAG,CAACE,UAAJ,CAAeJ,OAAO,GAAGX,QAAzB,CAAlB;IACA,MAAMD,YAAY,GAAGD,IAAI,CAACM,GAAD,EAAMJ,QAAN,CAAzB;IAEAgB,MAAM,CAACC,MAAP,CAAcJ,GAAG,CAACC,OAAlB,EAA2B;MACzBI,CAAC,CAAgBV,GAAhB,EAA6BW,IAA7B,EAAiE;QAChE,MAAMC,GAAG,GAAGrB,YAAY,CAACsB,GAAb,CAAiBb,GAAjB,CAAZ;QACA,IAAI,CAACY,GAAL,EAAU,OAAOZ,GAAP;QACV,OAAOY,GAAG,CAACE,MAAJ,CAAWH,IAAX,CAAP;;;KAJJ;GANF;AAcD;;;;"}