{"version":3,"file":"index-node14.mjs","sources":["../src/load.ts","../src/index.ts"],"sourcesContent":["import IntlMessageFormatDefault from 'intl-messageformat';\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nconst IntlMessageFormat: typeof IntlMessageFormatDefault =\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  (IntlMessageFormatDefault as any).default || IntlMessageFormatDefault;\n\nexport type Translations = ReadonlyMap<string, IntlMessageFormatDefault>;\n\nexport default function load(\n  translations: ReadonlyMap<string, unknown>,\n  language: string,\n): Translations {\n  const result = new Map();\n\n  (function loadMap(map, prefix) {\n    map.forEach((value: any, key) => {\n      if (typeof value === 'object') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        loadMap(value, `${prefix}${key}.`);\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      result.set(`${prefix}${key}`, new IntlMessageFormat(value, language));\n    });\n  })(translations, '');\n\n  return result;\n}\n","import type { NodeApplicationInCreation, Context } from 'alp-types';\nimport { Logger } from 'nightingale-logger';\nimport type { Translations } from './load';\nimport load from './load';\n\nconst logger = new Logger('alp:translate');\n\ntype Args = Record<string, any>;\n\ndeclare module 'alp-types' {\n  interface BaseContext {\n    t: (id: string, args: Args) => string;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  interface Context {\n    readonly language: string;\n  }\n}\n\nexport default function alpTranslate(\n  dirname: string,\n): (app: NodeApplicationInCreation) => void {\n  dirname = dirname.replace(/\\/*$/, '/');\n  return (app: NodeApplicationInCreation) => {\n    const appTranslations = new Map<string, Translations>();\n\n    Object.assign(app.context, {\n      t(this: Context, id: string, args: Args): string {\n        const msg = appTranslations.get(this.language)!.get(id);\n        if (!msg) {\n          logger.warn('invalid msg', { language: this.language, id });\n          return id;\n        }\n\n        return msg.format(args) as string;\n      },\n    });\n\n    const config = app.config!;\n\n    config.get<string[]>('availableLanguages').forEach((language) => {\n      const translations = app.loadConfigSync(dirname + language);\n      appTranslations.set(language, load(translations, language));\n    });\n\n    return appTranslations;\n  };\n}\n"],"names":["IntlMessageFormat","IntlMessageFormatDefault","default","load","translations","language","result","Map","loadMap","map","prefix","forEach","value","key","set","logger","Logger","alpTranslate","dirname","replace","app","appTranslations","Object","assign","context","t","id","args","msg","get","warn","format","config","loadConfigSync"],"mappings":";;;AAGA,MAAMA,iBAAkD;AAErDC,wBAAD,CAAkCC,OAAlC,IAA6CD,wBAF/C;AAMe,SAASE,IAAT,CACbC,YADa,EAEbC,QAFa,EAGC;EACd,MAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;EAEA,CAAC,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,MAAtB,EAA8B;IAC7BD,GAAG,CAACE,OAAJ,CAAY,CAACC,KAAD,EAAaC,GAAb,KAAqB;MAC/B,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;;QAE7BJ,OAAO,CAACI,KAAD,EAAS,GAAEF,MAAO,GAAEG,GAAI,GAAxB,CAAP;QACA;OAJ6B;;;MAQ/BP,MAAM,CAACQ,GAAP,CAAY,GAAEJ,MAAO,GAAEG,GAAI,EAA3B,EAA8B,IAAIb,iBAAJ,CAAsBY,KAAtB,EAA6BP,QAA7B,CAA9B;KARF;GADF,EAWGD,YAXH,EAWiB,EAXjB;;EAaA,OAAOE,MAAP;AACD;;ACxBD,MAAMS,MAAM,GAAG,IAAIC,MAAJ,CAAW,eAAX,CAAf;AAce,SAASC,YAAT,CACbC,OADa,EAE6B;EAC1CA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwB,GAAxB,CAAV;EACA,OAAQC,GAAD,IAAoC;IACzC,MAAMC,eAAe,GAAG,IAAId,GAAJ,EAAxB;IAEAe,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACI,OAAlB,EAA2B;MACzBC,CAAC,CAAgBC,EAAhB,EAA4BC,IAA5B,EAAgD;QAC/C,MAAMC,GAAG,GAAGP,eAAe,CAACQ,GAAhB,CAAoB,KAAKxB,QAAzB,EAAoCwB,GAApC,CAAwCH,EAAxC,CAAZ;;QACA,IAAI,CAACE,GAAL,EAAU;UACRb,MAAM,CAACe,IAAP,CAAY,aAAZ,EAA2B;YAAEzB,QAAQ,EAAE,KAAKA,QAAjB;YAA2BqB;WAAtD;UACA,OAAOA,EAAP;;;QAGF,OAAOE,GAAG,CAACG,MAAJ,CAAWJ,IAAX,CAAP;;;KARJ;IAYA,MAAMK,MAAM,GAAGZ,GAAG,CAACY,MAAnB;IAEAA,MAAM,CAACH,GAAP,CAAqB,oBAArB,EAA2ClB,OAA3C,CAAoDN,QAAD,IAAc;MAC/D,MAAMD,YAAY,GAAGgB,GAAG,CAACa,cAAJ,CAAmBf,OAAO,GAAGb,QAA7B,CAArB;MACAgB,eAAe,CAACP,GAAhB,CAAoBT,QAApB,EAA8BF,IAAI,CAACC,YAAD,EAAeC,QAAf,CAAlC;KAFF;IAKA,OAAOgB,eAAP;GAtBF;AAwBD;;;;"}