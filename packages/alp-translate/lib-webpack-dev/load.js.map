{"version":3,"sources":["../src/load.js"],"names":[],"mappings":";;AAAA,OAAO,iBAAP,MAA8B,oBAA9B;;AAEA,eAAe,SAAS,IAAT,CAAc,YAAd,EAAiC,QAAjC,EAAmD;AAAA,UAArC,YAAqC;AAAA,yHAArC,YAAqC;AAAA;;AAAA,iBAAlB,QAAkB;AAAA,wHAAlB,QAAkB;AAAA;;AAC9D,QAAM,SAAS,IAAI,GAAJ,EAAf;;AAEC,cAAS,OAAT,CAAiB,GAAjB,EAAsB,MAAtB,EAA8B;AAC3B,YAAI,OAAJ,CAAY,UAAC,KAAD,EAAQ,GAAR,EAAgB;AACxB,gBAAI,QAAO,KAAP,yCAAO,KAAP,OAAiB,QAArB,EAA+B;AAC3B,uBAAO,QAAQ,KAAR,EAAkB,GAAlB,OAAP;AACH;;AAED,mBAAO,GAAP,MAAc,MAAd,GAAuB,GAAvB,EAA8B,IAAI,iBAAJ,CAAsB,KAAtB,EAA6B,QAA7B,CAA9B;AACH,SAND;AAOH,KARA,EAQC,YARD,EAQe,EARf,CAAD;;AAUA,WAAO,MAAP;AACH","file":"load.js","sourcesContent":["import IntlMessageFormat from 'intl-messageformat';\n\nexport default function load(translations: Map, language: string) {\n    const result = new Map();\n\n    (function loadMap(map, prefix) {\n        map.forEach((value, key) => {\n            if (typeof value === 'object') {\n                return loadMap(value, `${key}.`);\n            }\n\n            result.set(`${prefix}${key}`, new IntlMessageFormat(value, language));\n        });\n    }(translations, ''));\n\n    return result;\n}\n"]}