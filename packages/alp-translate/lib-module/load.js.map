{"version":3,"sources":["../src/load.js"],"names":["IntlMessageFormat","load","translations","language","result","Map","loadMap","map","prefix","forEach","value","key","set"],"mappings":";;AAAA,OAAOA,iBAAP,MAA8B,oBAA9B;;AAEA,eAAe,SAASC,IAAT,CAAcC,YAAd,EAA8CC,QAA9C,EAAgE;AAC7E,MAAMC,SAAS,IAAIC,GAAJ,EAAf;;AAYA,SAVC,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,MAAtB,EAA8B;AAC7BD,QAAIE,OAAJ,CAAY,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA,aACtB,QAAOD,KAAP,yCAAOA,KAAP,OAAiB,QADK,GAEjBJ,QAAQI,KAAR,OAAkBF,MAAlB,GAA2BG,GAA3B,OAFiB,QAK1BP,OAAOQ,GAAP,MAAcJ,MAAd,GAAuBG,GAAvB,EAA8B,IAAIX,iBAAJ,CAAsBU,KAAtB,EAA6BP,QAA7B,CAA9B,CAL0B;AAM3B,KAND,CAD6B;AAQ9B,GARD,CAQGD,YARH,EAQiB,EARjB,CAUA,EAAOE,MAAP;AACD","file":"load.js","sourcesContent":["import IntlMessageFormat from 'intl-messageformat';\n\nexport default function load(translations: Map<string, any>, language: string) {\n  const result = new Map();\n\n  (function loadMap(map, prefix) {\n    map.forEach((value, key) => {\n      if (typeof value === 'object') {\n        return loadMap(value, `${prefix}${key}.`);\n      }\n\n      result.set(`${prefix}${key}`, new IntlMessageFormat(value, language));\n    });\n  })(translations, '');\n\n  return result;\n}\n"]}