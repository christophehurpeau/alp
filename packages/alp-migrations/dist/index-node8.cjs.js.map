{"version":3,"file":"index-node8.cjs.js","sources":["../src/readRecursiveDirectory.ts","../src/Manager.ts","../src/index.ts"],"sourcesContent":["import { readdir, stat as fsStat, Stats } from 'fs';\n\nexport interface CallbackParam {\n  filename: string;\n  basedir: string;\n  path: string;\n  stat: Stats;\n}\n\nexport default function readRecursiveDirectory(\n  directory: string,\n  callback: (param: CallbackParam) => void | Promise<void>,\n) {\n  return new Promise((resolve, reject) => {\n    readdir(directory, (err, files) => {\n      if (err) return reject(err);\n\n      Promise.all(\n        files.map((file) => {\n          const path = `${directory}/${file}`;\n          return new Promise((resolve, reject) => {\n            fsStat(path, (err, stat) => {\n              if (err) return reject(err);\n\n              if (stat && stat.isDirectory()) {\n                return readRecursiveDirectory(path, callback)\n                  .then(resolve)\n                  .catch(reject);\n              }\n              try {\n                Promise.resolve(\n                  callback({\n                    filename: file,\n                    basedir: directory,\n                    path,\n                    stat,\n                  }),\n                )\n                  .then(() => resolve())\n                  .catch(reject);\n              } catch (err2) {\n                return reject(err2);\n              }\n            });\n          });\n        }),\n      ).then(() => resolve());\n    });\n  });\n}\n","import { MongoStore, MongoInsertType } from 'liwi-mongo';\n\nexport interface Migration {\n  _id: string;\n  version: string;\n  fileName: string;\n  created: Date;\n  updated: Date;\n}\n\nexport default class MigrationsManager {\n  store: MongoStore<Migration>;\n\n  constructor(store: MongoStore<Migration>) {\n    this.store = store;\n  }\n\n  findLastVersion() {\n    return this.store\n      .findOne({}, { created: -1 })\n      .then((row) => row && row.version);\n  }\n\n  addMigrationDone(migration: MongoInsertType<Migration>) {\n    return this.store.insertOne(migration);\n  }\n}\n","/* eslint-disable unicorn/no-process-exit */\nimport semver from 'semver';\nimport Logger from 'nightingale-logger';\nimport { NodeApplication, NodeConfig } from 'alp-types';\nimport readRecursiveDirectory, {\n  CallbackParam,\n} from './readRecursiveDirectory';\nimport MigrationsManager from './Manager';\n\nconst logger = new Logger('alp:migrations');\n\nexport { default as MigrationsManager } from './Manager';\n\nexport interface Options {\n  app: NodeApplication;\n  migrationsManager: MigrationsManager;\n  config?: NodeConfig;\n  dirname?: string;\n}\n\nexport default async function migrate({\n  app,\n  migrationsManager,\n  config = app.config,\n  dirname = `${app.dirname}/migrations`,\n}: Options) {\n  const unhandledRejectionHandler = (reason: any) => {\n    logger.error('unhandledRejection', { err: reason });\n    process.exit(1);\n  };\n  process.on('unhandledRejection', unhandledRejectionHandler);\n\n  const packageVersion = config.packageConfig.version;\n  const currentVersion = await migrationsManager.findLastVersion();\n\n  let migrations: { version: string; fileName: string }[] = [];\n\n  logger.info('migrate', { packageVersion, currentVersion });\n\n  await readRecursiveDirectory(dirname, (res: CallbackParam) => {\n    const fileName = res.path.substr(dirname.length + 1);\n\n    if (fileName.slice(-3) !== '.js') {\n      return;\n    }\n\n    const versionExecResult = /([\\d.]+)(_.*|\\.js)$/.exec(fileName);\n\n    if (!versionExecResult || !versionExecResult[1]) {\n      return;\n    }\n\n    const version: string = versionExecResult[1];\n\n    if (currentVersion && semver.lte(version, currentVersion)) return;\n\n    migrations.push({ version, fileName });\n  });\n\n  migrations = migrations.sort((a, b) =>\n    semver.gt(a.version, b.version) ? 1 : -1,\n  );\n\n  try {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const migration of migrations) {\n      logger.info(`Migration to ${migration.fileName}`);\n      try {\n        // eslint-disable-next-line global-require, import/no-dynamic-require, no-await-in-loop\n        await require(`${dirname}/${migration.fileName}`).default();\n      } catch (err) {\n        logger.error(`Migration to ${migration.version} Failed !`);\n        throw err;\n      }\n\n      logger.success(`Migration to ${migration.fileName} done !`);\n\n      // only add to db if migration version <= package version\n      if (semver.lte(migration.version, packageVersion)) {\n        await migrationsManager.addMigrationDone(migration);\n      }\n    }\n  } catch (err) {\n    logger.error(err);\n    process.exit(1);\n  }\n\n  process.removeListener('unhandledRejection', unhandledRejectionHandler);\n}\n"],"names":["readRecursiveDirectory","directory","callback","Promise","resolve","reject","readdir","err","files","all","map","file","path","fsStat","stat","isDirectory","then","catch","filename","basedir","err2","MigrationsManager","constructor","store","findLastVersion","findOne","created","row","version","addMigrationDone","migration","insertOne","logger","Logger","migrate","app","migrationsManager","config","dirname","unhandledRejectionHandler","reason","error","process","exit","on","packageVersion","packageConfig","currentVersion","migrations","info","res","fileName","substr","length","slice","versionExecResult","exec","semver","lte","push","sort","a","b","gt","require","default","success","removeListener"],"mappings":";;;;;;;;;;AASe,SAASA,sBAAT,CACbC,SADa,EAEbC,QAFa,EAGb;SACO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCC,UAAO,CAACL,SAAD,EAAY,CAACM,GAAD,EAAMC,KAAN,KAAgB;UAC7BD,GAAJ,EAAS,OAAOF,MAAM,CAACE,GAAD,CAAb;MAETJ,OAAO,CAACM,GAAR,CACED,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;cACZC,IAAI,GAAI,GAAEX,SAAU,IAAGU,IAAK,EAAlC;eACO,IAAIR,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;UACtCQ,OAAM,CAACD,IAAD,EAAO,CAACL,GAAD,EAAMO,IAAN,KAAe;gBACtBP,GAAJ,EAAS,OAAOF,MAAM,CAACE,GAAD,CAAb;;gBAELO,IAAI,IAAIA,IAAI,CAACC,WAAL,EAAZ,EAAgC;qBACvBf,sBAAsB,CAACY,IAAD,EAAOV,QAAP,CAAtB,CACJc,IADI,CACCZ,OADD,EAEJa,KAFI,CAEEZ,MAFF,CAAP;;;gBAIE;cACFF,OAAO,CAACC,OAAR,CACEF,QAAQ,CAAC;gBACPgB,QAAQ,EAAEP,IADH;gBAEPQ,OAAO,EAAElB,SAFF;gBAGPW,IAHO;gBAIPE;eAJM,CADV,EAQGE,IARH,CAQQ,MAAMZ,OAAO,EARrB,EASGa,KATH,CASSZ,MATT;aADF,CAWE,OAAOe,IAAP,EAAa;qBACNf,MAAM,CAACe,IAAD,CAAb;;WApBE,CAAN;SADK,CAAP;OAFF,CADF,EA6BEJ,IA7BF,CA6BO,MAAMZ,OAAO,EA7BpB;KAHK,CAAP;GADK,CAAP;;;ACHa,MAAMiB,iBAAN,CAAwB;EAGrCC,WAAW,CAACC,KAAD,EAA+B;SACnCA,KAAL,GAAaA,KAAb;;;EAGFC,eAAe,GAAG;WACT,KAAKD,KAAL,CACJE,OADI,CACI,EADJ,EACQ;MAAEC,OAAO,EAAE,CAAC;KADpB,EAEJV,IAFI,CAEEW,GAAD,IAASA,GAAG,IAAIA,GAAG,CAACC,OAFrB,CAAP;;;EAKFC,gBAAgB,CAACC,SAAD,EAAwC;WAC/C,KAAKP,KAAL,CAAWQ,SAAX,CAAqBD,SAArB,CAAP;;;;;ACxBJ;AACA,AAQA,MAAME,MAAM,GAAG,IAAIC,MAAJ,CAAW,gBAAX,CAAf;AAEA,AASe,eAAeC,OAAf,CAAuB;EACpCC,GADoC;EAEpCC,iBAFoC;EAGpCC,MAAM,GAAGF,GAAG,CAACE,MAHuB;EAIpCC,OAAO,GAAI,GAAEH,GAAG,CAACG,OAAQ;CAJZ,EAKH;QACJC,yBAAyB,GAAIC,MAAD,IAAiB;IACjDR,MAAM,CAACS,KAAP,CAAa,oBAAb,EAAmC;MAAElC,GAAG,EAAEiC;KAA1C;IACAE,OAAO,CAACC,IAAR,CAAa,CAAb;GAFF;;EAIAD,OAAO,CAACE,EAAR,CAAW,oBAAX,EAAiCL,yBAAjC;QAEMM,cAAc,GAAGR,MAAM,CAACS,aAAP,CAAqBlB,OAA5C;QACMmB,cAAc,GAAG,MAAMX,iBAAiB,CAACZ,eAAlB,EAA7B;MAEIwB,UAAmD,GAAG,EAA1D;EAEAhB,MAAM,CAACiB,IAAP,CAAY,SAAZ,EAAuB;IAAEJ,cAAF;IAAkBE;GAAzC;QAEM/C,sBAAsB,CAACsC,OAAD,EAAWY,GAAD,IAAwB;UACtDC,QAAQ,GAAGD,GAAG,CAACtC,IAAJ,CAASwC,MAAT,CAAgBd,OAAO,CAACe,MAAR,GAAiB,CAAjC,CAAjB;;QAEIF,QAAQ,CAACG,KAAT,CAAe,CAAC,CAAhB,MAAuB,KAA3B,EAAkC;;;;UAI5BC,iBAAiB,GAAG,sBAAsBC,IAAtB,CAA2BL,QAA3B,CAA1B;;QAEI,CAACI,iBAAD,IAAsB,CAACA,iBAAiB,CAAC,CAAD,CAA5C,EAAiD;;;;UAI3C3B,OAAe,GAAG2B,iBAAiB,CAAC,CAAD,CAAzC;QAEIR,cAAc,IAAIU,MAAM,CAACC,GAAP,CAAW9B,OAAX,EAAoBmB,cAApB,CAAtB,EAA2D;IAE3DC,UAAU,CAACW,IAAX,CAAgB;MAAE/B,OAAF;MAAWuB;KAA3B;GAjB0B,CAA5B;EAoBAH,UAAU,GAAGA,UAAU,CAACY,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAC3BL,MAAM,CAACM,EAAP,CAAUF,CAAC,CAACjC,OAAZ,EAAqBkC,CAAC,CAAClC,OAAvB,IAAkC,CAAlC,GAAsC,CAAC,CAD5B,CAAb;;MAII;;SAEG,MAAME,SAAX,IAAwBkB,UAAxB,EAAoC;MAClChB,MAAM,CAACiB,IAAP,CAAa,gBAAenB,SAAS,CAACqB,QAAS,EAA/C;;UACI;;cAEIa,OAAO,CAAE,GAAE1B,OAAQ,IAAGR,SAAS,CAACqB,QAAS,EAAlC,CAAP,CAA4Cc,OAA5C,EAAN;OAFF,CAGE,OAAO1D,GAAP,EAAY;QACZyB,MAAM,CAACS,KAAP,CAAc,gBAAeX,SAAS,CAACF,OAAQ,WAA/C;cACMrB,GAAN;;;MAGFyB,MAAM,CAACkC,OAAP,CAAgB,gBAAepC,SAAS,CAACqB,QAAS,SAAlD,EAVkC;;UAa9BM,MAAM,CAACC,GAAP,CAAW5B,SAAS,CAACF,OAArB,EAA8BiB,cAA9B,CAAJ,EAAmD;cAC3CT,iBAAiB,CAACP,gBAAlB,CAAmCC,SAAnC,CAAN;;;GAhBN,CAmBE,OAAOvB,GAAP,EAAY;IACZyB,MAAM,CAACS,KAAP,CAAalC,GAAb;IACAmC,OAAO,CAACC,IAAR,CAAa,CAAb;;;EAGFD,OAAO,CAACyB,cAAR,CAAuB,oBAAvB,EAA6C5B,yBAA7C;;;;;;"}