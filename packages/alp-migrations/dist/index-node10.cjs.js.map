{"version":3,"file":"index-node10.cjs.js","sources":["../src/readRecursiveDirectory.ts","../src/Manager.ts","../src/index.ts"],"sourcesContent":["import { readdir, stat as fsStat, Stats } from 'fs';\n\nexport interface CallbackParam {\n  filename: string;\n  basedir: string;\n  path: string;\n  stat: Stats;\n}\n\nexport default function readRecursiveDirectory(\n  directory: string,\n  callback: (param: CallbackParam) => void | Promise<void>,\n): Promise<void> {\n  return new Promise((resolve, reject): void => {\n    readdir(directory, (errReadDir, files) => {\n      if (errReadDir) return reject(errReadDir);\n\n      Promise.all(\n        files.map((file) => {\n          const path = `${directory}/${file}`;\n          return new Promise((resolve, reject): void => {\n            fsStat(path, (errFsStat, stat): void => {\n              if (errFsStat) return reject(errFsStat);\n\n              if (stat?.isDirectory()) {\n                readRecursiveDirectory(path, callback)\n                  .then(resolve)\n                  .catch(reject);\n                return;\n              }\n              try {\n                Promise.resolve(\n                  callback({\n                    filename: file,\n                    basedir: directory,\n                    path,\n                    stat,\n                  }),\n                )\n                  .then(() => resolve())\n                  .catch(reject);\n              } catch (err) {\n                return reject(err);\n              }\n            });\n          });\n        }),\n      ).then(() => resolve());\n    });\n  });\n}\n","import { MongoStore, MongoInsertType } from 'liwi-mongo';\n\nexport interface Migration {\n  _id: string;\n  version: string;\n  fileName: string;\n  created: Date;\n  updated: Date;\n}\n\nexport default class MigrationsManager {\n  store: MongoStore<Migration>;\n\n  constructor(store: MongoStore<Migration>) {\n    this.store = store;\n  }\n\n  findLastVersion() {\n    return this.store.findOne({}, { created: -1 }).then((row) => row?.version);\n  }\n\n  addMigrationDone(migration: MongoInsertType<Migration>) {\n    return this.store.insertOne(migration);\n  }\n}\n","/* eslint-disable unicorn/no-process-exit */\nimport semver from 'semver';\nimport Logger from 'nightingale-logger';\nimport { NodeApplication, NodeConfig } from 'alp-types';\nimport readRecursiveDirectory, {\n  CallbackParam,\n} from './readRecursiveDirectory';\nimport MigrationsManager from './Manager';\n\nconst logger = new Logger('alp:migrations');\n\nexport { default as MigrationsManager } from './Manager';\n\nexport interface Options {\n  app: NodeApplication;\n  migrationsManager: MigrationsManager;\n  config?: NodeConfig;\n  dirname?: string;\n}\n\nexport default async function migrate({\n  app,\n  migrationsManager,\n  config = app.config,\n  dirname = `${app.dirname}/migrations`,\n}: Options) {\n  const unhandledRejectionHandler = (reason: any) => {\n    logger.error('unhandledRejection', { err: reason });\n    process.exit(1);\n  };\n  process.on('unhandledRejection', unhandledRejectionHandler);\n\n  const packageVersion = config.packageConfig.version;\n  const currentVersion = await migrationsManager.findLastVersion();\n\n  let migrations: { version: string; fileName: string }[] = [];\n\n  logger.info('migrate', { packageVersion, currentVersion });\n\n  await readRecursiveDirectory(dirname, (res: CallbackParam) => {\n    const fileName = res.path.slice(dirname.length + 1);\n\n    if (!fileName.endsWith('.js')) {\n      return;\n    }\n\n    const versionExecResult = /([\\d.]+)(_.*|\\.js)$/.exec(fileName);\n\n    if (!versionExecResult || !versionExecResult[1]) {\n      return;\n    }\n\n    const version: string = versionExecResult[1];\n\n    if (currentVersion && semver.lte(version, currentVersion)) return;\n\n    migrations.push({ version, fileName });\n  });\n\n  migrations = migrations.sort((a, b) =>\n    semver.gt(a.version, b.version) ? 1 : -1,\n  );\n\n  try {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const migration of migrations) {\n      logger.info(`Migration to ${migration.fileName}`);\n      try {\n        // eslint-disable-next-line global-require, import/no-dynamic-require, no-await-in-loop\n        await require(`${dirname}/${migration.fileName}`).default();\n      } catch (err) {\n        logger.error(`Migration to ${migration.version} Failed !`);\n        throw err;\n      }\n\n      logger.success(`Migration to ${migration.fileName} done !`);\n\n      // only add to db if migration version <= package version\n      if (semver.lte(migration.version, packageVersion)) {\n        await migrationsManager.addMigrationDone(migration);\n      }\n    }\n  } catch (err) {\n    logger.error(err);\n    process.exit(1);\n  }\n\n  process.removeListener('unhandledRejection', unhandledRejectionHandler);\n}\n"],"names":["readRecursiveDirectory","directory","callback","Promise","resolve","reject","readdir","errReadDir","files","all","map","file","path","fsStat","errFsStat","stat","isDirectory","then","catch","filename","basedir","err","MigrationsManager","constructor","store","findLastVersion","findOne","created","row","version","addMigrationDone","migration","insertOne","logger","Logger","migrate","app","migrationsManager","config","dirname","unhandledRejectionHandler","reason","error","process","exit","on","packageVersion","packageConfig","currentVersion","migrations","info","res","fileName","slice","length","endsWith","versionExecResult","exec","semver","lte","push","sort","a","b","gt","require","default","success","removeListener"],"mappings":"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"}