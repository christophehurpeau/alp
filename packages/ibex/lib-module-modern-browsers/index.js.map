{"version":3,"sources":["../src/index.js"],"names":["Logger","EventEmitter","compose","context","request","response","logger","respond","ctx","body","document","innerHTML","nodeType","appendChild","Error","Application","constructor","middleware","Object","create","app","state","environment","env","use","fn","debug","name","push","onerror","e","error","run","url","listeners","length","on","callback","load","createContext","startsWith","window","location","pathname","then","catch","emit","err"],"mappings":"AAAA;AACA;;AAEA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAS,IAAIN,MAAJ,CAAW,MAAX,CAAf;;AAEA,SAASO,OAAT,CAAiBC,GAAjB,EAAsB;AACpB;;;AAQA;;AAPA,MAAIA,IAAID,OAAJ,KAAgB,KAApB;;AAIA,UAAIE,OAAOD,IAAIC,IAAf;AACA,UAAIA,QAAQ,IAAZ;AAIA,cAAI,OAAOA,IAAP,KAAgB,QAApB,EAEE,aADAC,SAASD,IAAT,CAAcE,SAAd,GAA0BF,IAC1B;;AAQF,gBALIA,KAAKG,QAKT,KAJEF,SAASD,IAAT,CAAcE,SAAd,GAA0B,EAI5B,EAHED,SAASD,IAAT,CAAcI,WAAd,CAA0BJ,IAA1B,CAGF,GAAM,IAAIK,KAAJ,CAAU,qBAAV,CAAN;AAdA;AALA;AAoBD;;IAEoBC,W,GAAN,cAA0Bd,YAA1B,CAAuC;;AAIpDe,gBAAc;AACZ,WADY,EAEZ,KAAKC,UAAL,KAFY,EAGZ,KAAKd,OAAL,GAAee,OAAOC,MAAP,CAAchB,OAAd,CAHH,EAIZ,KAAKA,OAAL,CAAaiB,GAAb,GAAmB,IAJP,EAKZ,KAAKjB,OAAL,CAAakB,KAAb,KALY;AAMb;;AAED,MAAIC,WAAJ,GAA0B;AACxB,WAAO,KAAKC,GAAZ;AACD;;AAEDC,MAAIC,EAAJ,EAAkB;AAGhB,WAFAnB,OAAOoB,KAAP,CAAa,KAAb,EAAoB,EAAEC,MAAMF,GAAGE,IAAH,IAAW,GAAnB,EAApB,CAEA,EADA,KAAKV,UAAL,CAAgBW,IAAhB,CAAqBH,EAArB,CACA,EAAO,IAAP;AACD;;AAEDI,UAAQC,CAAR,EAAgB;AACdxB,WAAOyB,KAAP,CAAaD,CAAb,CADc;AAEf;;AAEDE,MAAIC,GAAJ,EAAgB;AACT,SAAKC,SAAL,CAAe,OAAf,EAAwBC,MADf,IAEZ,KAAKC,EAAL,CAAQ,OAAR,EAAiB,KAAKP,OAAtB,CAFY,EAKd,KAAKQ,QAAL,GAAgBnC,QAAQ,KAAKe,UAAb,CALF,EAOVgB,GAPU,IAQZ,KAAKK,IAAL,CAAUL,GAAV,CARY;AAUf;;AAEDM,kBAAgB;AACd,UAAMpC,UAAUe,OAAOC,MAAP,CAAc,KAAKhB,OAAnB,CAAhB;;AAKA,WAJAA,QAAQC,OAAR,GAAkBc,OAAOC,MAAP,CAAcf,OAAd,CAIlB,EAHAD,QAAQE,QAAR,GAAmBa,OAAOC,MAAP,CAAcd,QAAd,CAGnB,EADAF,QAAQC,OAAR,CAAgBgB,GAAhB,GAAsBjB,QAAQE,QAAR,CAAiBe,GAAjB,GAAuB,IAC7C,EAAOjB,OAAP;AACD;;AAEDmC,OAAKL,GAAL,EAAkB;AAAA;;AAChB3B,WAAOoB,KAAP,CAAa,MAAb,EAAqB,EAAEO,GAAF,EAArB,CADgB,EAGZA,IAAIO,UAAJ,CAAe,GAAf,CAHY,KAIdP,MAAMQ,OAAOC,QAAP,CAAgBC,QAAhB,GAA2BV,GAJnB;;;AAOhB,UAAM9B,UAAU,KAAKoC,aAAL,EAAhB;AACA,WAAO,KAAKF,QAAL,CAAclC,OAAd,EACJyC,IADI,CACC;AAAA,aAAMrC,QAAQJ,OAAR,CAAN;AAAA,KADD,EAEJ0C,KAFI,CAEE;AAAA,aAAO,MAAKC,IAAL,CAAU,OAAV,EAAmBC,GAAnB,CAAP;AAAA,KAFF,CAAP;AAGD;AA1DmD,C;SAAjChC,W","file":"index.js","sourcesContent":["/* eslint class-methods-use-this: 'off' */\n/* global window, document */\n\nimport Logger from 'nightingale-logger';\nimport { EventEmitter } from 'events';\nimport compose from './compose';\nimport context from './context';\nimport request from './request';\nimport response from './response';\n\nconst logger = new Logger('ibex');\n\nfunction respond(ctx) {\n  // allow bypassing\n  if (ctx.respond === false) {\n    return;\n  }\n\n  let body = ctx.body;\n  if (body == null) return;\n\n  // const code = ctx.status;\n\n  if (typeof body === 'string') {\n    document.body.innerHTML = body;\n    return;\n  }\n\n  if (body.nodeType) {\n    document.body.innerHTML = '';\n    document.body.appendChild(body);\n  }\n\n  throw new Error('Invalid body result');\n}\n\nexport default class Application extends EventEmitter {\n  middleware: Array<Function>;\n  context: Object;\n\n  constructor() {\n    super();\n    this.middleware = [];\n    this.context = Object.create(context);\n    this.context.app = this;\n    this.context.state = {};\n  }\n\n  get environment(): string {\n    return this.env;\n  }\n\n  use(fn: Function) {\n    logger.debug('use', { name: fn.name || '-' });\n    this.middleware.push(fn);\n    return this;\n  }\n\n  onerror(e: any) {\n    logger.error(e);\n  }\n\n  run(url: mixed) {\n    if (!this.listeners('error').length) {\n      this.on('error', this.onerror);\n    }\n\n    this.callback = compose(this.middleware);\n\n    if (url) {\n      this.load(url);\n    }\n  }\n\n  createContext() {\n    const context = Object.create(this.context);\n    context.request = Object.create(request);\n    context.response = Object.create(response);\n    // eslint-disable-next-line no-multi-assign\n    context.request.app = context.response.app = this;\n    return context;\n  }\n\n  load(url: string) {\n    logger.debug('load', { url });\n\n    if (url.startsWith('?')) {\n      url = window.location.pathname + url;\n    }\n\n    const context = this.createContext();\n    return this.callback(context)\n      .then(() => respond(context))\n      .catch(err => this.emit('error', err));\n  }\n}\n"]}