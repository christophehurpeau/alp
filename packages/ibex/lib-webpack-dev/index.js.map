{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAEA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAAS,YAAT,QAA6B,QAA7B;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,OAAP,MAAoB,WAApB;;AAEA,IAAM,SAAS,IAAI,MAAJ,CAAW,MAAX,CAAf;;IAEqB,W;;;AAIjB,2BAAc;AAAA;;AAAA;;AAEV,cAAK,UAAL,GAAkB,EAAlB;;AAFU,4BAEV,MAAK,UAFK,KAEV,MAAK,UAFK;AAAA;AAAA;AAAA,mIAEV,MAAK,UAFK;AAAA;;AAGV,cAAK,OAAL,GAAe,OAAO,MAAP,CAAc,OAAd,CAAf;;AAHU,cAGV,MAAK,OAHK,YAFL,MAEK;AAAA,uHAGV,MAAK,OAHK;AAAA;;AAIV,cAAK,OAAL,CAAa,GAAb;AAJU;AAKb;;;;4BAMG,E,EAAc;AAAA,yBAAd,EAAc;AAAA,4HAAd,EAAc;AAAA;;AACd,mBAAO,KAAP,CAAa,KAAb,EAAoB,EAAE,MAAM,GAAG,IAAH,IAAW,GAAnB,EAApB;AACA,iBAAK,UAAL,CAAgB,IAAhB,CAAqB,EAArB;AACA,mBAAO,IAAP;AACH;;;gCAEO,C,EAAQ;AACZ,mBAAO,KAAP,CAAa,CAAb;AACH;;;4BAEG,G,EAAY;AACZ,gBAAI,CAAC,KAAK,SAAL,CAAe,OAAf,EAAwB,MAA7B,EAAqC;AACjC,qBAAK,EAAL,CAAQ,OAAR,EAAiB,KAAK,OAAtB;AACH;;AAED,iBAAK,QAAL,GAAgB,QAAQ,KAAK,UAAb,CAAhB;;AAEA,gBAAI,GAAJ,EAAS;AACL,qBAAK,IAAL,CAAU,GAAV;AACH;AACJ;;;wCAEe;AACZ,gBAAM,UAAU,OAAO,MAAP,CAAc,KAAK,OAAnB,CAAhB;AACA,oBAAQ,OAAR,GAAkB,OAAO,MAAP,CAAc,OAAd,CAAlB;AACA,oBAAQ,KAAR,GAAgB,EAAhB;AACA,mBAAO,OAAP;AACH;;;6BAEI,G,EAAa;AAAA;;AAAA,yBAAb,GAAa;AAAA,2HAAb,GAAa;AAAA;;AACd,mBAAO,KAAP,CAAa,MAAb,EAAqB,EAAE,QAAF,EAArB;;AAEA,gBAAI,IAAI,UAAJ,CAAe,GAAf,CAAJ,EAAyB;AACrB,sBAAM,OAAO,QAAP,CAAgB,QAAhB,GAA2B,GAAjC;AACH;;AAED,gBAAM,UAAU,KAAK,aAAL,EAAhB;AACA,oBAAQ,IAAR,GAAe,GAAf;AACA,iBAAK,QAAL,CAAc,IAAd,CAAmB,OAAnB,EACK,IADL,CACU;AAAA,uBAAM,QAAQ,IAAR,CAAa,OAAb,CAAN;AAAA,aADV,EAEK,KAFL,CAEW,UAAC,GAAD;AAAA,uBAAS,OAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB,CAAT;AAAA,aAFX;AAGH;;;4BA7CyB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,wBACf,KAAK,GADU;AAEzB;;;;EAboC,Y;;eAApB,W;;;AA2DrB,SAAS,OAAT,GAAmB;AACf;AACA,QAAI,KAAK,OAAL,KAAiB,KAArB,EAA4B;AACxB;AACH;;AAED,QAAI,OAAO,KAAK,IAAhB;AACA,QAAI,QAAQ,IAAZ,EAAkB;;AAElB;;AAEA,QAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC1B,iBAAS,IAAT,CAAc,SAAd,GAA0B,IAA1B;AACA;AACH;;AAED,QAAI,KAAK,QAAT,EAAmB;AACf,iBAAS,IAAT,CAAc,SAAd,GAA0B,EAA1B;AACA,iBAAS,IAAT,CAAc,WAAd,CAA0B,IAA1B;AACH;;AAED,UAAM,IAAI,KAAJ,CAAU,qBAAV,CAAN;AACH","file":"index.js","sourcesContent":["/* global window, document */\n\nimport Logger from 'nightingale-logger';\nimport { EventEmitter } from 'events';\nimport compose from './compose';\nimport context from './context';\nimport request from './request';\n\nconst logger = new Logger('ibex');\n\nexport default class Application extends EventEmitter {\n    middleware: Array<Function>;\n    context: Object;\n\n    constructor() {\n        super();\n        this.middleware = [];\n        this.context = Object.create(context);\n        this.context.app = this;\n    }\n\n    get environment(): string {\n        return this.env;\n    }\n\n    use(fn: Function) {\n        logger.debug('use', { name: fn.name || '-' });\n        this.middleware.push(fn);\n        return this;\n    }\n\n    onerror(e: any) {\n        logger.error(e);\n    }\n\n    run(url: mixed) {\n        if (!this.listeners('error').length) {\n            this.on('error', this.onerror);\n        }\n\n        this.callback = compose(this.middleware);\n\n        if (url) {\n            this.load(url);\n        }\n    }\n\n    createContext() {\n        const context = Object.create(this.context);\n        context.request = Object.create(request);\n        context.state = {};\n        return context;\n    }\n\n    load(url: string) {\n        logger.debug('load', { url });\n\n        if (url.startsWith('?')) {\n            url = window.location.pathname + url;\n        }\n\n        const context = this.createContext();\n        context.path = url;\n        this.callback.call(context)\n            .then(() => respond.call(context))\n            .catch((err) => this.emit('error', err));\n    }\n}\n\nfunction respond() {\n    // allow bypassing\n    if (this.respond === false) {\n        return;\n    }\n\n    let body = this.body;\n    if (body == null) return;\n\n    // let code = this.status;\n\n    if (typeof body === 'string') {\n        document.body.innerHTML = body;\n        return;\n    }\n\n    if (body.nodeType) {\n        document.body.innerHTML = '';\n        document.body.appendChild(body);\n    }\n\n    throw new Error('Invalid body result');\n}\n"]}