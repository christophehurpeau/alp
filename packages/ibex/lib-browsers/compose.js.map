{"version":3,"sources":["../src/compose.js"],"names":[],"mappings":";;;;;kBAEwB,O;AAFxB;AACA;AACe,SAAS,OAAT,CAAiB,UAAjB,EAA8C;AACzD,WAAO,UAAU,GAAV,EAAe;AAClB,YAAI,UAAJ;AACA,eAAQ,SAAS,QAAT,CAAkB,CAAlB,EAAqB;AACzB,gBAAI,KAAK,KAAT,EAAgB;AACZ,uBAAO,QAAQ,MAAR,CAAe,IAAI,KAAJ,OAAf,CAAP;AACH;AACD,oBAAQ,CAAR,CAJyB,CAId;;AAEX,gBAAM,KAAK,WAAW,CAAX,CAAX;;;AAGA,gBAAI,SAAS,KAAb;AACA,gBAAI;AACA,uBAAO,QAAQ,OAAR,CAAgB,GAAG,IAAH,CAAQ,GAAR,EAAa,GAAb,EAAkB,YAAM;AAC3C,wBAAI,MAAJ,EAAY,MAAM,IAAI,KAAJ,OAAN;AACZ,6BAAS,IAAT;AACA,2BAAO,SAAS,IAAI,CAAb,CAAP;AACH,iBAJsB,CAAhB,CAAP;AAKH,aAND,CAME,OAAO,CAAP,EAAU;AACR,uBAAO,QAAQ,MAAR,CAAe,CAAf,CAAP;AACH;AACJ,SAnBO,CAmBN,CAnBM,CAAR;AAoBH,KAtBD;AAuBH","file":"compose.js","sourcesContent":["/* global PRODUCTION */\n// create lib\nexport default function compose(middleware: Array<Function>) {\n    return function (ctx) {\n        let index = -1;\n        return (function dispatch(i) {\n            if (i <= index) {\n                return Promise.reject(new Error(!PRODUCTION && 'next() called multiple times'));\n            }\n            index = i; // #if !PRODUCTION\n\n            const fn = middleware[i];\n            if (!PRODUCTION && !fn) throw new Error(!PRODUCTION && `Invalid fn ${i}`);\n\n            let called = false;\n            try {\n                return Promise.resolve(fn.call(ctx, ctx, () => {\n                    if (called) throw new Error(!PRODUCTION && 'Cannot call next() more than once.');\n                    called = true;\n                    return dispatch(i + 1);\n                }));\n            } catch (e) {\n                return Promise.reject(e);\n            }\n        }(0));\n    };\n}\n"]}