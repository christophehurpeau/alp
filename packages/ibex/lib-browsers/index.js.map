{"version":3,"sources":["../src/index.js"],"names":["logger","respond","ctx","body","document","innerHTML","nodeType","appendChild","Error","Application","context","state","middleware","Object","create","app","fn","debug","name","push","e","error","url","listeners","length","on","onerror","callback","load","request","response","startsWith","window","location","pathname","createContext","then","catch","emit","err","env"],"mappings":";;;;;;;;;AAGA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;2eARA;AACA;;AASA,IAAMA,SAAS,gCAAW,MAAX,CAAf;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB;;;AAQA;;AAPA,MAAIA,IAAID,OAAJ,KAAgB,KAApB;;AAIA,UAAIE,OAAOD,IAAIC,IAAf;AACA,UAAIA,QAAQ,IAAZ;AAIA,cAAI,OAAOA,IAAP,KAAgB,QAApB,EAEE,aADAC,SAASD,IAAT,CAAcE,SAAd,GAA0BF,IAC1B;;AAQF,gBALIA,KAAKG,QAKT,KAJEF,SAASD,IAAT,CAAcE,SAAd,GAA0B,EAI5B,EAHED,SAASD,IAAT,CAAcI,WAAd,CAA0BJ,IAA1B,CAGF,GAAM,IAAIK,KAAJ,CAAU,qBAAV,CAAN;AAdA;AALA;AAoBD;;IAEoBC,W;AAInB,yBAAc;AAAA;;AAAA;;AAAA,WAKZ,MAAKC,OAAL,CAAaC,KAAb,KALY,EAEZ,MAAKC,UAAL,KAFY,EAGZ,MAAKF,OAAL,GAAeG,OAAOC,MAAP,mBAHH,EAIZ,MAAKJ,OAAL,CAAaK,GAAb,QAJY,EAKZ,MAAKL,OAAL,CAAaC,KAAb,KALY;AAMb;;;;wBAMGK,E,EAAc;AAGhB,aAFAhB,OAAOiB,KAAP,CAAa,KAAb,EAAoB,EAAEC,MAAMF,GAAGE,IAAH,IAAW,GAAnB,EAApB,CAEA,EADA,KAAKN,UAAL,CAAgBO,IAAhB,CAAqBH,EAArB,CACA,EAAO,IAAP;AACD;;;4BAEOI,C,EAAQ;AACdpB,aAAOqB,KAAP,CAAaD,CAAb,CADc;AAEf;;;wBAEGE,G,EAAY;AACT,WAAKC,SAAL,CAAe,OAAf,EAAwBC,MADf,IAEZ,KAAKC,EAAL,CAAQ,OAAR,EAAiB,KAAKC,OAAtB,CAFY,EAKd,KAAKC,QAAL,GAAgB,uBAAQ,KAAKf,UAAb,CALF,EAOVU,GAPU,IAQZ,KAAKM,IAAL,CAAUN,GAAV,CARY;AAUf;;;oCAEe;AACd,UAAMZ,UAAUG,OAAOC,MAAP,CAAc,KAAKJ,OAAnB,CAAhB;;AAKA,aAJAA,QAAQmB,OAAR,GAAkBhB,OAAOC,MAAP,mBAIlB,EAHAJ,QAAQoB,QAAR,GAAmBjB,OAAOC,MAAP,oBAGnB,EADAJ,QAAQmB,OAAR,CAAgBd,GAAhB,GAAsBL,QAAQoB,QAAR,CAAiBf,GAAjB,GAAuB,IAC7C,EAAOL,OAAP;AACD;;;yBAEIY,G,EAAa;AAAA;;AAChBtB,aAAOiB,KAAP,CAAa,MAAb,EAAqB,EAAEK,QAAF,EAArB,CADgB,EAGZA,IAAIS,UAAJ,CAAe,GAAf,CAHY,KAIdT,MAAMU,OAAOC,QAAP,CAAgBC,QAAhB,GAA2BZ,GAJnB;;;AAOhB,UAAMZ,UAAU,KAAKyB,aAAL,EAAhB;AACA,aAAO,KAAKR,QAAL,CAAcjB,OAAd,EACJ0B,IADI,CACC;AAAA,eAAMnC,QAAQS,OAAR,CAAN;AAAA,OADD,EAEJ2B,KAFI,CAEE;AAAA,eAAO,OAAKC,IAAL,CAAU,OAAV,EAAmBC,GAAnB,CAAP;AAAA,OAFF,CAAP;AAGD;;;wBA9CyB;AACxB,aAAO,KAAKC,GAAZ;AACD;;;;kBAdkB/B,W","file":"index.js","sourcesContent":["/* eslint class-methods-use-this: 'off' */\n/* global window, document */\n\nimport Logger from 'nightingale-logger';\nimport { EventEmitter } from 'events';\nimport compose from './compose';\nimport context from './context';\nimport request from './request';\nimport response from './response';\n\nconst logger = new Logger('ibex');\n\nfunction respond(ctx) {\n  // allow bypassing\n  if (ctx.respond === false) {\n    return;\n  }\n\n  let body = ctx.body;\n  if (body == null) return;\n\n  // const code = ctx.status;\n\n  if (typeof body === 'string') {\n    document.body.innerHTML = body;\n    return;\n  }\n\n  if (body.nodeType) {\n    document.body.innerHTML = '';\n    document.body.appendChild(body);\n  }\n\n  throw new Error('Invalid body result');\n}\n\nexport default class Application extends EventEmitter {\n  middleware: Array<Function>;\n  context: Object;\n\n  constructor() {\n    super();\n    this.middleware = [];\n    this.context = Object.create(context);\n    this.context.app = this;\n    this.context.state = {};\n  }\n\n  get environment(): string {\n    return this.env;\n  }\n\n  use(fn: Function) {\n    logger.debug('use', { name: fn.name || '-' });\n    this.middleware.push(fn);\n    return this;\n  }\n\n  onerror(e: any) {\n    logger.error(e);\n  }\n\n  run(url: mixed) {\n    if (!this.listeners('error').length) {\n      this.on('error', this.onerror);\n    }\n\n    this.callback = compose(this.middleware);\n\n    if (url) {\n      this.load(url);\n    }\n  }\n\n  createContext() {\n    const context = Object.create(this.context);\n    context.request = Object.create(request);\n    context.response = Object.create(response);\n    // eslint-disable-next-line no-multi-assign\n    context.request.app = context.response.app = this;\n    return context;\n  }\n\n  load(url: string) {\n    logger.debug('load', { url });\n\n    if (url.startsWith('?')) {\n      url = window.location.pathname + url;\n    }\n\n    const context = this.createContext();\n    return this.callback(context)\n      .then(() => respond(context))\n      .catch(err => this.emit('error', err));\n  }\n}\n"]}