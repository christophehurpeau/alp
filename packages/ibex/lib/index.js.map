{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,SAAS,+BAAkB,MAAlB,CAAT;;IAEe;;;;;;;;;AAIjB,aAJiB,WAIjB,GAAc;8BAJG,aAIH;;2EAJG,yBAIH;;AAEV,cAAK,UAAL,GAAkB,EAAlB,CAFU;AAGV,cAAK,OAAL,GAAe,OAAO,MAAP,mBAAf,CAHU;;KAAd;;iBAJiB;;;;;8BAcb,IAAc;AACd,mBAAO,KAAP,CAAa,KAAb,EAAoB,EAAE,MAAM,GAAG,IAAH,IAAW,GAAX,EAA5B,EADc;AAEd,iBAAK,UAAL,CAAgB,IAAhB,CAAqB,EAArB,EAFc;AAGd,mBAAO,IAAP,CAHc;;;;;;;kCAMV,GAAQ;AACZ,mBAAO,KAAP,CAAa,CAAb,EADY;;;;;;;8BAIZ,KAAY;AACZ,gBAAI,CAAC,KAAK,SAAL,CAAe,OAAf,EAAwB,MAAxB,EAAgC;AACjC,qBAAK,EAAL,CAAQ,OAAR,EAAiB,KAAK,OAAL,CAAjB,CADiC;aAArC;;AAIA,iBAAK,QAAL,GAAgB,uBAAQ,KAAK,UAAL,CAAxB,CALY;;AAOZ,gBAAI,GAAJ,EAAS;AACL,qBAAK,IAAL,CAAU,GAAV,EADK;aAAT;;;;;;;+BAKC,KAAa;;;AACd,mBAAO,KAAP,CAAa,MAAb,EAAqB,EAAE,QAAF,EAArB,EADc;;AAGd,gBAAI,IAAI,UAAJ,CAAe,GAAf,CAAJ,EAAyB;AACrB,sBAAM,OAAO,QAAP,CAAgB,QAAhB,GAA2B,GAA3B,CADe;aAAzB;;AAIA,gBAAM,UAAU,OAAO,MAAP,CAAc,KAAK,OAAL,CAAxB,CAPQ;AAQd,oBAAQ,IAAR,GAAe,GAAf,CARc;AASd,iBAAK,QAAL,CAAc,IAAd,CAAmB,OAAnB,EACK,IADL,CACU;uBAAM,QAAQ,IAAR,CAAa,OAAb;aAAN,CADV,CAEK,KAFL,CAEW,UAAC,GAAD;uBAAS,OAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB;aAAT,CAFX,CATc;;;;;;8BA1BQ;AACtB,mBAAO,KAAK,GAAL,CADe;;;;WAVT;;;;;;;;AAmDrB,SAAS,OAAT,GAAmB;;AAEf,QAAI,KAAK,OAAL,KAAiB,KAAjB,EAAwB;AACxB,eADwB;KAA5B;;AAIA,QAAI,CAAC,KAAK,QAAL,EAAe,OAApB;;AAEA,QAAI,OAAO,KAAK,IAAL;;;AARI,QAWX,OAAO,IAAP,KAAgB,QAAhB,EAA0B;AAC1B,iBAAS,IAAT,CAAc,SAAd,GAA0B,IAA1B,CAD0B;AAE1B,eAF0B;KAA9B;;AAKA,QAAI,KAAK,QAAL,EAAe;AACf,iBAAS,IAAT,CAAc,SAAd,GAA0B,EAA1B,CADe;AAEf,iBAAS,IAAT,CAAc,WAAd,CAA0B,IAA1B,EAFe;KAAnB;;AAKA,UAAM,IAAI,KAAJ,CAAU,qBAAV,CAAN,CArBe;CAAnB","file":"index.js","sourcesContent":["import { ConsoleLogger } from 'nightingale';\nimport { EventEmitter } from 'events';\nimport compose from './compose';\nimport context from './context';\n\nconst logger = new ConsoleLogger('ibex');\n\nexport default class Application extends EventEmitter {\n    middleware: Array<Function>;\n    context: Object;\n\n    constructor() {\n        super();\n        this.middleware = [];\n        this.context = Object.create(context);\n    }\n\n    get environment(): string {\n        return this.env;\n    }\n\n    use(fn: Function) {\n        logger.debug('use', { name: fn.name || '-' });\n        this.middleware.push(fn);\n        return this;\n    }\n\n    onerror(e: any) {\n        logger.error(e);\n    }\n\n    run(url: mixed) {\n        if (!this.listeners('error').length) {\n            this.on('error', this.onerror);\n        }\n\n        this.callback = compose(this.middleware);\n\n        if (url) {\n            this.load(url);\n        }\n    }\n\n    load(url: string) {\n        logger.debug('load', { url });\n\n        if (url.startsWith('?')) {\n            url = window.location.pathname + url;\n        }\n\n        const context = Object.create(this.context);\n        context.path = url;\n        this.callback.call(context)\n            .then(() => respond.call(context))\n            .catch((err) => this.emit('error', err));\n    }\n}\n\nfunction respond() {\n    // allow bypassing\n    if (this.respond === false) {\n        return;\n    }\n\n    if (!this.writable) return;\n\n    let body = this.body;\n    // let code = this.status;\n\n    if (typeof body === 'string') {\n        document.body.innerHTML = body;\n        return;\n    }\n\n    if (body.nodeType) {\n        document.body.innerHTML = '';\n        document.body.appendChild(body);\n    }\n\n    throw new Error('Invalid body result');\n}\n"]}