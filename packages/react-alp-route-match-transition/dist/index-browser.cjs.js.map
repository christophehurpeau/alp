{"version":3,"file":"index-browser.cjs.js","sources":["../src/index.tsx"],"sourcesContent":["import { Route, RouteChildrenProps, match as Match } from 'react-router';\nimport React, {\n  ComponentType,\n  FunctionComponent,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport { Transition } from 'react-transition-group';\nimport { Except } from 'type-fest';\n\nexport interface BaseComponentProps<Params> {\n  match: Match<Params> | null;\n  exiting: boolean;\n  onClose: () => void;\n}\n\ninterface WrapperComponentProps {\n  children: ReactNode;\n  visible: boolean;\n}\n\ninterface RouteMatchTransitionProps<\n  Params,\n  ComponentProps extends BaseComponentProps<Params>\n> {\n  path: string;\n  closePath: string;\n  timeout: number;\n  component: ComponentType<ComponentProps>;\n  wrapperComponent?: ComponentType<WrapperComponentProps>;\n}\n\nconst DefaultWrapperComponent: FunctionComponent<WrapperComponentProps> = ({\n  children,\n  visible,\n}): ReactElement => children as ReactElement;\n\nexport default function RouteMatchTransition<\n  Params,\n  AllProps extends { [P in keyof BaseComponentProps<Params>]?: never } &\n    RouteMatchTransitionProps<any, any>\n>({\n  path,\n  closePath,\n  timeout,\n  component: Component,\n  wrapperComponent: WrapperComponent = DefaultWrapperComponent,\n  ...otherProps\n}: RouteMatchTransitionProps<\n  Params,\n  BaseComponentProps<Params> &\n    Except<AllProps, keyof RouteMatchTransitionProps<any, any>>\n> &\n  AllProps): ReactElement {\n  return (\n    <Route path={path}>\n      {({ match, history }: RouteChildrenProps<Params>): ReactElement => {\n        const handleClose = (): void => {\n          history.push(closePath);\n        };\n        return (\n          <Transition\n            exit\n            enter={false}\n            in={Boolean(match !== null)}\n            timeout={timeout}\n          >\n            {(state): ReactElement | null => {\n              switch (state) {\n                case 'entering':\n                case 'entered':\n                case 'exiting':\n                  return (\n                    <Component\n                      match={match}\n                      exiting={state === 'exiting'}\n                      onClose={handleClose}\n                      {...otherProps}\n                    />\n                  );\n                case 'exited':\n                case 'unmounted':\n                  return null;\n              }\n            }}\n          </Transition>\n        );\n      }}\n    </Route>\n  );\n}\n"],"names":["RouteMatchTransition","path","closePath","timeout","Component","component","wrapperComponent","otherProps","Route","match","history","handleClose","push","Transition","Boolean","state"],"mappings":";;;;;;;;;;;AAqCe,SAASA,oBAAT,QAgBW;AAAA,MAXxBC,IAWwB,SAXxBA,IAWwB;AAAA,MAVxBC,SAUwB,SAVxBA,SAUwB;AAAA,MATxBC,OASwB,SATxBA,OASwB;AAAA,MARbC,SAQa,SARxBC,SAQwB;AAAA,oCAPxBC,gBAOwB;AAAA,MANrBC,UAMqB;;AACxB,sBACE,oBAACC,iBAAD;AAAO,IAAA,IAAI,EAAEP;AAAb,KACG,iBAAkE;AAAA,QAA/DQ,KAA+D,SAA/DA,KAA+D;AAAA,QAAxDC,OAAwD,SAAxDA,OAAwD;;AACjE,QAAMC,WAAW,GAAG,SAAdA,WAAc,GAAY;AAC9BD,MAAAA,OAAO,CAACE,IAAR,CAAaV,SAAb;AACD,KAFD;;AAGA,wBACE,oBAACW,+BAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,KAAK,EAAE,KAFT;AAGE,MAAA,EAAE,EAAEC,OAAO,CAACL,KAAK,KAAK,IAAX,CAHb;AAIE,MAAA,OAAO,EAAEN;AAJX,OAMG,UAACY,KAAD,EAAgC;AAC/B,cAAQA,KAAR;AACE,aAAK,UAAL;AACA,aAAK,SAAL;AACA,aAAK,SAAL;AACE,8BACE,oBAAC,SAAD;AACE,YAAA,KAAK,EAAEN,KADT;AAEE,YAAA,OAAO,EAAEM,KAAK,KAAK,SAFrB;AAGE,YAAA,OAAO,EAAEJ;AAHX,aAIMJ,UAJN,EADF;;AAQF,aAAK,QAAL;AACA,aAAK,WAAL;AACE,iBAAO,IAAP;AAdJ;AAgBD,KAvBH,CADF;AA2BD,GAhCH,CADF;AAoCD;;;;"}