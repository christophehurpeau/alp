{"version":3,"file":"index-node10-dev.cjs.js","sources":["../src/index.tsx"],"sourcesContent":["import { Route, RouteChildrenProps, match as Match } from 'react-router';\nimport React, {\n  ComponentType,\n  FunctionComponent,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport { Transition } from 'react-transition-group';\nimport { Except } from 'type-fest';\n\nexport interface BaseComponentProps<Params> {\n  match: Match<Params> | null;\n  exiting: boolean;\n  onClose: () => void;\n}\n\ninterface WrapperComponentProps {\n  children: ReactNode;\n  visible: boolean;\n}\n\ninterface RouteMatchTransitionProps<\n  Params,\n  ComponentProps extends BaseComponentProps<Params>\n> {\n  path: string;\n  closePath: string;\n  timeout: number;\n  component: ComponentType<ComponentProps>;\n  wrapperComponent?: ComponentType<WrapperComponentProps>;\n}\n\nconst DefaultWrapperComponent: FunctionComponent<WrapperComponentProps> = ({\n  children,\n  visible,\n}): ReactElement => children as ReactElement;\n\nexport default function RouteMatchTransition<\n  Params,\n  AllProps extends { [P in keyof BaseComponentProps<Params>]?: never } &\n    RouteMatchTransitionProps<any, any>\n>({\n  path,\n  closePath,\n  timeout,\n  component: Component,\n  wrapperComponent: WrapperComponent = DefaultWrapperComponent,\n  ...otherProps\n}: RouteMatchTransitionProps<\n  Params,\n  BaseComponentProps<Params> &\n    Except<AllProps, keyof RouteMatchTransitionProps<any, any>>\n> &\n  AllProps): ReactElement {\n  return (\n    <Route path={path}>\n      {({ match, history }: RouteChildrenProps<Params>): ReactElement => {\n        const handleClose = (): void => {\n          history.push(closePath);\n        };\n        return (\n          <Transition\n            exit\n            enter={false}\n            in={Boolean(match !== null)}\n            timeout={timeout}\n          >\n            {(state): ReactElement | null => {\n              switch (state) {\n                case 'entering':\n                case 'entered':\n                case 'exiting':\n                  return (\n                    <Component\n                      match={match}\n                      exiting={state === 'exiting'}\n                      onClose={handleClose}\n                      {...otherProps}\n                    />\n                  );\n                case 'exited':\n                case 'unmounted':\n                  return null;\n              }\n            }}\n          </Transition>\n        );\n      }}\n    </Route>\n  );\n}\n"],"names":["DefaultWrapperComponent","children","visible","RouteMatchTransition","path","closePath","timeout","component","Component","wrapperComponent","WrapperComponent","otherProps","Route","match","history","handleClose","push","Transition","Boolean","state"],"mappings":";;;;;;;;;;AAgCA,MAAMA,uBAAiE,GAAG,CAAC;EACzEC,QADyE;EAEzEC;CAFwE,KAGtDD,QAHpB;;AAKA,AAAe,SAASE,oBAAT,CAIb;EACAC,IADA;EAEAC,SAFA;EAGAC,OAHA;EAIAC,SAAS,EAAEC,SAJX;EAKAC,gBAAgB,EAAEC,gBAAgB,GAAGV,uBALrC;KAMGW;CAVU,EAgBW;SAEtB,oBAACC,iBAAD;IAAO,IAAI,EAAER;KACV,CAAC;IAAES,KAAF;IAASC;GAAV,KAAkE;UAC3DC,WAAW,GAAG,MAAY;MAC9BD,OAAO,CAACE,IAAR,CAAaX,SAAb;KADF;;WAIE,oBAACY,+BAAD;MACE,IAAI,MADN;MAEE,KAAK,EAAE,KAFT;MAGE,EAAE,EAAEC,OAAO,CAACL,KAAK,KAAK,IAAX,CAHb;MAIE,OAAO,EAAEP;OAEPa,KAAD,IAAgC;cACvBA,KAAR;aACO,UAAL;aACK,SAAL;aACK,SAAL;iBAEI,oBAAC,SAAD;YACE,KAAK,EAAEN,KADT;YAEE,OAAO,EAAEM,KAAK,KAAK,SAFrB;YAGE,OAAO,EAAEJ;aACLJ,UAJN,EADF;;aAQG,QAAL;aACK,WAAL;iBACS,IAAP;;KArBR,CADF;GALJ,CADF;;;;;"}