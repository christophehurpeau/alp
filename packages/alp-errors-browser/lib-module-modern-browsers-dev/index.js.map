{"version":3,"sources":["../src/index.js"],"names":["ErrorHtmlRenderer","Logger","logger","errorHtmlRenderer","ctx","next","err","Error","status","error","body","render"],"mappings":"AAAA,OAAOA,iBAAP;AACA,OAAOC,MAAP;;AAEA,MAAMC,SAAS,IAAID,MAAJ,CAAW,YAAX,CAAf;AACA,MAAME,oBAAoB,IAAIH,iBAAJ,EAA1B;;AAEA,gBAAe,qBAAeI,GAAf,EAAoBC,IAApB,EAA0B;AACvC,MAAI;AACF,UAAMA,MADJ;AAEH,GAFD,CAEE,OAAOC,GAAP,EAAY;AAEPA,OAFO,KAEFA,MAAM,IAAIC,KAAJ,CAAU,eAAV,CAFJ,GAIR,OAAOD,GAAP,KAAe,QAJP,KAIiBA,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAJvB,GAMZF,IAAII,MAAJ,GAAaF,IAAIE,MAAJ,IAAc,GANf,EAQZN,OAAOO,KAAP,CAAaH,GAAb,CARY;AAUVF,QAAIM,IAAJ,GAAWP,kBAAkBQ,MAAlB,CAAyBL,GAAzB,CAVD;AAgBb;AACF,CApBD","file":"index.js","sourcesContent":["import ErrorHtmlRenderer from 'error-html/src';\nimport Logger from 'nightingale-logger/src';\n\nconst logger = new Logger('alp:errors');\nconst errorHtmlRenderer = new ErrorHtmlRenderer();\n\nexport default async function(ctx, next) {\n  try {\n    await next();\n  } catch (err) {\n    // eslint-disable-next-line no-ex-assign\n    if (!err) err = new Error('Unknown error');\n    // eslint-disable-next-line no-ex-assign\n    if (typeof err === 'string') err = new Error(err);\n\n    ctx.status = err.status || 500;\n\n    logger.error(err);\n    if (!PRODUCTION) {\n      ctx.body = errorHtmlRenderer.render(err);\n    } else if (err.expose) {\n      ctx.body = err.message;\n    } else {\n      throw err;\n    }\n  }\n}\n"]}