{"version":3,"sources":["../src/index.js"],"names":["parse","parseError","Logger","logger","ctx","next","Error","status","parsedError","error","body","stack"],"mappings":";;AAAA,SAASA,SAASC,UAAlB,QAAoC,UAApC;AACA;AACA,OAAOC,MAAP;;AAEA,IAAMC,SAAS,IAAID,MAAJ,CAAW,YAAX,CAAf;AACA;;AAEA;AAAA,uDAAe,iBAAgBE,GAAhB,EAAqBC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAELA,MAFK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIX;AACA,gBAAI,YAAJ,EAAU,cAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACV;AACA,gBAAI,uBAAe,QAAnB,EAA6B,cAAM,IAAIA,KAAJ,aAAN;;AAE7BF,gBAAIG,MAAJ,GAAa,YAAIA,MAAJ,IAAc,GAA3B;;AAGQC,uBAZG,GAYWP,uBAZX;;AAaTE,mBAAOM,KAAP,CAAaD,WAAb;AACA;AACAJ,gBAAIM,IAAJ,GAAWF,YAAYG,KAAvB;AACA;AACA;;AAjBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","file":"index.js","sourcesContent":["import { parse as parseError } from 'alouette';\n// import ErrorHtmlRenderer from 'alouette/lib/HtmlRenderer';\nimport Logger from 'nightingale-logger/src';\n\nconst logger = new Logger('alp:errors');\n// const errorHtmlRenderer = new ErrorHtmlRenderer();\n\nexport default async function (ctx, next) {\n  try {\n    await next();\n  } catch (err) {\n    // eslint-disable-next-line no-ex-assign\n    if (!err) err = new Error('Unknown error');\n    // eslint-disable-next-line no-ex-assign\n    if (typeof err === 'string') err = new Error(err);\n\n    ctx.status = err.status || 500;\n\n    if (!PRODUCTION) {\n      const parsedError = parseError(err);\n      logger.error(parsedError);\n      // ctx.body = errorHtmlRenderer.render(parsedError);\n      ctx.body = parsedError.stack;\n      // eslint-disable-next-line no-debugger, no-restricted-syntax\n      debugger;\n    } else {\n      logger.error(err);\n      if (err.expose) {\n        ctx.body = err.message;\n      } else {\n        throw err;\n      }\n    }\n  }\n}\n"]}