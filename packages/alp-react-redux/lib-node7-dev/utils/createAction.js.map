{"version":3,"sources":["../../src/utils/createAction.js"],"names":["createAction","type","argsNamesOrHandler","data","Error","action","typeofSecondArg","args","split","forEach","value","index","toString"],"mappings":";;;;;kBAEwBA,Y;;;;;;;;AAFxB;;AAEe,SAASA,YAAT,CACXC,IADW,EAEXC,kBAFW,EAGXC,IAHW,EAIb;AAAA,kBAHM,8BAGN;;AAAA,gCAFoB,4BAAC,+BAAC,4BAAM,8BAAN,CAAD,CAAD,EAAgB,8BAAhB,EAAuB,gCAAvB,CAEpB;;AAAA,kBADM,+BAAE,8BAAF,CACN;;AAAA;;AAAA;;AAAA;;AAEE,MAAID,sBAAsB,OAAOA,kBAAP,KAA8B,UAAxD,EAAoE;AAClE,UAAM,IAAIE,KAAJ,CAAU,8BAAV,CAAN;AACD;AACD,MAAID,IAAJ,EAAU,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;;;AAGZ,MAAIC,MAAJ;;AAEA,QAAMC,kBAAkB,OAAOJ,kBAA/B;;AAEA,MAAII,oBAAoB,UAAxB,EAAoC;AAClCD,aAAS,CAAC,GAAGE,IAAJ,qBAAgBN,IAAhB,IAAyBE,IAAzB,EAAkCD,mBAAmB,GAAGK,IAAtB,CAAlC,CAAT;AACD,GAFD,MAEO;AACL,QAAID,oBAAoB,QAAxB,EAAkC;AAChCJ,0DAAqBA,mBAAmBM,KAAnB,CAAyB,GAAzB,CAArB;AACD;;AAED,QAAIN,kBAAJ,EAAwB;AACtBG,eAAS,CAAC,GAAGE,IAAJ,KAAa;AACpB,cAAMF,yBAAWJ,IAAX,IAAoBE,IAApB,CAAN;AACAI,aAAKE,OAAL,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAkBN,OAAOH,mBAAmBS,KAAnB,CAAP,IAAoCD,KAAnE;AACA,eAAOL,MAAP;AACD,OAJD;AAKD,KAND,MAMO;AACLA,eAAUE,IAAD;AAAA,wBAAK,+BAAG,8BAAH,CAAL;;AAAA;;AAAA,+BAAsBN,IAAtB,IAA+BE,IAA/B,EAAwCI,IAAxC;AAAA,OAAT;AACD;AACF;;AAEDF,SAAOJ,IAAP,GAAcA,IAAd;AACAI,SAAOO,QAAP,GAAkB,MAAMX,IAAxB;;AAEA,SAAOI,MAAP;AACD","file":"createAction.js","sourcesContent":["/* global PRODUCTION */\n\nexport default function createAction(\n    type:string,\n    argsNamesOrHandler:?Array<string>|string|Function,\n    data:?Object,\n) {\n  if (!PRODUCTION) {\n    if (argsNamesOrHandler && typeof argsNamesOrHandler !== 'function') {\n      throw new Error('handler should be a function');\n    }\n    if (data) throw new Error('data is deprecated');\n  }\n\n  let action;\n\n  const typeofSecondArg = typeof argsNamesOrHandler;\n\n  if (typeofSecondArg === 'function') {\n    action = (...args) => ({ type, ...data, ...argsNamesOrHandler(...args) });\n  } else {\n    if (typeofSecondArg === 'string') {\n      argsNamesOrHandler = argsNamesOrHandler.split(',');\n    }\n\n    if (argsNamesOrHandler) {\n      action = (...args) => {\n        const action = { type, ...data };\n        args.forEach((value, index) => action[argsNamesOrHandler[index]] = value);\n        return action;\n      };\n    } else {\n      action = (args: ?Object) => ({ type, ...data, ...args });\n    }\n  }\n\n  action.type = type;\n  action.toString = () => type;\n\n  return action;\n}\n"]}