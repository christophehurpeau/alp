{"version":3,"sources":["../src/loading-bar.js"],"names":["loadingBar","random","Math","ceil","calculatePercent","percent","loading","Error","document","getElementById","loadingBarProgress","firstElementChild","style","width","willChange","display","first20Timeout","setTimeout","progressTimer","setInterval","clearTimeout","clearInterval"],"mappings":";;;;;kBAyBwBA,U;AAzBxB;;AAEA,SAASC,MAAT,GAAkB;AAChB,SAAOC,KAAKC,IAAL,CAAUD,KAAKD,MAAL,KAAgB,GAA1B,IAAiC,GAAxC;AACD;;AAED;;;;;;AAMA,SAASG,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,MAAIA,UAAU,EAAd,EAAkB;AAChB,WAAOA,UAAWJ,WAAW,EAAtB,GAA4B,EAAnC;AACD,GAFD,MAEO,IAAII,UAAU,EAAd,EAAkB;AACvB,WAAOA,UAAUJ,QAAV,GAAqB,GAA5B;AACD,GAFM,MAEA,IAAII,UAAU,EAAd,EAAkB;AACvB,WAAOA,UAAU,GAAjB;AACD,GAFM,MAEA;AACL,WAAOA,OAAP;AACD;AACF;;AAED,IAAIC,UAAU,IAAd;AACe,SAASN,UAAT,GAAsB;AACnC,MAAIM,OAAJ,EAAa,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACbD,YAAU,IAAV;;AAEA,QAAMN,aAAaQ,SAASC,cAAT,CAAwB,aAAxB,CAAnB;AACA,QAAMC,qBAAqBV,WAAWW,iBAAtC;AACAD,qBAAmBE,KAAnB,CAAyBC,KAAzB,GAAiC,IAAjC;AACAH,qBAAmBE,KAAnB,CAAyBE,UAAzB,GAAsC,OAAtC;AACAd,aAAWY,KAAX,CAAiBG,OAAjB,GAA2B,OAA3B;;AAEA,MAAIV,UAAU,EAAd;AACA,QAAMW,iBAAiBC,WAAW,MAAM;AACtCP,uBAAmBE,KAAnB,CAAyBC,KAAzB,GAAiC,KAAjC;AACD,GAFsB,EAEpB,GAFoB,CAAvB;;AAIA,QAAMK,gBAAgBC,YAAY,MAAM;AACtCT,uBAAmBE,KAAnB,CAAyBC,KAAzB,GAAkC,GAAER,UAAUD,iBAAiBC,OAAjB,CAA0B,GAAxE;AACD,GAFqB,EAEnB,GAFmB,CAAtB;;AAIA,SAAO,MAAM;AACXe,iBAAaJ,cAAb;AACAK,kBAAcH,aAAd;AACAR,uBAAmBE,KAAnB,CAAyBC,KAAzB,GAAiC,MAAjC;AACAH,uBAAmBE,KAAnB,CAAyBE,UAAzB,GAAsC,EAAtC;AACAd,eAAWY,KAAX,CAAiBE,UAAjB,GAA8B,SAA9B;AACAR,cAAU,KAAV;;AAEAW,eAAW,MAAM;AACf,UAAI,CAACX,OAAL,EAAc;AACZN,mBAAWY,KAAX,CAAiBG,OAAjB,GAA2B,MAA3B;AACAf,mBAAWY,KAAX,CAAiBE,UAAjB,GAA8B,EAA9B;AACD;AACF,KALD,EAKG,GALH;AAMD,GAdD;AAeD","file":"loading-bar.js","sourcesContent":["/* global document */\n\nfunction random() {\n  return Math.ceil(Math.random() * 100) / 100;\n}\n\n/**\n * around:\n * 1s for 60%\n * 4s for 80%\n * 6s for 95%\n */\nfunction calculatePercent(percent) {\n  if (percent < 60) {\n    return percent + (random() * 10) + 20;\n  } else if (percent < 80) {\n    return percent + random() + 0.5;\n  } else if (percent < 95) {\n    return percent + 0.1;\n  } else {\n    return percent;\n  }\n}\n\nlet loading = null;\nexport default function loadingBar() {\n  if (loading) throw new Error('Already loading');\n  loading = true;\n\n  const loadingBar = document.getElementById('loading-bar');\n  const loadingBarProgress = loadingBar.firstElementChild;\n  loadingBarProgress.style.width = '1%';\n  loadingBarProgress.style.willChange = 'width';\n  loadingBar.style.display = 'block';\n\n  let percent = 20;\n  const first20Timeout = setTimeout(() => {\n    loadingBarProgress.style.width = '20%';\n  }, 100);\n\n  const progressTimer = setInterval(() => {\n    loadingBarProgress.style.width = `${percent = calculatePercent(percent)}%`;\n  }, 500);\n\n  return () => {\n    clearTimeout(first20Timeout);\n    clearInterval(progressTimer);\n    loadingBarProgress.style.width = '100%';\n    loadingBarProgress.style.willChange = '';\n    loadingBar.style.willChange = 'display';\n    loading = false;\n\n    setTimeout(() => {\n      if (!loading) {\n        loadingBar.style.display = 'none';\n        loadingBar.style.willChange = '';\n      }\n    }, 500);\n  };\n}\n"]}