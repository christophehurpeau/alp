{"version":3,"sources":["../src/types.js"],"names":["t","isValidElement","Component","ReactElementType","refinement","object","input","ReactNodeType","type","union","null","void","string","number","array"],"mappings":"AAAA,OAAOA,CAAP,MAAc,cAAd;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,mBAAmBH,EAAEI,UAAF,CAAaJ,EAAEK,MAAF,EAAb,EAAyBC,SAAS;AAChE,MAAI,CAACL,eAAeK,KAAf,CAAL,EAA4B,OAAO,2BAAP;AAC7B,CAF+B,CAAzB;;AAIP,OAAO,MAAMC,gBAAgBP,EAAEQ,IAAF,CAAO,YAAP,EAAqBD,iBAChDP,EAAES,KAAF,CACET,EAAEU,IAAF,EADF,EAEEV,EAAEW,IAAF,EAFF,EAGEX,EAAEY,MAAF,EAHF,EAIEZ,EAAEa,MAAF,EAJF,EAKEV,gBALF,EAMEH,EAAEc,KAAF,CAAQP,aAAR,CANF,CAD2B,CAAtB","file":"types.js","sourcesContent":["import t from 'flow-runtime';\nimport { isValidElement, Component } from 'react';\n\nexport const ReactElementType = t.refinement(t.object(), input => {\n  if (!isValidElement(input)) return 'not a valid react element';\n});\n\nexport const ReactNodeType = t.type('React$Node', ReactNodeType =>\n  t.union(\n    t.null(),\n    t.void(),\n    t.string(),\n    t.number(),\n    ReactElementType,\n    t.array(ReactNodeType),\n  ));\n\nexport type TagNameType = string;\nexport type ReactClassComponentType = Component;\nexport type ReactStatelessComponentType = (props: Object) => ReactNodeType;\nexport type ReactComponentType = ReactClassComponentType | ReactStatelessComponentType;\nexport type TagNameOrReactComponentType = TagNameType | ReactComponentType;\n\nexport type ModuleDescriptorType = {|\n  identifier: ?string,\n  View: any,\n  reducer: ?Function,\n  reducers: ?Object,\n  loader: ?Function,\n|};\n"]}