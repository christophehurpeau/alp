{"version":3,"sources":["../src/types.js"],"names":["t","isValidElement","Component","ReactElementType","refinement","object","input","ReactNodeType","type","union","null","void","string","number","array"],"mappings":"AAAA,OAAOA,CAAP,MAAc,cAAd;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,mBAAmBH,EAAEI,UAAF,CAAaJ,EAAEK,MAAF,EAAb,EAAyBC,SAAS;AAChE,MAAI,CAACL,eAAeK,KAAf,CAAL,EAA4B,OAAO,2BAAP;AAC7B,CAF+B,CAAzB;;AAIP,OAAO,MAAMC,gBAAgBP,EAAEQ,IAAF,CAAO,YAAP,EAAqBD,iBAChDP,EAAES,KAAF,CAAQT,EAAEU,IAAF,EAAR,EAAkBV,EAAEW,IAAF,EAAlB,EAA4BX,EAAEY,MAAF,EAA5B,EAAwCZ,EAAEa,MAAF,EAAxC,EAAoDV,gBAApD,EAAsEH,EAAEc,KAAF,CAAQP,aAAR,CAAtE,CAD2B,CAAtB;;AAIP,OAAO,0CAAmB,UAAnB;AACP,OAAO,kEAA+B,gBAA/B;AACP,OAAO,0EAAmC,WAAC,iBAAO,UAAP,CAAD,WAAmB,oBAAnB,EAAnC;AACP,OAAO,wDAA0B,iCAA0B,2BAA1B,CAA1B;AACP,OAAO,0EAAmC,qBAAc,kBAAd,CAAnC;;AAEP,OAAO,kDAAuB,SAAE,mBAAM,UAAN,CAAF,CAAvB;AACP,OAAO,sDAAyB,WAAC,kBAAQ,eAAR,CAAD,WAA6B,yBAAkB,OAAlB,CAA7B,EAAzB;AACP,OAAO,oDAAwB,WAAC,iBAAO,OAAP,CAAD,EAAa,kBAAQ,eAAR,CAAb,WAAyC,OAAzC,EAAxB;AACP,OAAO,8DAA6B,SAAE,iBAAC,UAAD,EAAU,gBAAV,CAAF,CAA7B","file":"types.js","sourcesContent":["import t from 'flow-runtime';\nimport { isValidElement, Component } from 'react';\n\nexport const ReactElementType = t.refinement(t.object(), input => {\n  if (!isValidElement(input)) return 'not a valid react element';\n});\n\nexport const ReactNodeType = t.type('React$Node', ReactNodeType =>\n  t.union(t.null(), t.void(), t.string(), t.number(), ReactElementType, t.array(ReactNodeType)),\n);\n\nexport type TagNameType = string;\nexport type ReactClassComponentType = Component;\nexport type ReactStatelessComponentType = (props: Object) => ReactNodeType;\nexport type ReactComponentType = ReactClassComponentType | ReactStatelessComponentType;\nexport type TagNameOrReactComponentType = TagNameType | ReactComponentType;\n\nexport type ReduxActionType = { type: string };\nexport type ReduxDispatchType = (action: ReduxActionType) => ReduxActionType | any;\nexport type ReduxReducerType = (state: any, action: ReduxActionType) => any;\nexport type ReducerDictionaryType = { [string]: ReduxReducerType };\n"]}