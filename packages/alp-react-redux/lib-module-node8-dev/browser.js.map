{"version":3,"sources":["../src/browser.js"],"names":["contentLoaded","React","hydrate","Helmet","reactTreeWalker","Logger","BrowserAppContainer","createAlpAppWrapper","createBrowserStore","createBrowserModuleStoreReducer","createModuleVisitor","ReduxActionType","combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderApp","App","createElement","document","getElementById","preRender","ctx","appElement","moduleVisitor","PreRenderWrappedApp","context","store","getState","visitor","getReducers","app","reduxReducers","loading","state","action","meta","undefined","reduxMiddlewares","middlewares","sharedReducers","moduleStoreReducer","createStore","moduleReducers","reducer","window","createContext","render","WrappedApp","setModuleReducers","reducers","set","success"],"mappings":"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","file":"browser.js","sourcesContent":["import contentLoaded from 'content-loaded';\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport Helmet from 'react-helmet';\nimport reactTreeWalker from 'react-tree-walker';\nimport Logger from 'nightingale-logger/src';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport BrowserAppContainer from 'alp-dev/BrowserAppContainer';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createBrowserStore from './store/createBrowserStore';\nimport createBrowserModuleStoreReducer from './store/createBrowserModuleStoreReducer';\nimport createModuleVisitor from './module/createModuleVisitor';\nimport type { ReduxActionType } from './types';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleBrowser';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderApp = App => hydrate(React.createElement(App), document.getElementById('react-app'));\n\nconst preRender = async (ctx, appElement) => {\n  const moduleVisitor = createModuleVisitor();\n  const preRenderStore = { getState: () => ({ ctx }) };\n  const PreRenderWrappedApp = createAlpAppWrapper(appElement, {\n    context: ctx,\n    store: preRenderStore,\n  });\n  await reactTreeWalker(React.createElement(PreRenderWrappedApp), moduleVisitor.visitor);\n\n  return moduleVisitor.getReducers();\n};\n\nexport default app => {\n  app.reduxReducers = {\n    loading: (state: ?number = 0, action: ReduxActionType) => {\n      if (action.meta && action.meta.loading !== undefined) {\n        return state + (action.meta.loading ? 1 : -1);\n      }\n      return state;\n    },\n  };\n  app.reduxMiddlewares = [];\n\n  return {\n    renderApp: async (App, { middlewares = [], sharedReducers } = {}) => {\n      let store;\n      let moduleStoreReducer;\n\n      const createStore = (ctx, moduleReducers) => {\n        moduleStoreReducer = createBrowserModuleStoreReducer(moduleReducers);\n        const store = createBrowserStore(app, ctx, moduleStoreReducer.reducer, {\n          middlewares,\n          sharedReducers,\n        });\n        app.store = store;\n        window.store = store;\n        return store;\n      };\n\n      const ctx = app.createContext();\n\n      const render = async App => {\n        let appElement = React.createElement(App);\n        if (!PRODUCTION) {\n          appElement = React.createElement(BrowserAppContainer, {}, appElement);\n        }\n\n        const moduleReducers = await preRender(ctx, appElement);\n\n        if (!PRODUCTION) {\n          store = createStore(ctx, moduleReducers);\n        } else {\n          // in DEV\n          // eslint-disable-next-line no-lonely-if\n          if (!store) {\n            store = createStore(ctx, moduleReducers);\n          } else {\n            moduleStoreReducer.setReducers(moduleReducers);\n          }\n        }\n\n        const WrappedApp = createAlpAppWrapper(appElement, {\n          context: ctx,\n          store,\n          setModuleReducers: reducers => moduleStoreReducer.set(store, reducers),\n        });\n\n        await contentLoaded();\n        renderApp(WrappedApp);\n        logger.success('rendered');\n      };\n\n      await render(App);\n\n      return render;\n    },\n  };\n};\n"]}