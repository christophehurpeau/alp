{"version":3,"sources":["../../src/store/createBrowserModuleStoreReducer.js"],"names":["combineReducers","ReducerDictionaryType","MODULE_INIT_TYPE","createModuleReducer","reducers","state","initialReducers","_reducers","moduleReducer","reducer","action","type","undefined","set","store","Promise","resolve","setImmediate","dispatch"],"mappings":"AAAA,SAASA,eAAT;AACA,SAAcC,+CAAd,QAA2C,UAA3C;;;;AAEA,MAAMC,mBAAmB,yBAAzB;;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,sBAAuBC,QAAD;AAAA,sBAAS,WAAG,4BAAH,CAAT;;AAAA;AAAA,SAC1BA,WAAWJ,gBAAgBI,QAAhB,CAAX,GAAuC,CAACC,QAAQ,IAAT,KAAkBA,KAD/B;AAAA,CAA5B;;AAGA,gBAAe,yCAACC,eAAD,EAA6C;AAAA,6BAA7B,WAAG,4BAAH,CAA6B;;AAAA;;AAC1D,MAAIC,YAAYD,eAAhB;AACA,MAAIE,gBAAgBL,oBAAoBG,eAApB,CAApB;AACA,SAAO;AACLG,aAAS,CAACJ,KAAD,EAAQK,MAAR,KACPF,cAAcE,OAAOC,IAAP,KAAgBT,gBAAhB,GAAmCU,SAAnC,GAA+CP,KAA7D,EAAoEK,MAApE,CAFG;;AAILG,SAAK,CAACC,KAAD,EAAQV,QAAR,KAAqB;AACxB,UAAIA,aAAaG,SAAjB,EAA4B,OAAO,KAAP;AAC5B,aAAO,IAAIQ,OAAJ,CAAaC,OAAD,IAAqB;AACtCC,qBAAa,MAAM;AACjBV,sBAAYH,QAAZ;AACAI,0BAAgBL,oBAAoBC,QAApB,CAAhB;AACAU,gBAAMI,QAAN,CAAe,EAAEP,MAAMT,gBAAR,EAAf;AACAc;AACD,SALD;AAMD,OAPM,CAAP;AAQD;AAdI,GAAP;AAgBD,CAnBD","file":"createBrowserModuleStoreReducer.js","sourcesContent":["import { combineReducers } from 'redux/src';\nimport type { ReducerDictionaryType } from '../types';\n\nconst MODULE_INIT_TYPE = '@@alp-redux/INIT_MODULE';\n\n// https://github.com/insin/react-examples/tree/master/code-splitting-redux-reducers\n// https://medium.com/@luigiplr/react-redux-react-router-4-code-splitting-w-rxjs-webpack-32eabedf0e9\n// https://gist.github.com/gaearon/0a2213881b5d53973514\n// https://github.com/zeit/next.js/pull/1459\n\nconst createModuleReducer = (reducers: ?ReducerDictionaryType) =>\n  reducers ? combineReducers(reducers) : (state = null) => state;\n\nexport default (initialReducers: ?ReducerDictionaryType) => {\n  let _reducers = initialReducers;\n  let moduleReducer = createModuleReducer(initialReducers);\n  return {\n    reducer: (state, action) =>\n      moduleReducer(action.type === MODULE_INIT_TYPE ? undefined : state, action),\n\n    set: (store, reducers) => {\n      if (reducers === _reducers) return false;\n      return new Promise((resolve, reject) => {\n        setImmediate(() => {\n          _reducers = reducers;\n          moduleReducer = createModuleReducer(reducers);\n          store.dispatch({ type: MODULE_INIT_TYPE });\n          resolve();\n        });\n      });\n    },\n  };\n};\n"]}