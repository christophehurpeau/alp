{"version":3,"sources":["../src/index.js"],"names":["combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","emitAction","Helmet","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderHtml","app","options","content","helmet","renderStatic","isModernBrowser","App","ctx","version","config","get","ua","req","headers","name","createElement","moduleVisitor","PreRenderWrappedApp","context","store","getState","visitor","getReducers","sharedReducers","WrappedApp","removeCtxFromInitialData","initialData","body","scriptName","styleName","polyfillFeatures","loggerWebsocket","child","to","action","debug","emit"],"mappings":";;;;;;;;;;;;kBAYSA,e;;;;;;;;;uBACAC,O;;;;;;;;;kBAEPC,Y;;;;;;kBACAC,a;;;;;;kBACAC,Y;;;;;;kBACAC,U;;;;;;kBACAC,4B;;;;;;kBACAC,e;;;QAuDcC,U,GAAAA,U;;AA3EhB;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;QAESC,M;QAWFC,S;QACAC,c;QACAC,I;QACAC,Y;;;AAEP,MAAMC,SAAS,gCAAW,iBAAX,CAAf;;AAEA,MAAMC,aAAa,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACnC,QAAMC,UAAU,4BAAeF,GAAf,CAAhB;AACA,QAAMG,SAAS,sBAAOC,YAAP,EAAf;AACA,SAAO,0BAAWD,MAAX,EAAmBD,OAAnB,EAA4BD,OAA5B,CAAP;AACD,CAJD;;AAMA,MAAMI,kBAAkB,+BAAxB;;kBASe,CAACC,GAAD,EAAML,YAAN,KAAqC,MAAMM,GAAN,IAAa;AAC/D,QAAMC,UAAkBD,IAAIE,MAAJ,CAAWC,GAAX,CAAe,SAAf,CAAxB;AACA;AACA,QAAMC,KAAKJ,IAAIK,GAAJ,CAAQC,OAAR,CAAgB,YAAhB,CAAX;AACA,QAAMC,OAAOT,gBAAgBM,EAAhB,IAAsB,iBAAtB,GAA0C,KAAvD;;AAEA,QAAMX,MAAM,gBAAMe,aAAN,CAAoBT,GAApB,CAAZ;AACA,QAAMU,gBAAgB,oCAAtB;;AAEA,QAAMC,sBAAsB,mCAAoBjB,GAApB,EAAyB,EAAEkB,SAASX,GAAX,EAAgBY,OAD9C,EAAEC,UAAU,OAAO,EAAEb,GAAF,EAAP,CAAZ,EAC8B,EAAzB,CAA5B;AACA,QAAM,+BAAgB,gBAAMQ,aAAN,CAAoBE,mBAApB,CAAhB,EAA0DD,cAAcK,OAAxE,CAVyD;;;AAY/D,QAAMF,QAAQ,iCAAkBZ,GAAlB,EAAuBS,cAAcM,WAAd,EAAvB,EAAoD;AAChEC,oBAAgBtB,QAAQsB;AADwC,GAApD,CAAd;;AAIA,QAAMC,aAAa,mCAAoBxB,GAApB,EAAyB,EAAEkB,SAASX,GAAX,EAAgBY,KAAhB,EAAzB,CAAnB;;AAEA;AACA,0BAA0DA,MAAMC,QAAN,EAA1D;AAAA,QAAM,EAAEb,KAAKkB,wBAAP,EAAN;AAAA,QAA0CC,WAA1C;AACAnB,MAAIoB,IAAJ,GAAW,MAAM5B,WAAW,gBAAMgB,aAAN,CAAoBS,UAApB,CAAX,EAA4C;AAC3DhB,WAD2D;AAE3DoB,gBAAY3B,QAAQ2B,UAAR,cAAwDd,IAAxD,GAAmCb,QAAQ2B,UAFI;AAG3DC,eAAW5B,QAAQ4B,SAAR,cAAsDf,IAAtD,GAAkCb,QAAQ4B,SAHM;AAI3DC,sBAAkB7B,QAAQ6B,gBAJiC;AAK3DJ;AAL2D,GAA5C,CApB8C;AA2BhE,C;;AAED,MAAMK,kBAAkBjC,OAAOkC,KAAP,CAAa,WAAb,CAAxB;;AAEO,SAASxC,UAAT,CAAoByC,EAApB,EAAwBC,MAAxB,EAAgC;AACrCH,kBAAgBI,KAAhB,CAAsB,YAAtB,EAAoCD,MAApC,CADqC,EAErCD,GAAGG,IAAH,CAAQ,cAAR,EAAwBF,MAAxB,CAFqC;AAGtC","file":"index.js","sourcesContent":["import React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport Helmet from 'react-helmet';\nimport reactTreeWalker from 'react-tree-walker';\nimport Logger from 'nightingale-logger/src';\nimport createIsModernBrowser from 'modern-browsers';\nimport htmlLayout from './layout/htmlLayout';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createServerStore from './store/createServerStore';\nimport createModuleVisitor from './module/createModuleVisitor';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleServer';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderHtml = (app, options) => {\n  const content = renderToString(app);\n  const helmet = Helmet.renderStatic();\n  return htmlLayout(helmet, content, options);\n};\n\nconst isModernBrowser = createIsModernBrowser();\n\ntype OptionsType = {|\n  sharedReducers: ?{ [string]: any },\n  scriptName: ?string | false,\n  styleName: ?string | false,\n  polyfillFeatures: ?string,\n|};\n\nexport default (App, options: ?OptionsType = {}) => async ctx => {\n  const version: string = ctx.config.get('version');\n  // TODO create alp-useragent with getter in context\n  const ua = ctx.req.headers['user-agent'];\n  const name = isModernBrowser(ua) ? 'modern-browsers' : 'es5';\n\n  const app = React.createElement(App);\n  const moduleVisitor = createModuleVisitor();\n  const preRenderStore = { getState: () => ({ ctx }) };\n  const PreRenderWrappedApp = createAlpAppWrapper(app, { context: ctx, store: preRenderStore });\n  await reactTreeWalker(React.createElement(PreRenderWrappedApp), moduleVisitor.visitor);\n\n  const store = createServerStore(ctx, moduleVisitor.getReducers(), {\n    sharedReducers: options.sharedReducers,\n  });\n\n  const WrappedApp = createAlpAppWrapper(app, { context: ctx, store });\n\n  // eslint-disable-next-line no-unused-vars\n  const { ctx: removeCtxFromInitialData, ...initialData } = store.getState();\n  ctx.body = await renderHtml(React.createElement(WrappedApp), {\n    version,\n    scriptName: options.scriptName !== undefined ? options.scriptName : name,\n    styleName: options.styleName !== undefined ? options.styleName : name,\n    polyfillFeatures: options.polyfillFeatures,\n    initialData,\n  });\n};\n\nconst loggerWebsocket = logger.child('websocket');\n\nexport function emitAction(to, action) {\n  loggerWebsocket.debug('emitAction', action);\n  to.emit('redux:action', action);\n}\n"]}