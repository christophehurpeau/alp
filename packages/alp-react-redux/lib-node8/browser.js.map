{"version":3,"sources":["../src/browser.js"],"names":["combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","Helmet","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderApp","App","createElement","document","getElementById","app","sharedReducers","ctx","createContext","store","moduleStoreReducer","createStore","moduleReducers","reducer","middlewares","websocket","filter","Boolean","preRender","moduleVisitor","PreRenderWrappedApp","context","getState","visitor","getReducers","render","setReducers","WrappedApp","setModuleReducers","reducers","set","success","loggerWebsocket","child","debug","on","action","dispatch"],"mappings":";;;;;;;;;;;;kBAaSA,e;;;;;;;;;uBACAC,O;;;;;;;;;kBAEPC,Y;;;;;;kBACAC,a;;;;;;kBACAC,Y;;;;;;kBACAC,U;;;;;;kBACAC,4B;;;;;;kBACAC,e;;;;AApBF;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;QAESC,M;QAWFC,S;QACAC,c;QACAC,I;QACAC,Y;;;AAEP,MAAMC,SAAS,gCAAW,iBAAX,CAAf;;AAEA,MAAMC,YAAYC,OAAO,sBAAO,gBAAMC,aAAN,CAAoBD,GAApB,CAAP,EAAiCE,SAASC,cAAT,CAAwB,WAAxB,CAAjC,CAAzB;;kBAEe,OAAOC,GAAP,EAAYJ,GAAZ,EAAiB,EAAEK,cAAF,OAAjB,KAA6C;AAC1D,QAAMC,MAAMF,IAAIG,aAAJ,EAAZ;AACA,MAAIC,KAAJ;AACA,MAAIC,kBAAJ;;AAEA,QAAMC,cAAc,CAACJ,GAAD,EAAMK,cAAN,KAAyB;AAC3CF,yBAAqB,+CAAgCE,cAAhC,CADsB;;AAE3C,UAAMH,QAAQ,kCAAmBJ,GAAnB,EAAwBE,GAAxB,EAA6BG,mBAAmBG,OAAhD,EAAyD;AACrEP,oBADqE;AAErEQ,mBAAa,CAACT,IAAIU,SAAJ,IAAiB,oCAAoBV,GAApB,CAAlB,EAA4CW,MAA5C,CAAmDC,OAAnD;AAFwD,KAAzD,CAAd;;AAKA,WADAZ,IAAII,KAAJ,GAAYA,KACZ,EAAOA,KAAP;AACD,GARD;;AAUA,QAAMS,YAAY,MAAMb,GAAN,IAAa;AAC7B,UAAMc,gBAAgB,oCAAtB;;AAEA,UAAMC,sBAAsB,mCAAoBf,GAApB,EAAyB;AACnDgB,eAASd,GAD0C;AAEnDE,aAHqB,EAAEa,UAAU,OAAO,EAAEf,GAAF,EAAP,CAAZ;AAC8B,KAAzB,CAA5B;;;AAMA,WAFA,MAAM,+BAAgB,gBAAML,aAAN,CAAoBkB,mBAApB,CAAhB,EAA0DD,cAAcI,OAAxE,CAEN,EAAOJ,cAAcK,WAAd,EAAP;AACD,GAVD;;AAYA,QAAMC,SAAS,MAAMxB,GAAN,IAAa;AAC1B,QAAII,MAAM,gBAAMH,aAAN,CAAoBD,GAApB,CAAV;;;AAKA,UAAMW,iBAAiB,MAAMM,UAAUb,GAAV,CAA7B;;AAOOI,SAbmB,GAgBtBC,mBAAmBgB,WAAnB,CAA+Bd,cAA/B,CAhBsB,GActBH,QAAQE,YAAYJ,GAAZ,EAAiBK,cAAjB,CAdc;;;AAoB1B,UAAMe,aAAa,mCAAoBtB,GAApB,EAAyB;AAC1CgB,eAASd,GADiC;AAE1CE,WAF0C;AAG1CmB,yBAAmBC,YAAYnB,mBAAmBoB,GAAnB,CAAuBrB,KAAvB,EAA8BoB,QAA9B;AAHW,KAAzB,CAAnB;;AAMA7B,cAAU2B,UAAV,CA1B0B,EA2B1B5B,OAAOgC,OAAP,CAAe,UAAf,CA3B0B;AA4B3B,GA5BD;;AA8BA,MAAI1B,IAAIU,SAAR,EAAmB;AACjB,UAAMiB,kBAAkBjC,OAAOkC,KAAP,CAAa,WAAb,CAAxB;AACAD,oBAAgBE,KAAhB,CAAsB,iCAAtB,CAFiB,EAGjB7B,IAAIU,SAAJ,CAAcoB,EAAd,CAAiB,cAAjB,EAAiCC,UAAU;AACzCJ,sBAAgBE,KAAhB,CAAsB,gCAAtB,EAAwDE,MAAxD,CADyC,EAErC3B,KAFqC,IAGvCA,MAAM4B,QAAN,CAAeD,MAAf,CAHuC;AAK1C,KALD,CAHiB;AASlB;;AAID,SAFA,MAAMX,OAAOxB,GAAP,CAEN,EAAOwB,MAAP;AACD,C","file":"browser.js","sourcesContent":["import BrowserAppContainer from 'alp-dev/BrowserAppContainer';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Helmet from 'react-helmet';\nimport reactTreeWalker from 'react-tree-walker';\nimport Logger from 'nightingale-logger/src';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createBrowserStore from './store/createBrowserStore';\nimport createBrowserModuleStoreReducer from './store/createBrowserModuleStoreReducer';\nimport { websocketMiddleware } from './websocket';\nimport createModuleVisitor from './module/createModuleVisitor';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleBrowser';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderApp = App => render(React.createElement(App), document.getElementById('react-app'));\n\nexport default async (app, App, { sharedReducers } = {}) => {\n  const ctx = app.createContext();\n  let store;\n  let moduleStoreReducer;\n\n  const createStore = (ctx, moduleReducers) => {\n    moduleStoreReducer = createBrowserModuleStoreReducer(moduleReducers);\n    const store = createBrowserStore(app, ctx, moduleStoreReducer.reducer, {\n      sharedReducers,\n      middlewares: [app.websocket && websocketMiddleware(app)].filter(Boolean),\n    });\n    app.store = store;\n    return store;\n  };\n\n  const preRender = async app => {\n    const moduleVisitor = createModuleVisitor();\n    const preRenderStore = { getState: () => ({ ctx }) };\n    const PreRenderWrappedApp = createAlpAppWrapper(app, {\n      context: ctx,\n      store: preRenderStore,\n    });\n    await reactTreeWalker(React.createElement(PreRenderWrappedApp), moduleVisitor.visitor);\n\n    return moduleVisitor.getReducers();\n  };\n\n  const render = async App => {\n    let app = React.createElement(App);\n    if (!PRODUCTION) {\n      app = React.createElement(BrowserAppContainer, {}, app);\n    }\n\n    const moduleReducers = await preRender(app);\n\n    if (!PRODUCTION) {\n      store = createStore(ctx, moduleReducers);\n    } else {\n      // in DEV\n      // eslint-disable-next-line no-lonely-if\n      if (!store) {\n        store = createStore(ctx, moduleReducers);\n      } else {\n        moduleStoreReducer.setReducers(moduleReducers);\n      }\n    }\n\n    const WrappedApp = createAlpAppWrapper(app, {\n      context: ctx,\n      store,\n      setModuleReducers: reducers => moduleStoreReducer.set(store, reducers),\n    });\n\n    renderApp(WrappedApp);\n    logger.success('rendered');\n  };\n\n  if (app.websocket) {\n    const loggerWebsocket = logger.child('websocket');\n    loggerWebsocket.debug('register websocket redux:action');\n    app.websocket.on('redux:action', action => {\n      loggerWebsocket.debug('dispatch action from websocket', action);\n      if (store) {\n        store.dispatch(action);\n      }\n    });\n  }\n\n  await render(App);\n\n  return render;\n};\n"]}