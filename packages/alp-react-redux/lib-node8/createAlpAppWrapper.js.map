{"version":3,"sources":["../src/createAlpAppWrapper.jsx"],"names":["App","context","getChildContext","render","childContextTypes","object","isRequired","app","store","setModuleReducers","func"],"mappings":";;;;;;;;;;AAEA;;;;;;kBAKe,CAACA,GAAD,EAA0BC,OAA1B;AAAA;;AAAA,0BACb,+BAAsC;;AAQpCC,sBAA0B;AACxB,aAAOD,OAAP;AACD;;AAIDE,aAAwB;AACtB,aACI,8BAAC,GAAD,OADJ;AAKD;AApBmC,GADzB,SAEJC,iBAFI,GAEgB;AACzBH,aAAS,oBAAUI,MAAV,CAAiBC,UADD;AAEzBC,SAAK,oBAAUF,MAAV,CAAiBC,UAFG;AAGzBE,WAAO,oBAAUH,MAAV,CAAiBC,UAHC;AAIzBG,uBAAmB,oBAAUC,IAAV,CAAeJ;AAJT,GAFhB;AAAA,C","file":"createAlpAppWrapper.jsx","sourcesContent":["import BrowserAppContainer from 'alp-dev/BrowserAppContainer';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport type { ReactNodeType, ReactComponentType } from './types';\n\ntype PropsType = {||};\n\nexport default (App: ReactComponentType, context: Object) =>\n  class AlpAppWrapper extends Component {\n    static childContextTypes = {\n      context: PropTypes.object.isRequired,\n      app: PropTypes.object.isRequired,\n      store: PropTypes.object.isRequired,\n      setModuleReducers: PropTypes.func.isRequired,\n    };\n\n    getChildContext(): Object {\n      return context;\n    }\n\n    props: PropsType;\n\n    render(): ReactNodeType {\n      return PRODUCTION\n        ? <App />\n        : <BrowserAppContainer>\n            <App />\n          </BrowserAppContainer>;\n    }\n  };\n"]}