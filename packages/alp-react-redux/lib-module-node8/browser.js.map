{"version":3,"sources":["../src/browser.js"],"names":["React","render","Helmet","reactTreeWalker","Logger","createAlpAppWrapper","createBrowserStore","createBrowserModuleStoreReducer","websocketMiddleware","createModuleVisitor","combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderApp","App","createElement","document","getElementById","app","sharedReducers","ctx","createContext","store","moduleStoreReducer","createStore","moduleReducers","reducer","middlewares","websocket","filter","Boolean","preRender","moduleVisitor","PreRenderWrappedApp","context","getState","visitor","getReducers","setReducers","WrappedApp","setModuleReducers","reducers","set","success","loggerWebsocket","child","debug","on","action","dispatch"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,+BAAP,MAA4C,yCAA5C;AACA,SAASC,mBAAT,QAAoC,aAApC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;;AAEA,SAASP,MAAT;AACA,SAASQ,eAAT;AACA,SAASC,OAAT;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,4BALF,EAMEC,eANF,QAOO,eAPP;uBAQsB,oB;uBAAfC,S;4BACoB,gC;4BAApBC,c;kBACU,e;kBAAVC,I;0BACkB,uB;0BAAlBC,Y;;;AAEP,MAAMC,SAAS,IAAIlB,MAAJ,CAAW,iBAAX,CAAf;;AAEA,MAAMmB,YAAYC,OAAOvB,OAAOD,MAAMyB,aAAN,CAAoBD,GAApB,CAAP,EAAiCE,SAASC,cAAT,CAAwB,WAAxB,CAAjC,CAAzB;;AAEA,gBAAe,OAAOC,GAAP,EAAYJ,GAAZ,EAAiB,EAAEK,cAAF,OAAjB,KAA6C;AAC1D,QAAMC,MAAMF,IAAIG,aAAJ,EAAZ;AACA,MAAIC,KAAJ;AACA,MAAIC,kBAAJ;;AAEA,QAAMC,cAAc,CAACJ,GAAD,EAAMK,cAAN,KAAyB;AAC3CF,yBAAqB1B,gCAAgC4B,cAAhC,CAArB;AACA,UAAMH,QAAQ1B,mBAAmBsB,GAAnB,EAAwBE,GAAxB,EAA6BG,mBAAmBG,OAAhD,EAAyD;AACrEP,oBADqE;AAErEQ,mBAAa,CAACT,IAAIU,SAAJ,IAAiB9B,oBAAoBoB,GAApB,CAAlB,EAA4CW,MAA5C,CAAmDC,OAAnD;AAFwD,KAAzD,CAAd;AAIAZ,QAAII,KAAJ,GAAYA,KAAZ;AACA,WAAOA,KAAP;AACD,GARD;;AAUA,QAAMS,YAAY,MAAMb,GAAN,IAAa;AAC7B,UAAMc,gBAAgBjC,qBAAtB;;AAEA,UAAMkC,sBAAsBtC,oBAAoBuB,GAApB,EAAyB;AACnDgB,eAASd,GAD0C;AAEnDE,aAHqB,EAAEa,UAAU,OAAO,EAAEf,GAAF,EAAP,CAAZ;AAC8B,KAAzB,CAA5B;AAIA,UAAM3B,gBAAgBH,MAAMyB,aAAN,CAAoBkB,mBAApB,CAAhB,EAA0DD,cAAcI,OAAxE,CAAN;;AAEA,WAAOJ,cAAcK,WAAd,EAAP;AACD,GAVD;;AAYA,QAAM9C,SAAS,MAAMuB,GAAN,IAAa;AAC1B,QAAII,MAAM5B,MAAMyB,aAAN,CAAoBD,GAApB,CAAV;;;AAKA,UAAMW,iBAAiB,MAAMM,UAAUb,GAAV,CAA7B;;AAKE;AACA;AACA,QAAI,CAACI,KAAL,EAAY;AACVA,cAAQE,YAAYJ,GAAZ,EAAiBK,cAAjB,CAAR;AACD,KAFD,MAEO;AACLF,yBAAmBe,WAAnB,CAA+Bb,cAA/B;AACD;;;AAGH,UAAMc,aAAa5C,oBAAoBuB,GAApB,EAAyB;AAC1CgB,eAASd,GADiC;AAE1CE,WAF0C;AAG1CkB,yBAAmBC,YAAYlB,mBAAmBmB,GAAnB,CAAuBpB,KAAvB,EAA8BmB,QAA9B;AAHW,KAAzB,CAAnB;;AAMA5B,cAAU0B,UAAV;AACA3B,WAAO+B,OAAP,CAAe,UAAf;AACD,GA5BD;;AA8BA,MAAIzB,IAAIU,SAAR,EAAmB;AACjB,UAAMgB,kBAAkBhC,OAAOiC,KAAP,CAAa,WAAb,CAAxB;AACAD,oBAAgBE,KAAhB,CAAsB,iCAAtB;AACA5B,QAAIU,SAAJ,CAAcmB,EAAd,CAAiB,cAAjB,EAAiCC,UAAU;AACzCJ,sBAAgBE,KAAhB,CAAsB,gCAAtB,EAAwDE,MAAxD;AACA,UAAI1B,KAAJ,EAAW;AACTA,cAAM2B,QAAN,CAAeD,MAAf;AACD;AACF,KALD;AAMD;;AAED,QAAMzD,OAAOuB,GAAP,CAAN;;AAEA,SAAOvB,MAAP;AACD,CAvED","file":"browser.js","sourcesContent":["import BrowserAppContainer from 'alp-dev/BrowserAppContainer';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Helmet from 'react-helmet';\nimport reactTreeWalker from 'react-tree-walker';\nimport Logger from 'nightingale-logger/src';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createBrowserStore from './store/createBrowserStore';\nimport createBrowserModuleStoreReducer from './store/createBrowserModuleStoreReducer';\nimport { websocketMiddleware } from './websocket';\nimport createModuleVisitor from './module/createModuleVisitor';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleBrowser';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderApp = App => render(React.createElement(App), document.getElementById('react-app'));\n\nexport default async (app, App, { sharedReducers } = {}) => {\n  const ctx = app.createContext();\n  let store;\n  let moduleStoreReducer;\n\n  const createStore = (ctx, moduleReducers) => {\n    moduleStoreReducer = createBrowserModuleStoreReducer(moduleReducers);\n    const store = createBrowserStore(app, ctx, moduleStoreReducer.reducer, {\n      sharedReducers,\n      middlewares: [app.websocket && websocketMiddleware(app)].filter(Boolean),\n    });\n    app.store = store;\n    return store;\n  };\n\n  const preRender = async app => {\n    const moduleVisitor = createModuleVisitor();\n    const preRenderStore = { getState: () => ({ ctx }) };\n    const PreRenderWrappedApp = createAlpAppWrapper(app, {\n      context: ctx,\n      store: preRenderStore,\n    });\n    await reactTreeWalker(React.createElement(PreRenderWrappedApp), moduleVisitor.visitor);\n\n    return moduleVisitor.getReducers();\n  };\n\n  const render = async App => {\n    let app = React.createElement(App);\n    if (!PRODUCTION) {\n      app = React.createElement(BrowserAppContainer, {}, app);\n    }\n\n    const moduleReducers = await preRender(app);\n\n    if (!PRODUCTION) {\n      store = createStore(ctx, moduleReducers);\n    } else {\n      // in DEV\n      // eslint-disable-next-line no-lonely-if\n      if (!store) {\n        store = createStore(ctx, moduleReducers);\n      } else {\n        moduleStoreReducer.setReducers(moduleReducers);\n      }\n    }\n\n    const WrappedApp = createAlpAppWrapper(app, {\n      context: ctx,\n      store,\n      setModuleReducers: reducers => moduleStoreReducer.set(store, reducers),\n    });\n\n    renderApp(WrappedApp);\n    logger.success('rendered');\n  };\n\n  if (app.websocket) {\n    const loggerWebsocket = logger.child('websocket');\n    loggerWebsocket.debug('register websocket redux:action');\n    app.websocket.on('redux:action', action => {\n      loggerWebsocket.debug('dispatch action from websocket', action);\n      if (store) {\n        store.dispatch(action);\n      }\n    });\n  }\n\n  await render(App);\n\n  return render;\n};\n"]}