{"version":3,"sources":["../src/browser.js"],"names":["render","unmountComponentAtNode","Logger","createStore","applyMiddleware","compose","combineReducers","promiseMiddleware","createFunctionMiddleware","websocketMiddleware","loadingBar","AlpReactApp","AlpReduxApp","alpReducers","Helmet","connect","createPureStatelessComponent","createAction","createReducer","createLoader","createEmitAction","createEmitPromiseAction","HYDRATE_STATE","logger","store","currentModuleDescriptorIdentifier","createHydratableReducer","reducer","state","action","type","OptionsType","sharedReducers","alpReactRedux","element","app","middleware","websocket","loggerWebsocket","child","debug","on","dispatch","push","context","moduleDescriptor","data","_loaded","_loadingBar","View","Error","loader","currentState","identifier","getState","Object","create","then","moduleHasReducers","reducers","undefined","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","assign","isSameModule","replaceReducer","App","appProps","props","err"],"mappings":"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","file":"browser.js","sourcesContent":["/* global window */\nimport render, { unmountComponentAtNode } from 'fody/src';\nimport Logger from 'nightingale-logger/src';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux/src';\nimport { promiseMiddleware, createFunctionMiddleware } from './middleware-browser';\nimport { websocketMiddleware } from './websocket';\nimport loadingBar from './loading-bar';\nimport AlpReactApp from './AlpReactApp';\nimport AlpReduxApp from './AlpReduxApp';\nimport * as alpReducers from './reducers';\n\nexport { AlpReactApp, AlpReduxApp };\nexport { Helmet } from 'fody/src';\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport createPureStatelessComponent from 'react-pure-stateless-component';\nexport createAction from './utils/createAction';\nexport createReducer from './utils/createReducer';\nexport createLoader from './utils/createLoader';\nexport { createEmitAction, createEmitPromiseAction } from './websocket';\n\nconst HYDRATE_STATE = 'HYDRATE_STATE';\nconst logger = new Logger('alp:react-redux');\n\nlet store;\nlet currentModuleDescriptorIdentifier;\n\nconst createHydratableReducer = (reducer: Function) => (\n  (state, action) => {\n    if (action.type === HYDRATE_STATE) {\n      state = action.state;\n    }\n\n    return reducer(state, action);\n  }\n);\n\ntype OptionsType = {|\n  sharedReducers: ?Object,\n|}\n\nexport default function alpReactRedux(element, { sharedReducers = {} }: OptionsType = {}) {\n  return (app) => {\n    const middleware = [\n      createFunctionMiddleware(app),\n      promiseMiddleware,\n    ];\n\n    if (app.websocket) {\n      const loggerWebsocket = logger.child('websocket');\n      loggerWebsocket.debug('register websocket redux:action');\n      app.websocket.on('redux:action', action => {\n        loggerWebsocket.debug('dispatch action from websocket', action);\n        if (store) {\n          store.dispatch(action);\n        }\n      });\n      middleware.push(websocketMiddleware(app));\n    }\n\n    app.context.render = function (moduleDescriptor, data, _loaded, _loadingBar) {\n      if (!_loadingBar) _loadingBar = loadingBar();\n      logger.debug('render view', { data });\n\n      try {\n        if (!PRODUCTION && !moduleDescriptor.View) {\n          throw new Error('View is undefined, class expected');\n        }\n\n        if (!_loaded && moduleDescriptor.loader) {\n          const currentState = store &&\n          currentModuleDescriptorIdentifier === moduleDescriptor.identifier ?\n            store.getState() : Object.create(null);\n\n          // const _state = data;\n          return moduleDescriptor.loader(currentState, data).then(data => (\n            this.render(moduleDescriptor, data, true, _loadingBar)\n          ));\n        }\n\n        const moduleHasReducers = !!(moduleDescriptor.reducer || moduleDescriptor.reducers);\n        let reducer = moduleDescriptor.reducer ?\n          moduleDescriptor.reducer : (\n            combineReducers({ ...moduleDescriptor.reducers, ...alpReducers, ...sharedReducers })\n          );\n\n        if (!reducer) {\n          if (store) {\n            reducer = () => {};\n            store.dispatch({ type: HYDRATE_STATE, state: Object.create(null) });\n          }\n        } else if (store === undefined) {\n          const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n          store = createStore(\n            createHydratableReducer(reducer),\n            Object.assign(Object.create(null), { context: this }, data),\n            composeEnhancers(applyMiddleware(...middleware)),\n          );\n        } else {\n          const state = Object.create(null);\n          const isSameModule = currentModuleDescriptorIdentifier === moduleDescriptor.identifier;\n\n          if (store) {\n            if (isSameModule) {\n              // keep state\n              Object.assign(state, store.getState());\n            } else {\n              // destroy current component\n              unmountComponentAtNode(element);\n              // replace reducer\n              store.replaceReducer(createHydratableReducer(reducer));\n              // add initial context\n              state.context = this;\n            }\n          }\n\n          if (moduleHasReducers) Object.assign(state, data);\n          store.dispatch({ type: HYDRATE_STATE, state });\n        }\n\n        currentModuleDescriptorIdentifier = moduleDescriptor.identifier;\n\n        if (reducer) {\n          this.store = store;\n        }\n\n        render({\n          App: reducer ? AlpReduxApp : AlpReactApp,\n          appProps: {\n            store,\n            context: this,\n            moduleDescriptor,\n          },\n          View: moduleDescriptor.View,\n          props: moduleHasReducers ? undefined : data,\n          element,\n        });\n      } catch (err) {\n        _loadingBar();\n        throw err;\n      }\n\n      _loadingBar();\n    };\n  };\n}\n"]}