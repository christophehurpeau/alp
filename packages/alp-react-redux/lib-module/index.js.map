{"version":3,"sources":["../src/index.js"],"names":["React","renderToString","Helmet","reactTreeWalker","Logger","createIsModernBrowser","htmlLayout","createAlpAppWrapper","createServerStore","createModuleVisitor","combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderHtml","app","options","content","helmet","renderStatic","isModernBrowser","reduxReducers","reduxMiddlewares","middleware","ctx","next","reduxInitialContext","createApp","App","version","config","get","ua","req","headers","name","createElement","moduleVisitor","preRenderStore","getState","PreRenderWrappedApp","context","store","visitor","getReducers","sharedReducers","WrappedApp","removeCtxFromInitialData","initialData","scriptName","undefined","styleName","polyfillFeatures","body","loggerWebsocket","child","emitAction","to","action","debug","emit"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport Helmet from 'react-helmet';\nimport reactTreeWalker from 'react-tree-walker';\nimport Logger from 'nightingale-logger/src';\nimport createIsModernBrowser from 'modern-browsers';\nimport htmlLayout from './layout/htmlLayout';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createServerStore from './store/createServerStore';\nimport createModuleVisitor from './module/createModuleVisitor';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleServer';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderHtml = (app, options) => {\n  const content = renderToString(app);\n  const helmet = Helmet.renderStatic();\n  return htmlLayout(helmet, content, options);\n};\n\nconst isModernBrowser = createIsModernBrowser();\n\ntype OptionsType = {|\n  sharedReducers: ?{ [string]: any },\n  scriptName: ?string | false,\n  styleName: ?string | false,\n  polyfillFeatures?: ?string,\n|};\n\nexport default () => app => {\n  app.reduxReducers = {};\n  app.reduxMiddlewares = [];\n\n  return {\n    middleware: (ctx, next) => {\n      ctx.reduxInitialContext = {};\n      return next();\n    },\n\n    createApp: (App, options: ?OptionsType = {}) => async ctx => {\n      const version: string = ctx.config.get('version');\n      // TODO create alp-useragent with getter in context\n      const ua = ctx.req.headers['user-agent'];\n      const name = isModernBrowser(ua) ? 'modern-browsers' : 'es5';\n\n      const app = React.createElement(App);\n      const moduleVisitor = createModuleVisitor();\n      const preRenderStore = { getState: () => ({ ctx }) };\n      const PreRenderWrappedApp = createAlpAppWrapper(app, { context: ctx, store: preRenderStore });\n      await reactTreeWalker(React.createElement(PreRenderWrappedApp), moduleVisitor.visitor);\n\n      const store = createServerStore(ctx, moduleVisitor.getReducers(), {\n        sharedReducers: options.sharedReducers,\n      });\n\n      const WrappedApp = createAlpAppWrapper(app, { context: ctx, store });\n\n      // eslint-disable-next-line no-unused-vars\n      const { ctx: removeCtxFromInitialData, ...initialData } = store.getState();\n      ctx.body = await renderHtml(React.createElement(WrappedApp), {\n        version,\n        scriptName: options.scriptName !== undefined ? options.scriptName : name,\n        styleName: options.styleName !== undefined ? options.styleName : name,\n        polyfillFeatures: options.polyfillFeatures,\n        initialData,\n      });\n    },\n  };\n};\n\nconst loggerWebsocket = logger.child('websocket');\n\nexport function emitAction(to, action) {\n  loggerWebsocket.debug('emitAction', action);\n  to.emit('redux:action', action);\n}\n"]}