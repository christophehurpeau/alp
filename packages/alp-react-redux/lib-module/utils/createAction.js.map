{"version":3,"sources":["../../src/utils/createAction.js"],"names":["createAction","type","argsNamesOrHandler","data","action","typeofSecondArg","split","args","forEach","value","index","toString"],"mappings":";;AAAA;;AAEA,eAAe,SAASA,YAAT,CACXC,IADW,EAEXC,kBAFW,EAGXC,IAHW,EAIb;;AAQA,MAAIC,eAAJ;;AAEA,MAAMC,yBAAyBH,kBAAzB,yCAAyBA,kBAAzB,CAAN;;AAEA,MAAIG,oBAAoB,UAAxB,EAAoC;AAClCD,aAAS;AAAA,6BAAgBH,UAAhB,IAAyBE,IAAzB,EAAkCD,8CAAlC;AAAA,KAAT;AACD,GAFD,MAEO;AACL,QAAIG,oBAAoB,QAAxB,EAAkC;AAChCH,2BAAqBA,mBAAmBI,KAAnB,CAAyB,GAAzB,CAArB;AACD;;AAED,QAAIJ,kBAAJ,EAAwB;AACtBE,eAAS,kBAAa;AAAA,0CAATG,IAAS;AAATA,cAAS;AAAA;;AACpB,YAAMH,yBAAWH,UAAX,IAAoBE,IAApB,CAAN;AACAI,aAAKC,OAAL,CAAa,UAACC,KAAD,EAAQC,KAAR;AAAA,iBAAkBN,OAAOF,mBAAmBQ,KAAnB,CAAP,IAAoCD,KAAtD;AAAA,SAAb;AACA,eAAOL,MAAP;AACD,OAJD;AAKD,KAND,MAMO;AACLA,eAAS,gBAACG,IAAD;AAAA,+BAAsBN,UAAtB,IAA+BE,IAA/B,EAAwCI,IAAxC;AAAA,OAAT;AACD;AACF;;AAEDH,SAAOH,IAAP,GAAcA,IAAd;AACAG,SAAOO,QAAP,GAAkB;AAAA,WAAMV,IAAN;AAAA,GAAlB;;AAEA,SAAOG,MAAP;AACD","file":"createAction.js","sourcesContent":["/* global PRODUCTION */\n\nexport default function createAction(\n    type: string,\n    argsNamesOrHandler: ?Array<string> | string | Function,\n    data: ?Object,\n) {\n  if (!PRODUCTION) {\n    if (argsNamesOrHandler && typeof argsNamesOrHandler !== 'function') {\n      throw new Error('handler should be a function');\n    }\n    if (data) throw new Error('data is deprecated');\n  }\n\n  let action;\n\n  const typeofSecondArg = typeof argsNamesOrHandler;\n\n  if (typeofSecondArg === 'function') {\n    action = (...args) => ({ type, ...data, ...argsNamesOrHandler(...args) });\n  } else {\n    if (typeofSecondArg === 'string') {\n      argsNamesOrHandler = argsNamesOrHandler.split(',');\n    }\n\n    if (argsNamesOrHandler) {\n      action = (...args) => {\n        const action = { type, ...data };\n        args.forEach((value, index) => action[argsNamesOrHandler[index]] = value);\n        return action;\n      };\n    } else {\n      action = (args: ?Object) => ({ type, ...data, ...args });\n    }\n  }\n\n  action.type = type;\n  action.toString = () => type;\n\n  return action;\n}\n"]}