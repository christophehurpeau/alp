{"version":3,"sources":["../../src/layout/AlpReactApp.jsx"],"names":["Component","PropTypes","Helmet","App","context","props","children","childContextTypes","object","isRequired"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;IAOqBC,G;;;;;;;;;;;sCAKO;AACxB,aAAO,EAAEC,SAAS,KAAKC,KAAL,CAAWD,OAAtB,EAAP;AACD;;;6BAIuB;AAAA,UACdE,QADc,GACD,KAAKD,KADJ,CACdC,QADc;;AAEtB,aACE;AAAA;AAAA;AACE;AAAC,gBAAD;AAAA;AACE,wCAAM,SAAQ,OAAd,GADF;AAEE,wCAAM,MAAK,UAAX,EAAsB,SAAQ,qCAA9B;AAFF,SADF;AAKGA;AALH,OADF;AASD;;;;EAtB8BN,S,UACxBO,iB,GAAoB;AACzBH,WAASH,UAAUO,MAAV,CAAiBC;AADD,C;SADRN,G","file":"AlpReactApp.jsx","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport type { ReactNodeType } from '../types';\n\ntype PropsType = {|\n  children: ?ReactNodeType,\n|};\n\nexport default class App extends Component {\n  static childContextTypes = {\n    context: PropTypes.object.isRequired,\n  };\n\n  getChildContext(): Object {\n    return { context: this.props.context };\n  }\n\n  props: PropsType;\n\n  render(): ReactNodeType {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n"]}