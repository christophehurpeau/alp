{"version":3,"sources":["../src/createAlpAppWrapper.jsx"],"names":["Component","PropTypes","App","context","childContextTypes","object","isRequired","app","store","setModuleReducers","func"],"mappings":";;;;;;;;;;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAKA,gBAAe,UAACC,GAAD,EAA0BC,OAA1B;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCASe;AACxB,eAAOA,OAAP;AACD;AAXU;AAAA;AAAA,+BAea;AACtB,eACI,oBAAC,GAAD,OADJ;AAKD;AArBU;;AAAA;AAAA,IACeH,SADf,UAEJI,iBAFI,GAEgB;AACzBD,aAASF,UAAUI,MAAV,CAAiBC,UADD;AAEzBC,SAAKN,UAAUI,MAAV,CAAiBC,UAFG;AAGzBE,WAAOP,UAAUI,MAAV,CAAiBC,UAHC;AAIzBG,uBAAmBR,UAAUS,IAAV,CAAeJ;AAJT,GAFhB;AAAA,CAAf","file":"createAlpAppWrapper.jsx","sourcesContent":["import BrowserAppContainer from 'alp-dev/BrowserAppContainer';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport type { ReactNodeType, ReactComponentType } from './types';\n\ntype PropsType = {||};\n\nexport default (App: ReactComponentType, context: Object) =>\n  class AlpAppWrapper extends Component {\n    static childContextTypes = {\n      context: PropTypes.object.isRequired,\n      app: PropTypes.object.isRequired,\n      store: PropTypes.object.isRequired,\n      setModuleReducers: PropTypes.func.isRequired,\n    };\n\n    getChildContext(): Object {\n      return context;\n    }\n\n    props: PropsType;\n\n    render(): ReactNodeType {\n      return PRODUCTION\n        ? <App />\n        : <BrowserAppContainer>\n            <App />\n          </BrowserAppContainer>;\n    }\n  };\n"]}