{"version":3,"sources":["../src/node.js"],"names":[],"mappings":"AAAA,OAAO,MAAP,IAAiB,OAAO,UAAxB,QAA0C,MAA1C;AACA,OAAO,QAAP,MAAqB,gBAArB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAAS,WAAT,QAA4B,OAA5B;;0BAEyB,gB;0BAAlB,Y;2BACmB,iB;2BAAnB,a;;AACP,SAAS,OAAT,EAAkB,eAAlB,QAAyC,aAAzC;;AAEA,IAAM,SAAS,IAAI,MAAJ,CAAW,iBAAX,CAAf;;AAEA;AACA,IAAM,SAAS,CACX,EAAE,MAAM,MAAR,EAAgB,QAAQ,gBAAxB,EAA0C,kBAAkB,EAA5D,EADW,EAEX,EAAE,MAAM,SAAR,EAAmB,QAAQ,mBAA3B,EAAgD,kBAAkB,EAAlE,EAFW,EAGX,EAAE,MAAM,QAAR,EAAkB,QAAQ,kBAA1B,EAA8C,kBAAkB,EAAhE,EAHW,EAG2D;AACtE,EAAE,MAAM,UAAR,EAAoB,QAAQ,oBAA5B,EAAkD,kBAAkB,EAApE,EAJW,EAKX,EAAE,MAAM,QAAR,EAAkB,QAAQ,iCAA1B,EAA6D,kBAAkB,EAA/E,EALW,CAAf;;AAQA,eAAe,SAAS,aAAT,CAAuB,IAAvB,EAA6B;AACxC,WAAQ,GAAD,IAAS;AACZ,YAAI,OAAJ,CAAY,MAAZ,GAAqB,UAAU,gBAAV,EAA4B,IAA5B,EAAkC;AACnD,mBAAO,KAAP,CAAa,aAAb,EAA4B,EAAE,IAAF,EAA5B;;AAEA,gBAAI,iBAAiB,OAArB,EAA8B;AAC1B,qBAAK,KAAL,GAAa,YAAY,iBAAiB,OAA7B,EAAsC,IAAtC,CAAb;AACH;;AAED,iBAAK,IAAL,GAAY,OAAO;AACf,0BAAU;AACN,6BAAS,IADH;AAEN,oCAFM;AAGN,wBAAI,UAAJ,GAAiB;AACb;AACA,4BAAM,KAAK,KAAK,OAAL,CAAa,GAAb,CAAiB,OAAjB,CAAyB,YAAzB,CAAX;;AAEA,6BAAK,IAAI,KAAT,IAAkB,MAAlB,EAA0B;AACtB,gCAAM,MAAM,MAAM,MAAN,CAAa,IAAb,CAAkB,EAAlB,CAAZ;AACA,gCAAI,OAAO,IAAI,CAAJ,KAAU,MAAM,gBAA3B,EAA6C;AACzC,uCAAO,iBAAP;AACH;AACJ;AACD,+BAAO,KAAP;AACH,qBAdK;AAeN,yCAAqB,KAAK,6BAAL;AAff,iBADK;AAkBf,yBAAS,IAlBM;AAmBf,sBAAM,iBAAiB,IAnBR;AAoBf,sBAAM,iBAAiB,OAAjB,GAA2B,SAA3B,GAAuC,IApB9B;AAqBf,6BAAa,iBAAiB,OAAjB,GAA2B,MAAM,KAAK,KAAL,CAAW,QAAX,EAAjC,GAAyD,MAAM,IArB7D;AAsBf,oBAtBe;AAuBf,qBAAK,iBAAiB,OAAjB,GAA2B,QAA3B,GAAsC;AAvB5B,aAAP,CAAZ;AAyBH,SAhCD;AAiCH,KAlCD;AAmCH;;AAED,OAAO,SAAS,UAAT,CAAoB,EAApB,EAAwB,MAAxB,EAAgC;AACnC,OAAG,IAAH,CAAQ,cAAR,EAAwB,MAAxB;AACH","file":"node.js","sourcesContent":["import render, { App as DefaultApp } from 'fody';\nimport ReduxApp from 'fody-redux-app';\nimport Logger from 'nightingale-logger';\nimport { createStore } from 'redux';\n\nexport createAction from './createAction';\nexport createReducer from './createReducer';\nexport { connect, combineReducers } from 'react-redux';\n\nconst logger = new Logger('alp.react-redux');\n\n// https://www.npmjs.com/package/babel-preset-modern-browsers\nconst agents = [\n    { name: 'Edge', regexp: /edge\\/([\\d]+)/i, modernMinVersion: 14 },\n    { name: 'Firefox', regexp: /firefox\\/([\\d]+)/i, modernMinVersion: 47 },\n    { name: 'Chrome', regexp: /chrome\\/([\\d]+)/i, modernMinVersion: 51 }, // also works for opera.\n    { name: 'Chromium', regexp: /chromium\\/([\\d]+)/i, modernMinVersion: 38 },\n    { name: 'Safari', regexp: /safari.*version\\/([\\d\\w\\.\\-]+)/i, modernMinVersion: 10 },\n];\n\nexport default function alpReactRedux(Html) {\n    return (app) => {\n        app.context.render = function (moduleDescriptor, data) {\n            logger.debug('render view', { data });\n\n            if (moduleDescriptor.reducer) {\n                this.store = createStore(moduleDescriptor.reducer, data);\n            }\n\n            this.body = render({\n                htmlData: {\n                    context: this,\n                    moduleDescriptor,\n                    get scriptName() {\n                        // TODO create alp-useragent with getter in context\n                        const ua = this.context.req.headers['user-agent'];\n\n                        for (let agent of agents) {\n                            const res = agent.regexp.exec(ua);\n                            if (res && res[1] >= agent.modernMinVersion) {\n                                return 'modern-browsers';\n                            }\n                        }\n                        return 'es5';\n                    },\n                    initialContextState: this.computeInitialStateForBrowser(),\n                },\n                context: this,\n                View: moduleDescriptor.View,\n                data: moduleDescriptor.reducer ? undefined : data,\n                initialData: moduleDescriptor.reducer ? () => this.store.getState() : () => null,\n                Html,\n                App: moduleDescriptor.reducer ? ReduxApp : DefaultApp,\n            });\n        };\n    };\n}\n\nexport function emitAction(to, action) {\n    to.emit('redux:action', action);\n}\n"]}