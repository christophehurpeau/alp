{"version":3,"sources":["../src/browser.js"],"names":["render","Logger","createStore","applyMiddleware","compose","promiseMiddleware","createFunctionMiddleware","websocketMiddleware","loadingBar","AlpReactApp","AlpReduxApp","Helmet","combineReducers","connect","createPureStatelessComponent","createAction","createReducer","createLoader","createEmitAction","createEmitPromiseAction","HYDRATE_STATE","logger","store","currentModuleDescriptorIdentifier","alpReactRedux","element","app","middlewares","websocket","loggerWebsocket","child","debug","on","action","dispatch","push","context","moduleDescriptor","data","_loaded","_loadingBar","View","Error","loader","currentState","identifier","getState","Object","create","then","reducer","type","state","undefined","window","devToolsExtension","f","assign","replaceReducer","App","appProps","props","err"],"mappings":"AAAA;AACA,OAAOA,MAAP;AACA,OAAOC,MAAP;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC;AACA,SAASC,iBAAT,EAA4BC,wBAA5B,QAA4D,uBAA5D;AACA,SAASC,mBAAT,QAAoC,aAApC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASD,WAAT,EAAsBC,WAAtB;AACA,SAASC,MAAT;AACA,SAASC,eAAT;AACA,SAASC,OAAT;0CACyC,gC;0CAAlCC,4B;0BACkB,sB;0BAAlBC,Y;2BACmB,uB;2BAAnBC,a;0BACkB,sB;0BAAlBC,Y;;AACP,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,aAA1D;;AAEA,IAAMC,gBAAgB,eAAtB;AACA,IAAMC,SAAS,IAAIpB,MAAJ,CAAW,iBAAX,CAAf;;AAEA,IAAIqB,cAAJ;AACA,IAAIC,0CAAJ;;AAGA,eAAe,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC7C,SAAO,UAACC,GAAD,EAAS;AACd,QAAMC,cAAc,CAClBrB,yBAAyBoB,GAAzB,CADkB,EAElBrB,iBAFkB,CAApB;;AAKA,QAAIqB,IAAIE,SAAR,EAAmB;AAAA;AACjB,YAAMC,kBAAkBR,OAAOS,KAAP,CAAa,WAAb,CAAxB;AACAD,wBAAgBE,KAAhB,CAAsB,iCAAtB;AACAL,YAAIE,SAAJ,CAAcI,EAAd,CAAiB,cAAjB,EAAiC,kBAAU;AACzCH,0BAAgBE,KAAhB,CAAsB,gCAAtB,EAAwDE,MAAxD;AACA,cAAIX,KAAJ,EAAW;AACTA,kBAAMY,QAAN,CAAeD,MAAf;AACD;AACF,SALD;AAMAN,oBAAYQ,IAAZ,CAAiB5B,oBAAoBmB,GAApB,CAAjB;AATiB;AAUlB;;AAEDA,QAAIU,OAAJ,CAAYpC,MAAZ,GAAqB,UAAUqC,gBAAV,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,WAA3C,EAAwD;AAAA;;AAC3E,UAAI,CAACA,WAAL,EAAkBA,cAAchC,YAAd;AAClBa,aAAOU,KAAP,CAAa,aAAb,EAA4B,EAAEO,IAAF,EAA5B;;AAEA,UAAI;AAAA;AACF,cAAmB,CAACD,iBAAiBI,IAArC,EAA2C;AACzC,kBAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,cAAI,CAACH,OAAD,IAAYF,iBAAiBM,MAAjC,EAAyC;AACvC,gBAAMC,eAAetB,SACrBC,sCAAsCc,iBAAiBQ,UADlC,GAEnBvB,MAAMwB,QAAN,EAFmB,GAEAC,OAAOC,MAAP,CAAc,IAAd,CAFrB;;AAIA;AACA;AAAA,iBAAOX,iBAAiBM,MAAjB,CAAwBC,YAAxB,EAAsCN,IAAtC,EAA4CW,IAA5C,CAAiD;AAAA,uBACtD,MAAKjD,MAAL,CAAYqC,gBAAZ,EAA8BC,IAA9B,EAAoC,IAApC,EAA0CE,WAA1C,CADsD;AAAA,eAAjD;AAAP;AAGD;;AAED,cAAIU,UAAUb,iBAAiBa,OAA/B;;AAEA,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAI5B,KAAJ,EAAW;AACT4B,wBAAU,mBAAM,CAAE,CAAlB;AACA5B,oBAAMY,QAAN,CAAe,EAAEiB,MAAM/B,aAAR,EAAuBgC,OAAOL,OAAOC,MAAP,CAAc,IAAd,CAA9B,EAAf;AACD;AACF,WALD,MAKO,IAAI1B,UAAU+B,SAAd,EAAyB;AAC9B/B,oBAAQpB,YACN,UAACkD,KAAD,EAAQnB,MAAR,EAAmB;AACjB,kBAAIA,OAAOkB,IAAP,KAAgB/B,aAApB,EAAmC;AACjCgC,wBAAQnB,OAAOmB,KAAf;AACD;;AAED,qBAAOF,QAAQE,KAAR,EAAenB,MAAf,CAAP;AACD,aAPK,EAQNK,IARM,EASNlC,QACED,gBAAgB,GAAGwB,WAAnB,CADF,EAEE2B,OAAOC,iBAAP,GAA2BD,OAAOC,iBAAP,EAA3B,GAAwD;AAAA,qBAAKC,CAAL;AAAA,aAF1D,CATM,CAAR;AAcD,WAfM,MAeA;AACL,gBAAMJ,QAAQL,OAAOC,MAAP,CAAc,IAAd,CAAd;;AAEA,gBAAI1B,SAASC,sCAAsCc,iBAAiBQ,UAApE,EAAgF;AAC9E;AACAE,qBAAOU,MAAP,CAAcL,KAAd,EAAqB9B,MAAMwB,QAAN,EAArB;AACD,aAHD,MAGO;AACL;AACAxB,oBAAMoC,cAAN,CAAqBR,OAArB;AACD;;AAEDH,mBAAOU,MAAP,CAAcL,KAAd,EAAqBd,IAArB;AACAhB,kBAAMY,QAAN,CAAe,EAAEiB,MAAM/B,aAAR,EAAuBgC,KAAvB,EAAf;AACD;;AAED7B,8CAAoCc,iBAAiBQ,UAArD;AACA,gBAAKvB,KAAL,GAAaA,KAAb;;AAEAtB,iBAAO;AACL2D,iBAAKT,UAAUxC,WAAV,GAAwBD,WADxB;AAELmD,sBAAU;AACRtC,mBADQ;AAERc,4BAFQ;AAGRC;AAHQ,aAFL;AAOLI,kBAAMJ,iBAAiBI,IAPlB;AAQLoB,mBAAOvB,IARF;AASLb;AATK,WAAP;AAxDE;;AAAA;AAmEH,OAnED,CAmEE,OAAOqC,GAAP,EAAY;AACZtB;AACA,cAAMsB,GAAN;AACD;;AAEDtB;AACD,KA7ED;AA8ED,GAhGD;AAiGD","file":"browser.js","sourcesContent":["/* global window */\nimport render from 'fody/src';\nimport Logger from 'nightingale-logger/src';\nimport { createStore, applyMiddleware, compose } from 'redux/src';\nimport { promiseMiddleware, createFunctionMiddleware } from './middlewares-browser';\nimport { websocketMiddleware } from './websocket';\nimport loadingBar from './loading-bar';\nimport AlpReactApp from './AlpReactApp';\nimport AlpReduxApp from './AlpReduxApp';\n\nexport { AlpReactApp, AlpReduxApp };\nexport { Helmet } from 'fody/src';\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport createPureStatelessComponent from 'react-pure-stateless-component';\nexport createAction from './utils/createAction';\nexport createReducer from './utils/createReducer';\nexport createLoader from './utils/createLoader';\nexport { createEmitAction, createEmitPromiseAction } from './websocket';\n\nconst HYDRATE_STATE = 'HYDRATE_STATE';\nconst logger = new Logger('alp:react-redux');\n\nlet store;\nlet currentModuleDescriptorIdentifier;\n\n\nexport default function alpReactRedux(element) {\n  return (app) => {\n    const middlewares = [\n      createFunctionMiddleware(app),\n      promiseMiddleware,\n    ];\n\n    if (app.websocket) {\n      const loggerWebsocket = logger.child('websocket');\n      loggerWebsocket.debug('register websocket redux:action');\n      app.websocket.on('redux:action', action => {\n        loggerWebsocket.debug('dispatch action from websocket', action);\n        if (store) {\n          store.dispatch(action);\n        }\n      });\n      middlewares.push(websocketMiddleware(app));\n    }\n\n    app.context.render = function (moduleDescriptor, data, _loaded, _loadingBar) {\n      if (!_loadingBar) _loadingBar = loadingBar();\n      logger.debug('render view', { data });\n\n      try {\n        if (!PRODUCTION && !moduleDescriptor.View) {\n          throw new Error('View is undefined, class expected');\n        }\n\n        if (!_loaded && moduleDescriptor.loader) {\n          const currentState = store &&\n          currentModuleDescriptorIdentifier === moduleDescriptor.identifier ?\n            store.getState() : Object.create(null);\n\n          // const _state = data;\n          return moduleDescriptor.loader(currentState, data).then(data => (\n            this.render(moduleDescriptor, data, true, _loadingBar)\n          ));\n        }\n\n        let reducer = moduleDescriptor.reducer;\n\n        if (!reducer) {\n          if (store) {\n            reducer = () => {};\n            store.dispatch({ type: HYDRATE_STATE, state: Object.create(null) });\n          }\n        } else if (store === undefined) {\n          store = createStore(\n            (state, action) => {\n              if (action.type === HYDRATE_STATE) {\n                state = action.state;\n              }\n\n              return reducer(state, action);\n            },\n            data,\n            compose(\n              applyMiddleware(...middlewares),\n              window.devToolsExtension ? window.devToolsExtension() : f => f,\n            ),\n          );\n        } else {\n          const state = Object.create(null);\n\n          if (store && currentModuleDescriptorIdentifier === moduleDescriptor.identifier) {\n            // keep state\n            Object.assign(state, store.getState());\n          } else {\n            // replace reducer\n            store.replaceReducer(reducer);\n          }\n\n          Object.assign(state, data);\n          store.dispatch({ type: HYDRATE_STATE, state });\n        }\n\n        currentModuleDescriptorIdentifier = moduleDescriptor.identifier;\n        this.store = store;\n\n        render({\n          App: reducer ? AlpReduxApp : AlpReactApp,\n          appProps: {\n            store,\n            context: this,\n            moduleDescriptor,\n          },\n          View: moduleDescriptor.View,\n          props: data,\n          element,\n        });\n      } catch (err) {\n        _loadingBar();\n        throw err;\n      }\n\n      _loadingBar();\n    };\n  };\n}\n"]}