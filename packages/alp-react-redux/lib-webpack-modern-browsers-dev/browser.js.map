{"version":3,"sources":["../src/browser.js"],"names":["render","App","DefaultApp","ReduxApp","Logger","createStore","applyMiddleware","compose","promiseMiddleware","createFunctionMiddleware","websocketMiddleware","loadingBar","combineReducers","connect","createPureStatelessComponent","createAction","createReducer","createLoader","createEmitAction","createEmitPromiseAction","HYDRATE_STATE","logger","store","currentModuleDescriptorIdentifier","alpReactRedux","element","app","middlewares","websocket","debug","on","action","info","dispatch","push","context","moduleDescriptor","data","_loaded","_loadingBar","View","Error","loader","currentState","identifier","getState","undefined","then","reducer","type","state","Object","create","window","devToolsExtension","f","assign","err"],"mappings":"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","file":"browser.js","sourcesContent":["/* global window, PRODUCTION */\nimport render, { App as DefaultApp } from 'fody';\nimport ReduxApp from 'fody-redux-app';\nimport Logger from 'nightingale-logger/src';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { promiseMiddleware, createFunctionMiddleware } from './middlewares-browser';\nimport { websocketMiddleware } from './websocket';\nimport loadingBar from './loading-bar';\n\nexport { combineReducers } from 'redux';\nexport { connect } from 'react-redux';\nexport createPureStatelessComponent from 'react-pure-stateless-component';\nexport createAction from './createAction';\nexport createReducer from './createReducer';\nexport createLoader from './createLoader';\nexport { createEmitAction, createEmitPromiseAction } from './websocket';\n\nconst HYDRATE_STATE = 'HYDRATE_STATE';\nconst logger = new Logger('alp:react-redux');\n\nlet store;\nlet currentModuleDescriptorIdentifier;\n\nexport default function alpReactRedux(element) {\n  return (app) => {\n    const middlewares = [\n      createFunctionMiddleware(app),\n      promiseMiddleware,\n    ];\n    if (app.websocket) {\n      logger.debug('register websocket redux:action');\n      app.websocket.on('redux:action', action => {\n        logger.info('dispatch action from websocket', action);\n        if (store) {\n          store.dispatch(action);\n        }\n      });\n      middlewares.push(websocketMiddleware(app));\n    }\n\n    app.context.render = function (moduleDescriptor, data, _loaded, _loadingBar) {\n      if (!_loadingBar) _loadingBar = loadingBar();\n      logger.debug('render view', { data });\n\n      try {\n        if (!PRODUCTION && !moduleDescriptor.View) {\n          throw new Error('View is undefined, class expected');\n        }\n\n        if (!_loaded && moduleDescriptor.loader) {\n          const currentState = store &&\n          currentModuleDescriptorIdentifier === moduleDescriptor.identifier ?\n            store.getState() : undefined;\n\n          // const _state = data;\n          return moduleDescriptor.loader(currentState, data).then(data => (\n            this.render(moduleDescriptor, data, true, _loadingBar)\n          ));\n        }\n\n        let reducer = moduleDescriptor.reducer;\n\n        if (!reducer) {\n          if (store) {\n            reducer = () => {};\n            store.dispatch({ type: HYDRATE_STATE, state: Object.create(null) });\n          }\n        } else if (store === undefined) {\n          store = createStore(\n            (state, action) => {\n              if (action.type === HYDRATE_STATE) {\n                state = action.state;\n              }\n\n              return reducer(state, action);\n            },\n            data,\n            compose(\n              applyMiddleware(...middlewares),\n              window.devToolsExtension ? window.devToolsExtension() : f => f,\n            ),\n          );\n        } else {\n          const state = Object.create(null);\n\n          if (store && currentModuleDescriptorIdentifier === moduleDescriptor.identifier) {\n            // keep state\n            Object.assign(state, store.getState());\n          }\n\n          Object.assign(state, data);\n          store.dispatch({ type: HYDRATE_STATE, state });\n        }\n\n        currentModuleDescriptorIdentifier = moduleDescriptor.identifier;\n        this.store = store;\n\n        render({\n          context: this,\n          View: moduleDescriptor.View,\n          data: data,\n          element,\n          App: reducer ? ReduxApp : DefaultApp,\n        });\n      } catch (err) {\n        _loadingBar();\n        throw err;\n      }\n\n      _loadingBar();\n    };\n  };\n}\n"]}