{"version":3,"sources":["../src/browser.js"],"names":["render","unmountComponentAtNode","Logger","createStore","applyMiddleware","compose","promiseMiddleware","createFunctionMiddleware","websocketMiddleware","loadingBar","AlpReactApp","AlpReduxApp","Helmet","combineReducers","connect","createPureStatelessComponent","createAction","createReducer","createLoader","createEmitAction","createEmitPromiseAction","HYDRATE_STATE","logger","store","currentModuleDescriptorIdentifier","createHydratableReducer","reducer","state","action","type","alpReactRedux","element","app","middleware","websocket","loggerWebsocket","child","debug","on","dispatch","push","context","moduleDescriptor","data","_loaded","_loadingBar","loader","currentState","identifier","getState","Object","create","then","undefined","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","isSameModule","assign","replaceReducer","App","appProps","View","props","err"],"mappings":"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","file":"browser.js","sourcesContent":["/* global window */\nimport render, { unmountComponentAtNode } from 'fody/src';\nimport Logger from 'nightingale-logger/src';\nimport { createStore, applyMiddleware, compose } from 'redux/src';\nimport { promiseMiddleware, createFunctionMiddleware } from './middleware-browser';\nimport { websocketMiddleware } from './websocket';\nimport loadingBar from './loading-bar';\nimport AlpReactApp from './AlpReactApp';\nimport AlpReduxApp from './AlpReduxApp';\n\nexport { AlpReactApp, AlpReduxApp };\nexport { Helmet } from 'fody/src';\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport createPureStatelessComponent from 'react-pure-stateless-component';\nexport createAction from './utils/createAction';\nexport createReducer from './utils/createReducer';\nexport createLoader from './utils/createLoader';\nexport { createEmitAction, createEmitPromiseAction } from './websocket';\n\nconst HYDRATE_STATE = 'HYDRATE_STATE';\nconst logger = new Logger('alp:react-redux');\n\nlet store;\nlet currentModuleDescriptorIdentifier;\n\nconst createHydratableReducer = (reducer: Function) => (\n  (state, action) => {\n    if (action.type === HYDRATE_STATE) {\n      state = action.state;\n    }\n\n    return reducer(state, action);\n  }\n);\n\nexport default function alpReactRedux(element) {\n  return (app) => {\n    const middleware = [\n      createFunctionMiddleware(app),\n      promiseMiddleware,\n    ];\n\n    if (app.websocket) {\n      const loggerWebsocket = logger.child('websocket');\n      loggerWebsocket.debug('register websocket redux:action');\n      app.websocket.on('redux:action', action => {\n        loggerWebsocket.debug('dispatch action from websocket', action);\n        if (store) {\n          store.dispatch(action);\n        }\n      });\n      middleware.push(websocketMiddleware(app));\n    }\n\n    app.context.render = function (moduleDescriptor, data, _loaded, _loadingBar) {\n      if (!_loadingBar) _loadingBar = loadingBar();\n      logger.debug('render view', { data });\n\n      try {\n        if (!PRODUCTION && !moduleDescriptor.View) {\n          throw new Error('View is undefined, class expected');\n        }\n\n        if (!_loaded && moduleDescriptor.loader) {\n          const currentState = store &&\n          currentModuleDescriptorIdentifier === moduleDescriptor.identifier ?\n            store.getState() : Object.create(null);\n\n          // const _state = data;\n          return moduleDescriptor.loader(currentState, data).then(data => (\n            this.render(moduleDescriptor, data, true, _loadingBar)\n          ));\n        }\n\n        let reducer = moduleDescriptor.reducer;\n\n        if (!reducer) {\n          if (store) {\n            reducer = () => {};\n            store.dispatch({ type: HYDRATE_STATE, state: Object.create(null) });\n          }\n        } else if (store === undefined) {\n          const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n          store = createStore(\n            createHydratableReducer(reducer),\n            data,\n            composeEnhancers(applyMiddleware(...middleware)),\n          );\n        } else {\n          const state = Object.create(null);\n          const isSameModule = currentModuleDescriptorIdentifier === moduleDescriptor.identifier;\n\n          if (store) {\n            if (isSameModule) {\n              // keep state\n              Object.assign(state, store.getState());\n            } else {\n              // destroy current component\n              unmountComponentAtNode(element);\n              // replace reducer\n              store.replaceReducer(createHydratableReducer(reducer));\n            }\n          }\n\n          Object.assign(state, data);\n          store.dispatch({ type: HYDRATE_STATE, state });\n        }\n\n        currentModuleDescriptorIdentifier = moduleDescriptor.identifier;\n\n        if (reducer) {\n          this.store = store;\n        }\n\n        render({\n          App: reducer ? AlpReduxApp : AlpReactApp,\n          appProps: {\n            store,\n            context: this,\n            moduleDescriptor,\n          },\n          View: moduleDescriptor.View,\n          props: data,\n          element,\n        });\n      } catch (err) {\n        _loadingBar();\n        throw err;\n      }\n\n      _loadingBar();\n    };\n  };\n}\n"]}