{"version":3,"sources":["../src/websocket.js"],"names":["Logger","createAction","logger","createEmitAction","type","argsNamesOrHandler","meta","websocket","createEmitPromiseAction","promise","websocketMiddleware","app","store","next","action","emit","resolved","setTimeout","warn","console","log","clearTimeout","dispatch"],"mappings":"AAAA,OAAOA,MAAP;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;AAEA,MAAMC,SAAS,IAAIF,MAAJ,CAAW,2BAAX,CAAf;;AAEA,gEAA8B,gBAAM,UAAN,GAAgB,UAAhB,EAAyB,YAAzB,CAA9B;;;AAEA,OAAO,SAASG,gBAAT,CAA0BC,IAA1B,EAAwCC,kBAAxC,EAAqF;AAAA,kBAAvD,UAAuD;;AAAA,gCAA3B,WAAG,sBAAH,CAA2B;;AAAA;AAAA;;AAC1F,SAAOJ,aAAaG,IAAb,EAAmBC,kBAAnB,EAAuC,EAAEC,MAAM,EAAEC,WAAW,IAAb,EAAR,EAAvC,CAAP;AACD;;AAED,OAAO,SAASC,uBAAT,CACLJ,IADK,EAELC,kBAFK,EAGL;AAAA,mBAFI,UAEJ;;AAAA,iCADkB,QAAE,WAAC,QAAM,UAAN,CAAD,CAAF,EAAmB,UAAnB,EAA4B,YAA5B,CAClB;;AAAA;AAAA;;AACA,SAAOJ,aAAaG,IAAb,EAAmBC,kBAAnB,EAAuC,EAAEC,MAAM,EAAEC,WAAW,IAAb,EAAmBE,SAAS,IAA5B,EAAR,EAAvC,CAAP;AACD;;AAED,OAAO,MAAMC,sBAAsBC,OAAOC,SAASC,QAASC,MAAD,IAAY;AACrE,MAAI,CAACA,OAAOR,IAAR,IAAgB,CAACQ,OAAOR,IAAP,CAAYC,SAAjC,EAA4C;AAC1C,WAAOM,KAAKC,MAAL,CAAP;AACD;;AAED,MAAI,CAACA,OAAOR,IAAP,CAAYG,OAAjB,EAA0B;AACxBE,QAAIJ,SAAJ,CAAcQ,IAAd,CAAmBD,OAAOV,IAA1B,EAAgCU,MAAhC;AACA;AACD;;AAED,QAAME,WAAWC,WAAW,MAAM;AAChCf,WAAOgB,IAAP,CAAY,wBAAZ,EAAsC,EAAEJ,MAAF,EAAtC;AACA;AACAK,YAAQC,GAAR,CAAY,wCAAZ,EAAsDN,MAAtD;AACD,GAJgB,EAId,KAJc,CAAjB;;AAMAH,MAAIJ,SAAJ,CAAcQ,IAAd,CAAmBD,OAAOV,IAA1B,EAAgCU,MAAhC,EAAyCA,MAAD,IAAY;AAClDO,iBAAaL,QAAb;AACA,QAAIF,MAAJ,EAAY;AACVF,YAAMU,QAAN,CAAeR,MAAf;AACD;AACF,GALD;AAMD,CAtBM","file":"websocket.js","sourcesContent":["import Logger from 'nightingale-logger/src';\nimport createAction from './utils/createAction';\n\nconst logger = new Logger('alp:react-redux:websocket');\n\ntype ArgsNamesOfHandlerType = Array<string> | string | Function;\n\nexport function createEmitAction(type: string, argsNamesOrHandler: ?ArgsNamesOfHandlerType) {\n  return createAction(type, argsNamesOrHandler, { meta: { websocket: true } });\n}\n\nexport function createEmitPromiseAction(\n  type: string,\n  argsNamesOrHandler: ?Array<string> | string | Function,\n) {\n  return createAction(type, argsNamesOrHandler, { meta: { websocket: true, promise: true } });\n}\n\nexport const websocketMiddleware = app => store => next => (action) => {\n  if (!action.meta || !action.meta.websocket) {\n    return next(action);\n  }\n\n  if (!action.meta.promise) {\n    app.websocket.emit(action.type, action);\n    return;\n  }\n\n  const resolved = setTimeout(() => {\n    logger.warn('websocket emit timeout', { action });\n    // eslint-disable-next-line no-console\n    console.log('alp.react-redux websocket emit timeout', action);\n  }, 10000);\n\n  app.websocket.emit(action.type, action, (action) => {\n    clearTimeout(resolved);\n    if (action) {\n      store.dispatch(action);\n    }\n  });\n};\n"]}