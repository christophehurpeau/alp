{"version":3,"sources":["../src/index.js"],"names":["combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","emitAction","Helmet","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderHtml","app","options","content","helmet","renderStatic","App","ctx","config","get","ua","req","headers","name","createElement","moduleVisitor","PreRenderWrappedApp","context","store","getState","visitor","getReducers","sharedReducers","WrappedApp","removeCtxFromInitialData","initialData","body","version","scriptName","undefined","styleName","polyfillFeatures","loggerWebsocket","child","to","action","debug","emit"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport Helmet from 'react-helmet';\nimport reactTreeWalker from 'react-tree-walker';\nimport Logger from 'nightingale-logger/src';\nimport isModernBrowser from 'modern-browsers';\nimport htmlLayout from './layout/htmlLayout';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createServerStore from './store/createServerStore';\nimport createModuleVisitor from './module/createModuleVisitor';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleServer';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderHtml = (app, options) => {\n  const content = renderToString(app);\n  const helmet = Helmet.renderStatic();\n  return htmlLayout(helmet, content, options);\n};\n\ntype OptionsType = {|\n  sharedReducers: ?{ [string]: any },\n  scriptName: ?string | false,\n  styleName: ?string | false,\n  polyfillFeatures: ?string,\n|};\n\nexport default (App, options: ?OptionsType = {}) => async ctx => {\n  const version: string = ctx.config.get('version');\n  // TODO create alp-useragent with getter in context\n  const ua = ctx.req.headers['user-agent'];\n  const name = isModernBrowser(ua) ? 'modern-browsers' : 'es5';\n\n  const app = React.createElement(App);\n  const moduleVisitor = createModuleVisitor();\n  const preRenderStore = { getState: () => ({ ctx }) };\n  const PreRenderWrappedApp = createAlpAppWrapper(app, { context: ctx, store: preRenderStore });\n  await reactTreeWalker(React.createElement(PreRenderWrappedApp), moduleVisitor.visitor);\n\n  const store = createServerStore(ctx, moduleVisitor.getReducers(), {\n    sharedReducers: options.sharedReducers,\n  });\n\n  const WrappedApp = createAlpAppWrapper(app, { context: ctx, store });\n\n  // eslint-disable-next-line no-unused-vars\n  const { ctx: removeCtxFromInitialData, ...initialData } = store.getState();\n  ctx.body = await renderHtml(React.createElement(WrappedApp), {\n    version,\n    scriptName: options.scriptName !== undefined ? options.scriptName : name,\n    styleName: options.styleName !== undefined ? options.styleName : name,\n    polyfillFeatures: options.polyfillFeatures,\n    initialData,\n  });\n};\n\nconst loggerWebsocket = logger.child('websocket');\n\nexport function emitAction(to, action) {\n  loggerWebsocket.debug('emitAction', action);\n  to.emit('redux:action', action);\n}\n"]}