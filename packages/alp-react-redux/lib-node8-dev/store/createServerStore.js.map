{"version":3,"sources":["../../src/store/createServerStore.js"],"names":["ctx","moduleReducers","sharedReducers","initialContext","computeInitialContextForBrowser","state","keys","Object","initialContextReducers","create","forEach","key","rootReducer","app","alpReducers","module"],"mappings":";;;;;;AAAA;;AACA;;;;;;kBAEe,2BAACA,GAAD,EAAMC,cAAN,EAAsB,EAAEC,cAAF,EAAtB,EAA6C;AAC1D;AACA,QAAMC,iBAAiBH,IAAII,+BAAJ,GAAsCC,KAA7D;AACA,QAAMC,OAAOC,OAAOD,IAAP,CAAYH,cAAZ,CAAb;AACA,QAAMK,yBAAyBD,OAAOE,MAAP,CAAc,IAAd,CAA/B;AACAH,OAAKI,OAAL,CAAaC,OAAQH,uBAAuBG,GAAvB,6BAArB,CAL0D,EAO1DR,eAAeH,GAAf,GAAqBA,GAPqC;;;AAS1D,QAAMY,cAAc,8CACfJ,sBADe,EAEfR,IAAIa,GAAJ,CAAQC,WAFO,EAGfZ,cAHe;AAIlBF,kCAJkB;AAKlBe,YAAQd,iBAAiB,4BAAgBA,cAAhB,CAAjB;AALU,KAApB;;AAQA,SAAO,wBAAYW,WAAZ,EAAyBT,cAAzB,CAAP;AACD,C","file":"createServerStore.js","sourcesContent":["import { combineReducers, createStore } from 'redux/src';\nimport identityReducer from '../utils/identityReducer';\n\nexport default (ctx, moduleReducers, { sharedReducers }) => {\n  // TODO create new API ?\n  const initialContext = ctx.computeInitialContextForBrowser().state;\n  const keys = Object.keys(initialContext);\n  const initialContextReducers = Object.create(null);\n  keys.forEach(key => (initialContextReducers[key] = identityReducer));\n\n  initialContext.ctx = ctx;\n\n  const rootReducer = combineReducers({\n    ...initialContextReducers,\n    ...ctx.app.alpReducers,\n    ...sharedReducers,\n    ctx: identityReducer,\n    module: moduleReducers ? combineReducers(moduleReducers) : identityReducer,\n  });\n\n  return createStore(rootReducer, initialContext);\n};\n"]}