{"version":3,"sources":["../../src/store/createServerStore.js"],"names":["ctx","moduleReducers","sharedReducers","initialContext","reduxInitialContext","rootReducer","app","reduxReducers","module"],"mappings":";;;;;;AAAA;;AACA;;;;;;kBAEe,2BAACA,GAAD,EAAMC,cAAN,EAAsB,EAAEC,cAAF,EAAtB,EAA6C;AAC1D,QAAMC;AACJH;AADI,KAEDA,IAAII,mBAFH;AAKSJ,OALT,EAKeA;AALf,IAAN;;AAOA,QAAMK,cAAc,8CACfL,IAAIM,GAAJ,CAAQC,aADO,EAEfL,cAFe;AAGlBF,kCAHkB;AAIlBQ,YAAQP,iBAAiB,4BAAgBA,cAAhB,CAAjB;AAJU,KAApB;;AAOA,SAAO,wBAAYI,WAAZ,EAAyBF,cAAzB,CAAP;AACD,C","file":"createServerStore.js","sourcesContent":["import { combineReducers, createStore } from 'redux/src';\nimport identityReducer from '../utils/identityReducer';\n\nexport default (ctx, moduleReducers, { sharedReducers }) => {\n  const initialContext = {\n    ctx,\n    ...ctx.reduxInitialContext,\n  };\n\n  initialContext.ctx = ctx;\n\n  const rootReducer = combineReducers({\n    ...ctx.app.reduxReducers,\n    ...sharedReducers,\n    ctx: identityReducer,\n    module: moduleReducers ? combineReducers(moduleReducers) : identityReducer,\n  });\n\n  return createStore(rootReducer, initialContext);\n};\n"]}