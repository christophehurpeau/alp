{"version":3,"sources":["../../src/store/createBrowserStore.js"],"names":["app","ctx","moduleReducer","middlewares","sharedReducers","rootReducer","alpReducers","module","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","__INITIAL_DATA__"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;;;kBAEe,4BAACA,GAAD,EAAMC,GAAN,EAAWC,aAAX,EAA0B,EAAEC,WAAF,EAAeC,cAAf,EAA1B,EAA8D;AAC3E,QAAMC,cAAc,8CACfL,IAAIM,WADW,EAEfF,cAFe;AAGlBH,kCAHkB;AAIlBM,YAAQL;AAJU,KAApB;;AAOA,QAAMM,mBAAmBC,OAAOC,oCAAP,kBAAzB;;AAIA,SAFAP,cAAc,CAAC,iDAAyBH,GAAzB,CAAD,wCAAmD,GAAGG,WAAtD,CAEd,EAAO,wBACLE,WADK,kBAEHJ,GAFG,IAEKQ,OAAOE,gBAFZ,GAGLH,iBAAiB,4BAAgB,GAAGL,WAAnB,CAAjB,CAHK,CAAP;AAKD,C","file":"createBrowserStore.js","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from 'redux/src';\nimport { promiseMiddleware, createFunctionMiddleware } from './middleware-browser';\nimport identityReducer from '../utils/identityReducer';\n\nexport default (app, ctx, moduleReducer, { middlewares, sharedReducers }) => {\n  const rootReducer = combineReducers({\n    ...app.alpReducers,\n    ...sharedReducers,\n    ctx: identityReducer,\n    module: moduleReducer,\n  });\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  middlewares = [createFunctionMiddleware(app), promiseMiddleware, ...middlewares];\n\n  return createStore(\n    rootReducer,\n    { ctx, ...window.__INITIAL_DATA__ },\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n};\n"]}