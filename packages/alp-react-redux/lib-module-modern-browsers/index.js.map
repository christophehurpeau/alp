{"version":3,"sources":["../src/index.js"],"names":["React","renderToString","Helmet","reactTreeWalker","Logger","isModernBrowser","htmlLayout","createAlpAppWrapper","createServerStore","createModuleVisitor","combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderHtml","app","options","content","helmet","renderStatic","App","ctx","version","config","get","ua","req","headers","name","createElement","moduleVisitor","PreRenderWrappedApp","context","store","getState","visitor","getReducers","sharedReducers","WrappedApp","removeCtxFromInitialData","initialData","body","scriptName","styleName","polyfillFeatures","loggerWebsocket","child","emitAction","to","action","debug","emit"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport Helmet from 'react-helmet';\nimport reactTreeWalker from 'react-tree-walker';\nimport Logger from 'nightingale-logger/src';\nimport isModernBrowser from 'modern-browsers';\nimport htmlLayout from './layout/htmlLayout';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createServerStore from './store/createServerStore';\nimport createModuleVisitor from './module/createModuleVisitor';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleServer';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderHtml = (app, options) => {\n  const content = renderToString(app);\n  const helmet = Helmet.renderStatic();\n  return htmlLayout(helmet, content, options);\n};\n\ntype OptionsType = {|\n  sharedReducers: ?{ [string]: any },\n  scriptName: ?string | false,\n  styleName: ?string | false,\n  polyfillFeatures: ?string,\n|};\n\nexport default (App, options: ?OptionsType = {}) => async ctx => {\n  const version: string = ctx.config.get('version');\n  // TODO create alp-useragent with getter in context\n  const ua = ctx.req.headers['user-agent'];\n  const name = isModernBrowser(ua) ? 'modern-browsers' : 'es5';\n\n  const app = React.createElement(App);\n  const moduleVisitor = createModuleVisitor();\n  const preRenderStore = { getState: () => ({ ctx }) };\n  const PreRenderWrappedApp = createAlpAppWrapper(app, { context: ctx, store: preRenderStore });\n  await reactTreeWalker(React.createElement(PreRenderWrappedApp), moduleVisitor.visitor);\n\n  const store = createServerStore(ctx, moduleVisitor.getReducers(), {\n    sharedReducers: options.sharedReducers,\n  });\n\n  const WrappedApp = createAlpAppWrapper(app, { context: ctx, store });\n\n  // eslint-disable-next-line no-unused-vars\n  const { ctx: removeCtxFromInitialData, ...initialData } = store.getState();\n  ctx.body = await renderHtml(React.createElement(WrappedApp), {\n    version,\n    scriptName: options.scriptName !== undefined ? options.scriptName : name,\n    styleName: options.styleName !== undefined ? options.styleName : name,\n    polyfillFeatures: options.polyfillFeatures,\n    initialData,\n  });\n};\n\nconst loggerWebsocket = logger.child('websocket');\n\nexport function emitAction(to, action) {\n  loggerWebsocket.debug('emitAction', action);\n  to.emit('redux:action', action);\n}\n"]}