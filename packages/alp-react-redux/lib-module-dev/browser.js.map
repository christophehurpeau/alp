{"version":3,"sources":["../src/browser.js"],"names":["BrowserAppContainer","React","render","Helmet","reactTreeWalker","Logger","createAlpAppWrapper","createBrowserStore","createBrowserModuleStoreReducer","websocketMiddleware","createModuleVisitor","combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderApp","createElement","App","document","getElementById","app","sharedReducers","ctx","createContext","store","moduleStoreReducer","createStore","moduleReducers","reducer","middlewares","websocket","filter","Boolean","preRender","moduleVisitor","preRenderStore","getState","PreRenderWrappedApp","context","visitor","getReducers","WrappedApp","setModuleReducers","set","reducers","success","loggerWebsocket","child","debug","on","action","dispatch"],"mappings":"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","file":"browser.js","sourcesContent":["import BrowserAppContainer from 'alp-dev/BrowserAppContainer';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Helmet from 'react-helmet';\nimport reactTreeWalker from 'react-tree-walker';\nimport Logger from 'nightingale-logger/src';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createBrowserStore from './store/createBrowserStore';\nimport createBrowserModuleStoreReducer from './store/createBrowserModuleStoreReducer';\nimport { websocketMiddleware } from './websocket';\nimport createModuleVisitor from './module/createModuleVisitor';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleBrowser';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderApp = App => render(React.createElement(App), document.getElementById('react-app'));\n\nexport default async (app, App, { sharedReducers } = {}) => {\n  const ctx = app.createContext();\n  let store;\n  let moduleStoreReducer;\n\n  const createStore = (ctx, moduleReducers) => {\n    moduleStoreReducer = createBrowserModuleStoreReducer(moduleReducers);\n    const store = createBrowserStore(app, ctx, moduleStoreReducer.reducer, {\n      sharedReducers,\n      middlewares: [app.websocket && websocketMiddleware(app)].filter(Boolean),\n    });\n    app.store = store;\n    return store;\n  };\n\n  const preRender = async app => {\n    const moduleVisitor = createModuleVisitor();\n    const preRenderStore = { getState: () => ({ ctx }) };\n    const PreRenderWrappedApp = createAlpAppWrapper(app, {\n      context: ctx,\n      store: preRenderStore,\n    });\n    await reactTreeWalker(React.createElement(PreRenderWrappedApp), moduleVisitor.visitor);\n\n    return moduleVisitor.getReducers();\n  };\n\n  const render = async App => {\n    let app = React.createElement(App);\n    if (!PRODUCTION) {\n      app = React.createElement(BrowserAppContainer, {}, app);\n    }\n\n    const moduleReducers = await preRender(app);\n\n    if (!PRODUCTION) {\n      store = createStore(ctx, moduleReducers);\n    } else {\n      // in DEV\n      // eslint-disable-next-line no-lonely-if\n      if (!store) {\n        store = createStore(ctx, moduleReducers);\n      } else {\n        moduleStoreReducer.setReducers(moduleReducers);\n      }\n    }\n\n    const WrappedApp = createAlpAppWrapper(app, {\n      context: ctx,\n      store,\n      setModuleReducers: reducers => moduleStoreReducer.set(store, reducers),\n    });\n\n    renderApp(WrappedApp);\n    logger.success('rendered');\n  };\n\n  if (app.websocket) {\n    const loggerWebsocket = logger.child('websocket');\n    loggerWebsocket.debug('register websocket redux:action');\n    app.websocket.on('redux:action', action => {\n      loggerWebsocket.debug('dispatch action from websocket', action);\n      if (store) {\n        store.dispatch(action);\n      }\n    });\n  }\n\n  await render(App);\n\n  return render;\n};\n"]}