{"version":3,"sources":["../src/browser.js"],"names":["BrowserAppContainer","contentLoaded","React","render","Helmet","reactTreeWalker","Logger","createAlpAppWrapper","createBrowserStore","createBrowserModuleStoreReducer","createModuleVisitor","ReduxActionType","combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderApp","createElement","App","document","getElementById","preRender","ctx","appElement","moduleVisitor","preRenderStore","getState","PreRenderWrappedApp","context","store","visitor","getReducers","app","reduxReducers","loading","state","action","meta","undefined","reduxMiddlewares","middlewares","sharedReducers","moduleStoreReducer","createStore","moduleReducers","reducer","window","createContext","WrappedApp","setModuleReducers","set","reducers","success"],"mappings":"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","file":"browser.js","sourcesContent":["import BrowserAppContainer from 'alp-dev/BrowserAppContainer';\nimport contentLoaded from 'content-loaded';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Helmet from 'react-helmet';\nimport reactTreeWalker from 'react-tree-walker';\nimport Logger from 'nightingale-logger/src';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createBrowserStore from './store/createBrowserStore';\nimport createBrowserModuleStoreReducer from './store/createBrowserModuleStoreReducer';\nimport createModuleVisitor from './module/createModuleVisitor';\nimport type { ReduxActionType } from './types';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleBrowser';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderApp = App => render(React.createElement(App), document.getElementById('react-app'));\n\nconst preRender = async (ctx, appElement) => {\n  const moduleVisitor = createModuleVisitor();\n  const preRenderStore = { getState: () => ({ ctx }) };\n  const PreRenderWrappedApp = createAlpAppWrapper(appElement, {\n    context: ctx,\n    store: preRenderStore,\n  });\n  await reactTreeWalker(React.createElement(PreRenderWrappedApp), moduleVisitor.visitor);\n\n  return moduleVisitor.getReducers();\n};\n\nexport default app => {\n  app.reduxReducers = {\n    loading: (state: ?number = 0, action: ReduxActionType) => {\n      if (action.meta && action.meta.loading !== undefined) {\n        return state + (action.meta.loading ? 1 : -1);\n      }\n      return state;\n    },\n  };\n  app.reduxMiddlewares = [];\n\n  return {\n    renderApp: async (App, { middlewares = [], sharedReducers } = {}) => {\n      let store;\n      let moduleStoreReducer;\n\n      const createStore = (ctx, moduleReducers) => {\n        moduleStoreReducer = createBrowserModuleStoreReducer(moduleReducers);\n        const store = createBrowserStore(app, ctx, moduleStoreReducer.reducer, {\n          middlewares,\n          sharedReducers,\n        });\n        app.store = store;\n        window.store = store;\n        return store;\n      };\n\n      const ctx = app.createContext();\n\n      const render = async App => {\n        let appElement = React.createElement(App);\n        if (!PRODUCTION) {\n          appElement = React.createElement(BrowserAppContainer, {}, appElement);\n        }\n\n        const moduleReducers = await preRender(ctx, appElement);\n\n        if (!PRODUCTION) {\n          store = createStore(ctx, moduleReducers);\n        } else {\n          // in DEV\n          // eslint-disable-next-line no-lonely-if\n          if (!store) {\n            store = createStore(ctx, moduleReducers);\n          } else {\n            moduleStoreReducer.setReducers(moduleReducers);\n          }\n        }\n\n        const WrappedApp = createAlpAppWrapper(appElement, {\n          context: ctx,\n          store,\n          setModuleReducers: reducers => moduleStoreReducer.set(store, reducers),\n        });\n\n        await contentLoaded();\n        renderApp(WrappedApp);\n        logger.success('rendered');\n      };\n\n      await render(App);\n\n      return render;\n    },\n  };\n};\n"]}