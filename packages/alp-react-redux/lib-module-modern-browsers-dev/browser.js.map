{"version":3,"sources":["../src/browser.js"],"names":["BrowserAppContainer","contentLoaded","React","render","Helmet","reactTreeWalker","Logger","createAlpAppWrapper","createBrowserStore","createBrowserModuleStoreReducer","websocketMiddleware","createModuleVisitor","combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderApp","createElement","App","document","getElementById","app","sharedReducers","ctx","createContext","store","moduleStoreReducer","createStore","moduleReducers","reducer","middlewares","websocket","filter","Boolean","preRender","moduleVisitor","PreRenderWrappedApp","context","getState","visitor","getReducers","WrappedApp","setModuleReducers","set","reducers","success","loggerWebsocket","child","debug","on","action","dispatch"],"mappings":"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","file":"browser.js","sourcesContent":["import BrowserAppContainer from 'alp-dev/BrowserAppContainer';\nimport contentLoaded from 'content-loaded';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Helmet from 'react-helmet';\nimport reactTreeWalker from 'react-tree-walker';\nimport Logger from 'nightingale-logger/src';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createBrowserStore from './store/createBrowserStore';\nimport createBrowserModuleStoreReducer from './store/createBrowserModuleStoreReducer';\nimport { websocketMiddleware } from './websocket';\nimport createModuleVisitor from './module/createModuleVisitor';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleBrowser';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderApp = App => render(React.createElement(App), document.getElementById('react-app'));\n\nexport default async (app, App, { sharedReducers } = {}) => {\n  const ctx = app.createContext();\n  let store;\n  let moduleStoreReducer;\n\n  const createStore = (ctx, moduleReducers) => {\n    moduleStoreReducer = createBrowserModuleStoreReducer(moduleReducers);\n    const store = createBrowserStore(app, ctx, moduleStoreReducer.reducer, {\n      sharedReducers,\n      middlewares: [app.websocket && websocketMiddleware(app)].filter(Boolean),\n    });\n    app.store = store;\n    return store;\n  };\n\n  const preRender = async app => {\n    const moduleVisitor = createModuleVisitor();\n    const preRenderStore = { getState: () => ({ ctx }) };\n    const PreRenderWrappedApp = createAlpAppWrapper(app, {\n      context: ctx,\n      store: preRenderStore,\n    });\n    await reactTreeWalker(React.createElement(PreRenderWrappedApp), moduleVisitor.visitor);\n\n    return moduleVisitor.getReducers();\n  };\n\n  const render = async App => {\n    let app = React.createElement(App);\n    if (!PRODUCTION) {\n      app = React.createElement(BrowserAppContainer, {}, app);\n    }\n\n    const moduleReducers = await preRender(app);\n\n    if (!PRODUCTION) {\n      store = createStore(ctx, moduleReducers);\n    } else {\n      // in DEV\n      // eslint-disable-next-line no-lonely-if\n      if (!store) {\n        store = createStore(ctx, moduleReducers);\n      } else {\n        moduleStoreReducer.setReducers(moduleReducers);\n      }\n    }\n\n    const WrappedApp = createAlpAppWrapper(app, {\n      context: ctx,\n      store,\n      setModuleReducers: reducers => moduleStoreReducer.set(store, reducers),\n    });\n\n    renderApp(WrappedApp);\n    logger.success('rendered');\n  };\n\n  if (app.websocket) {\n    const loggerWebsocket = logger.child('websocket');\n    loggerWebsocket.debug('register websocket redux:action');\n    app.websocket.on('redux:action', action => {\n      loggerWebsocket.debug('dispatch action from websocket', action);\n      if (store) {\n        store.dispatch(action);\n      }\n    });\n  }\n\n  await contentLoaded();\n  await render(App);\n\n  return render;\n};\n"]}