{"version":3,"sources":["../src/index.js"],"names":["React","renderToString","Helmet","Logger","isModernBrowser","htmlLayout","createAlpAppWrapper","createServerStore","createModuleStoreReducer","combineReducers","connect","createAction","createReducer","createLoader","classNames","createPureStatelessComponent","identityReducer","AlpModule","AlpReduxModule","Body","AppContainer","logger","renderHtml","App","options","content","createElement","helmet","renderStatic","ctx","config","get","ua","req","headers","name","urlGenerator","moduleStoreReducer","store","reducer","sharedReducers","WrappedApp","context","app","setModuleReducers","set","reducers","body","version","scriptName","undefined","styleName","polyfillFeatures","initialData","getState","loggerWebsocket","child","emitAction","to","action","debug","emit"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport Helmet from 'react-helmet';\nimport Logger from 'nightingale-logger/src';\nimport isModernBrowser from 'modern-browsers';\nimport htmlLayout from './layout/htmlLayout';\nimport createAlpAppWrapper from './createAlpAppWrapper';\nimport createServerStore from './store/createServerStore';\nimport createModuleStoreReducer from './store/createModuleStoreReducer';\n\nexport { Helmet };\nexport { combineReducers } from 'redux/src';\nexport { connect } from 'react-redux/src';\nexport {\n  createAction,\n  createReducer,\n  createLoader,\n  classNames,\n  createPureStatelessComponent,\n  identityReducer,\n} from './utils/index';\nexport AlpModule from './module/AlpModule';\nexport AlpReduxModule from './module/AlpReduxModuleServer';\nexport Body from './layout/Body';\nexport AppContainer from './layout/AppContainer';\n\nconst logger = new Logger('alp:react-redux');\n\nconst renderHtml = (App, options) => {\n  const content = renderToString(React.createElement(App));\n  const helmet = Helmet.renderStatic();\n  return htmlLayout(helmet, content, options);\n};\n\ntype OptionsType = {|\n  sharedReducers: ?{ [string]: any },\n  scriptName: ?string | false,\n  styleName: ?string | false,\n  polyfillFeatures: ?string,\n|};\n\nexport default (App, options: ?OptionsType = {}) => ctx => {\n  const version: string = ctx.config.get('version');\n  // TODO create alp-useragent with getter in context\n  const ua = ctx.req.headers['user-agent'];\n  const name = isModernBrowser(ua) ? 'modern-browsers' : 'es5';\n  ctx.urlGenerator = () => null;\n\n  const moduleStoreReducer = createModuleStoreReducer();\n  const store = createServerStore(ctx, moduleStoreReducer.reducer, {\n    sharedReducers: options.sharedReducers,\n  });\n\n  const WrappedApp = createAlpAppWrapper(App, {\n    context: ctx,\n    app: ctx.app,\n    store,\n    setModuleReducers: reducers => moduleStoreReducer.set(store, reducers),\n  });\n\n  ctx.body = renderHtml(WrappedApp, {\n    version,\n    scriptName: options.scriptName !== undefined ? options.scriptName : name,\n    styleName: options.styleName !== undefined ? options.styleName : name,\n    polyfillFeatures: options.polyfillFeatures,\n    initialData: store.getState(),\n  });\n};\n\nconst loggerWebsocket = logger.child('websocket');\n\nexport function emitAction(to, action) {\n  loggerWebsocket.debug('emitAction', action);\n  to.emit('redux:action', action);\n}\n"]}