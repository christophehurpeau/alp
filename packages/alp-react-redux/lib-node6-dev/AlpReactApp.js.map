{"version":3,"sources":["../src/AlpReactApp.jsx"],"names":["PropsType","children","context","moduleDescriptor","scriptName","initialData","initialBrowserContext","version","config","get","moduleIdentifier","identifier","Error","charset","name","content","rel","href","src","innerHTML","defer"],"mappings":";;;;;sCAAA;AACA;;;;;;;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;MAEKA,S;AACHC,U;AACAC,S;AACAC,kB;AACAC,Y;AACAC,a;;;kBAGa,UAOiB;AAAA,+BAA7BL,SAA6B;;AAAA,MAN9BC,QAM8B,YAN9BA,QAM8B;AAAA,MAL9BC,OAK8B,YAL9BA,OAK8B;AAAA,MAJ9BC,gBAI8B,YAJ9BA,gBAI8B;AAAA,MAH9BC,UAG8B,YAH9BA,UAG8B;AAAA,MAF9BC,WAE8B,YAF9BA,WAE8B;AAAA,MAD9BC,qBAC8B,YAD9BA,qBAC8B;;AAAA;AAN9BL,YAM8B;AAL9BC,WAK8B;AAJ9BC,oBAI8B;AAH9BC,cAG8B;AAF9BC,eAE8B;AAD9BC;AAC8B,KAA7BN,SAA6B;;AAAA;AAC9B,UAAMO,kBAAkBL,QAAQM,MAAR,CAAeC,GAAf,CAAmB,SAAnB,CAAlB,0CAAN;AACA,UAAMC,2BAA4BP,oBAAoBA,iBAAiBQ,UAAjE,gFAAN;AACA,QAAI,CAACJ,OAAL,EAAc,MAAM,IAAIK,KAAJ,CAAU,iBAAV,CAAN;;AAEd,WACE;AAAA;AAAA,QAAY,SAASV,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,UAAK,WAAU,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACE,gBAAM,CACJ,EAAEW,SAAS,OAAX,EADI,EAEJ,EAAEC,MAAM,UAAR,EAAoBC,SAAS,qCAA7B,EAFI,CADR;AAKE,gBAAM,CACJ,EAAEC,KAAK,YAAP,EAAqBC,MAAM,wBAAS,YAAT,EAAuBV,OAAvB,CAA3B,EADI,EAEJ,EAAES,KAAK,YAAP,EAAqBC,MAAM,wBAAS,aAAT,EAAwBV,OAAxB,CAA3B,EAFI,CALR;AASE,kBAAQ,CACN,EAAEW,KAAK,sGAAP,EADM,EAEN,EAAEC,WACE,IAAET,mBAAoB,8BAA4BA,gBAAiB,KAAjE,GAAuE,EAAG,GAA9E,GACG,wBAAsBN,UAAW,KADpC,GAEG,oBAAkBG,OAAQ,KAF7B,GAGG,uBAAqB,sBAAOF,WAAP,CAAoB,IAH5C,IAIG,CAACC,qBAAD,GAAyB,EAAzB,GACE,iCAA+B,sBAAOA,qBAAP,CAA8B,IALlE,CADF,EAFM,EAWN;AACEc,mBAA6B,IAD/B,EACqC;AACnCF,iBAAK,wBAAU,KAAkCd,UAAW,MAAvD,EAA6DG,OAA7D;AAFP,WAXM,CATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BGN;AA3BH;AADF,KADF;AAL8B;AAsC/B,C","file":"AlpReactApp.jsx","sourcesContent":["/* eslint-disable prefer-template */\n/* global window */\nimport { Helmet, App as DefaultApp } from 'fody/src';\nimport uneval from './uneval';\nimport assetUrl from './helmet/assetUrl';\nimport type { ReactNodeType, ModuleDescriptorType } from './types';\n\ntype PropsType = {\n  children: ReactNodeType,\n  context: Object,\n  moduleDescriptor: ModuleDescriptorType,\n  scriptName: ?string,\n  initialData: ?Object,\n};\n\nexport default ({\n  children,\n  context,\n  moduleDescriptor,\n  scriptName,\n  initialData,\n  initialBrowserContext,\n}: PropsType): ReactNodeType => {\n  const version: string = context.config.get('version');\n  const moduleIdentifier: ?string = moduleDescriptor && moduleDescriptor.identifier;\n  if (!version) throw new Error('Invalid version');\n\n  return (\n    <DefaultApp context={context}>\n      <div className=\"react-app\">\n        <Helmet\n          meta={[\n            { charset: 'utf-8' },\n            { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n          ]}\n          link={[\n            { rel: 'stylesheet', href: assetUrl('/index.css', version) },\n            { rel: 'stylesheet', href: assetUrl('/styles.css', version) },\n          ]}\n          script={[\n            { src: 'https://polyfill.io/v2/polyfill.min.js?features=default,es6,localStorage,fetch,Intl&unknown=polyfill' },\n            { innerHTML: BROWSER ? '' : (\n              (`${moduleIdentifier ? `window.MODULE_IDENTIFIER='${moduleIdentifier}';` : ''}`)\n              + `window.SCRIPT_NAME='${scriptName}';`\n              + `window.VERSION='${version}';`\n              + `window.initialData=${uneval(initialData)};`\n              + (!initialBrowserContext ? '' : (\n                  `window.initialBrowserContext=${uneval(initialBrowserContext)};`\n              ))\n            ) },\n            {\n              defer: BROWSER ? undefined : true, // TODO make PR to react-helmet\n              src: assetUrl(`/${BROWSER ? window.SCRIPT_NAME : scriptName}.js`, version),\n            },\n          ]}\n        />\n        {children}\n      </div>\n    </DefaultApp>\n  );\n};\n"]}