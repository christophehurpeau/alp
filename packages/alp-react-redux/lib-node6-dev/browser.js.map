{"version":3,"sources":["../src/browser.js"],"names":[],"mappings":";;;;;;;AAIA;;;;;sBAIS,e;;;;;;;;;2BACA,O;;;;AAHT;;;;;0BAQS,gB;;;;;;0BAAkB,uB;;;kBAOH,a;;AApBxB;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;QAKO,4B;QACA,Y;QACA,a;QACA,Y;;;AAGP,MAAM,SAAS,gCAAW,iBAAX,CAAf;;AAEA,IAAI,KAAJ;AACA,IAAI,iCAAJ;;AAEe,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC3C,WAAQ,GAAD,IAAS;AACZ,cAAM,cAAc,CAChB,2CAAyB,GAAzB,CADgB,iCAApB;AAIA,YAAI,IAAI,SAAR,EAAmB;AACf,mBAAO,KAAP,CAAa,iCAAb;AACA,gBAAI,SAAJ,CAAc,EAAd,CAAiB,cAAjB,EAAiC,UAAU;AACvC,uBAAO,IAAP,CAAY,gCAAZ,EAA8C,MAA9C;AACA,oBAAI,KAAJ,EAAW;AACP,0BAAM,QAAN,CAAe,MAAf;AACH;AACJ,aALD;AAMA,wBAAY,IAAZ,CAAiB,oCAAoB,GAApB,CAAjB;AACH;;AAED,YAAI,OAAJ,CAAY,MAAZ,GAAqB,UAAU,gBAAV,EAA4B,IAA5B,EAAkC,OAAlC,EAA2C;AAC5D,mBAAO,KAAP,CAAa,aAAb,EAA4B,EAAE,IAAF,EAA5B;;AAEA,gBAAI,CAAC,iBAAiB,IAAtB,EAA4B;AACxB,sBAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACH;;AAED,gBAAI,CAAC,OAAD,IAAY,iBAAiB,MAAjC,EAAyC;AACrC,sBAAM,eAAe,SACA,sCAAsC,iBAAiB,UADvD,GAEA,MAAM,QAAN,EAFA,GAEmB,SAFxC;;AAIA;AACA,uBAAO,iBAAiB,MAAjB,CAAwB,YAAxB,EAAsC,IAAtC,EAA4C,IAA5C,CAAiD;AAAA,2BACpD,KAAK,MAAL,CAAY,gBAAZ,EAA8B,IAA9B,EAAoC,IAApC,CADoD;AAAA,iBAAjD,CAAP;AAGH;;AAED,kBAAM,UAAU,iBAAiB,OAAjC;;AAEA,gBAAI,CAAC,OAAL,EAAc;AACV,wBAAQ,SAAR;AACH,aAFD,MAEO,IAAI,UAAU,SAAd,EAAyB;AAC5B,wBAAQ,wBACJ,OADI,EAEJ,IAFI,EAGJ,oBACI,4BAAgB,GAAG,WAAnB,CADJ,EAEI,OAAO,iBAAP,GAA2B,OAAO,iBAAP,EAA3B,GAAwD;AAAA,2BAAK,CAAL;AAAA,iBAF5D,CAHI,CAAR;AAQH,aATM,MASA;AACH,sBAAM,QAAQ,MAAM,QAAN,EAAd;;AAEA,oBAAI,sCAAsC,iBAAiB,UAA3D,EAAuE;AACnE;AACA,2BAAO,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B;AAAA,+BAAO,OAAO,MAAM,GAAN,CAAd;AAAA,qBAA3B;AACH;;AAED,uBAAO,MAAP,CAAc,KAAd,EAAqB,IAArB;;AAEA,oBAAI,sCAAsC,iBAAiB,UAA3D,EAAuE;AACnE;AACA,wBAAI,OAAJ,EAAa;AACT,8BAAM,cAAN,CAAqB,OAArB;AACH,qBAFD,MAEO;AACH,8BAAM,cAAN,CAAqB,CAAC,KAAD,EAAQ,MAAR;AAAA,mCAAmB,KAAnB;AAAA,yBAArB;AACH;AACJ;AACJ;;AAED,gDAAoC,iBAAiB,UAArD;AACA,iBAAK,KAAL,GAAa,KAAb;;AAEA,gCAAO;AACH,yBAAS,IADN;AAEH,sBAAM,iBAAiB,IAFpB;AAGH,sBAAM,IAHH;AAIH,uBAJG;AAKH,qBAAK;AALF,aAAP;AAOH,SA7DD;AA8DH,KA9ED;AA+EH","file":"browser.js","sourcesContent":["/* global window */\nimport render, { App as DefaultApp } from 'fody';\nimport ReduxApp from 'fody-redux-app';\nimport Logger from 'nightingale-logger';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { promiseMiddleware, createFunctionMiddleware } from './middlewares';\nimport { websocketMiddleware } from './websocket';\n\nexport { combineReducers } from 'redux';\nexport { connect } from 'react-redux';\nexport createPureStatelessComponent from 'react-pure-stateless-component';\nexport createAction from './createAction';\nexport createReducer from './createReducer';\nexport createLoader from './createLoader';\nexport { createEmitAction, createEmitPromiseAction } from './websocket';\n\nconst logger = new Logger('alp.react-redux');\n\nlet store;\nlet currentModuleDescriptorIdentifier;\n\nexport default function alpReactRedux(element) {\n    return (app) => {\n        const middlewares = [\n            createFunctionMiddleware(app),\n            promiseMiddleware,\n        ];\n        if (app.websocket) {\n            logger.debug('register websocket redux:action');\n            app.websocket.on('redux:action', action => {\n                logger.info('dispatch action from websocket', action);\n                if (store) {\n                    store.dispatch(action);\n                }\n            });\n            middlewares.push(websocketMiddleware(app));\n        }\n\n        app.context.render = function (moduleDescriptor, data, _loaded) {\n            logger.debug('render view', { data });\n\n            if (!moduleDescriptor.View) {\n                throw new Error('View is undefined, class expected');\n            }\n\n            if (!_loaded && moduleDescriptor.loader) {\n                const currentState = store &&\n                                     currentModuleDescriptorIdentifier === moduleDescriptor.identifier ?\n                                     store.getState() : undefined;\n\n                // const _state = data;\n                return moduleDescriptor.loader(currentState, data).then(data => (\n                    this.render(moduleDescriptor, data, true)\n                ));\n            }\n\n            const reducer = moduleDescriptor.reducer;\n\n            if (!reducer) {\n                store = undefined;\n            } else if (store === undefined) {\n                store = createStore(\n                    reducer,\n                    data,\n                    compose(\n                        applyMiddleware(...middlewares),\n                        window.devToolsExtension ? window.devToolsExtension() : f => f\n                    )\n                );\n            } else {\n                const state = store.getState();\n\n                if (currentModuleDescriptorIdentifier !== moduleDescriptor.identifier) {\n                    // replace state\n                    Object.keys(state).forEach(key => delete state[key]);\n                }\n\n                Object.assign(state, data);\n\n                if (currentModuleDescriptorIdentifier !== moduleDescriptor.identifier) {\n                    // replace reducer\n                    if (reducer) {\n                        store.replaceReducer(reducer);\n                    } else {\n                        store.replaceReducer((state, action) => state);\n                    }\n                }\n            }\n\n            currentModuleDescriptorIdentifier = moduleDescriptor.identifier;\n            this.store = store;\n\n            render({\n                context: this,\n                View: moduleDescriptor.View,\n                data: data,\n                element,\n                App: reducer ? ReduxApp : DefaultApp,\n            });\n        };\n    };\n}\n"]}