{"version":3,"file":"index-browsermodern-dev.es.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { ReactElement, useContext, useEffect, useState } from 'react';\nimport ReactAlpContext from 'react-alp-context';\nimport { T } from 'react-alp-translate';\nimport '../ConnectionState.global.scss';\n\ntype State = null | 'connecting' | 'connected' | 'disconnected';\n\nexport default function ConnectionState(): ReactElement {\n  const ctx = useContext(ReactAlpContext);\n  const notConnected = !ctx.sanitizedState.user;\n\n  const [connectionState, setConnectionState] = useState<State>(null);\n  useEffect((): (() => void) => {\n    const websocket = ctx.app.websocket;\n    let unloading = false;\n\n    const beforeUnloadHandler = (): void => {\n      unloading = true;\n    };\n    window.addEventListener('beforeunload', beforeUnloadHandler);\n\n    const connectedHandler = websocket.on('connect', (): void => {\n      setConnectionState('connected');\n    });\n    const disconnectedHandler = websocket.on('disconnect', (): void => {\n      if (unloading) return;\n      setConnectionState('disconnected');\n    });\n\n    setConnectionState(websocket.connected ? 'connected' : 'connecting');\n\n    return (): void => {\n      websocket.off('connected', connectedHandler);\n      websocket.off('disconnected', disconnectedHandler);\n      window.removeEventListener('beforeunload', beforeUnloadHandler);\n    };\n  }, [ctx.app.websocket]);\n\n  return (\n    <div\n      hidden={\n        !connectionState || notConnected || connectionState === 'connected'\n      }\n      className=\"alp-connection-state\"\n    >\n      {!connectionState || notConnected ? null : (\n        <div>\n          <T id={`connectionState.${connectionState}`} />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["ConnectionState","ctx","useContext","ReactAlpContext","notConnected","sanitizedState","user","connectionState","setConnectionState","useState","useEffect","websocket","app","unloading","beforeUnloadHandler","window","addEventListener","connectedHandler","on","disconnectedHandler","connected","off","removeEventListener"],"mappings":";;;;;;AAAA,AAOe,SAASA,eAAT,GAAyC;QAChDC,GAAG,GAAGC,UAAU,CAACC,eAAD,CAAtB;QACMC,YAAY,GAAG,CAACH,GAAG,CAACI,cAAJ,CAAmBC,IAAzC;QAEM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCC,QAAQ,CAAQ,IAAR,CAAtD;EACAC,SAAS,CAAC,YAAoB;UACtBC,SAAS,GAAGV,GAAG,CAACW,GAAJ,CAAQD,SAA1B;QACIE,SAAS,GAAG,KAAhB;;UAEMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAY;MACtCD,SAAS,GAAG,IAAZ;KADF;;IAGAE,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwCF,mBAAxC;UAEMG,gBAAgB,GAAGN,SAAS,CAACO,EAAV,CAAa,SAAb,EAAwB,YAAY;MAC3DV,kBAAkB,CAAC,WAAD,CAAlB;KADuB,CAAzB;UAGMW,mBAAmB,GAAGR,SAAS,CAACO,EAAV,CAAa,YAAb,EAA2B,YAAY;UAC7DL,SAAJ,EAAe;MACfL,kBAAkB,CAAC,cAAD,CAAlB;KAF0B,CAA5B;IAKAA,kBAAkB,CAACG,SAAS,CAACS,SAAV,GAAsB,WAAtB,GAAoC,YAArC,CAAlB;WAEO,YAAY;MACjBT,SAAS,CAACU,GAAV,CAAc,WAAd,EAA2BJ,gBAA3B;MACAN,SAAS,CAACU,GAAV,CAAc,cAAd,EAA8BF,mBAA9B;MACAJ,MAAM,CAACO,mBAAP,CAA2B,cAA3B,EAA2CR,mBAA3C;KAHF;GAnBO,EAwBN,CAACb,GAAG,CAACW,GAAJ,CAAQD,SAAT,CAxBM,CAAT;SA2BE;IACE,MAAM,EACJ,CAACJ,eAAD,IAAoBH,YAApB,IAAoCG,eAAe,KAAK,WAF5D;IAIE,SAAS,EAAC,sBAJZ;;;;;;KAMG,CAACA,eAAD,IAAoBH,YAApB,GAAmC,IAAnC,GACC;;;;;;KACE,oBAAC,CAAD;IAAG,EAAE,EAAG,mBAAkBG,eAAgB,EAA1C;;;;;;IADF,CAPJ,CADF;;;;;"}