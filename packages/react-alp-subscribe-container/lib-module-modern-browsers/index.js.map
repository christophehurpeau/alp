{"version":3,"sources":["../src/index.js"],"names":["Component","PropTypes","connect","Logger","logger","SubscribeContainerComponent","state","subscribed","timeout","handleVisibilityChange","document","hidden","log","names","props","name","clearTimeout","debug","subscribe","setTimeout","unsubscribe","visibleTimeout","dispatch","websocket","getWebsocket","forEach","emit","then","action","isConnected","componentDidMount","on","addEventListener","componentWillUnmount","removeEventListener","off","context","app","render","children","propTypes","func","isRequired","string","arrayOf","node","number","defaultProps","contextTypes","object"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,SAAS,IAAID,MAAJ,CAAW,+BAAX,CAAf;;IAEME,2B,sBAAN,cAA0CL,SAA1C,CAAoD;AAAA;AAAA;;AAAA,gDAiBlDM,KAjBkD,YAsClDC,UAtCkD,GAsC5B,KAtC4B,OAuClDC,OAvCkD,GAuCxC,IAvCwC,OAyClDC,sBAzCkD,GAyCzB,YAAM;AAC7B,UAAI,CAACC,SAASC,MAAd,EAAsB;AACpB,YAAI,MAAKH,OAAT,EAAkB;AAChBJ,iBAAOQ,GAAP,CAAW,iBAAX,EAA8B,EAAEC,OAAO,MAAKC,KAAL,CAAWD,KAApB,EAA2BE,MAAM,MAAKD,KAAL,CAAWC,IAA5C,EAA9B;AACAC,uBAAa,MAAKR,OAAlB;AACD,SAHD,MAGO;AACLJ,iBAAOa,KAAP,CAAa,aAAb,EAA4B,EAAEJ,OAAO,MAAKC,KAAL,CAAWD,KAApB,EAA2BE,MAAM,MAAKD,KAAL,CAAWC,IAA5C,EAA5B;AACA,gBAAKG,SAAL;AACD;AACD;AACD;;AAED,UAAI,CAAC,MAAKX,UAAV,EAAsB;;AAEtBH,aAAOQ,GAAP,CAAW,iBAAX,EAA8B,EAAEC,OAAO,MAAKC,KAAL,CAAWD,KAApB,EAA2BE,MAAM,MAAKD,KAAL,CAAWC,IAA5C,EAA9B;AACA,YAAKP,OAAL,GAAeW,WAAW,MAAKC,WAAhB,EAA6B,MAAKN,KAAL,CAAWO,cAAxC,CAAf;AACD,KAzDiD,OA2DlDH,SA3DkD,GA2DtC,YAAM;AAChB,UAAIR,SAASC,MAAb,EAAqB;;AAErBP,aAAOQ,GAAP,CAAW,WAAX,EAAwB,EAAEC,OAAO,MAAKC,KAAL,CAAWD,KAApB,EAA2BE,MAAM,MAAKD,KAAL,CAAWC,IAA5C,EAAxB;AACA,YAAKR,UAAL,GAAkB,IAAlB;AACA,YAAM,EAAEe,QAAF,KAAe,MAAKR,KAA1B;AACA,YAAMD,QAAQ,MAAKC,KAAL,CAAWD,KAAX,IAAoB,CAAC,MAAKC,KAAL,CAAWC,IAAZ,CAAlC;AACA,YAAMQ,YAAY,MAAKC,YAAL,EAAlB;AACAX,YAAMY,OAAN,CAAc;AAAA,eACZF,UAAUG,IAAV,CAAgB,aAAYX,IAAK,EAAjC,EAAoCY,IAApC,CAAyC;AAAA,iBAAUC,UAAUN,SAASM,MAAT,CAApB;AAAA,SAAzC,CADY;AAAA,OAAd;AAGD,KAtEiD,OAwElDR,WAxEkD,GAwEpC,YAAM;AAClB,YAAKZ,OAAL,GAAe,IAAf;AACA,UAAI,CAAC,MAAKD,UAAV,EAAsB;AACtBH,aAAOQ,GAAP,CAAW,aAAX,EAA0B,EAAEC,OAAO,MAAKC,KAAL,CAAWD,KAApB,EAA2BE,MAAM,MAAKD,KAAL,CAAWC,IAA5C,EAA1B;AACA,YAAKR,UAAL,GAAkB,KAAlB;AACA,YAAMM,QAAQ,MAAKC,KAAL,CAAWD,KAAX,IAAoB,CAAC,MAAKC,KAAL,CAAWC,IAAZ,CAAlC;AACA,YAAMQ,YAAY,MAAKC,YAAL,EAAlB;AACA,UAAID,UAAUM,WAAV,EAAJ,EAA6B;AAC3BhB,cAAMY,OAAN,CAAc;AAAA,iBAAQF,UAAUG,IAAV,CAAgB,eAAcX,IAAK,EAAnC,CAAR;AAAA,SAAd;AACD;AACF,KAlFiD;AAAA;;AAmBlDe,sBAAoB;AAClB,UAAMP,YAAY,KAAKC,YAAL,EAAlB;AACAD,cAAUQ,EAAV,CAAa,SAAb,EAAwB,KAAKb,SAA7B;AACA,QAAIK,UAAUM,WAAV,EAAJ,EAA6B;AAC3B,WAAKX,SAAL;AACD;AACDR,aAASsB,gBAAT,CAA0B,kBAA1B,EAA8C,KAAKvB,sBAAnD,EAA2E,KAA3E;AACD;;AAEDwB,yBAAuB;AACrBvB,aAASwB,mBAAT,CAA6B,kBAA7B,EAAiD,KAAKzB,sBAAtD,EAA8E,KAA9E;AACA,SAAKe,YAAL,GAAoBW,GAApB,CAAwB,SAAxB,EAAmC,KAAKjB,SAAxC;AACA,SAAKE,WAAL;AACD;;AAEDI,iBAAe;AACb,WAAO,KAAKY,OAAL,CAAaA,OAAb,CAAqBC,GAArB,CAAyBd,SAAhC;AACD;;AAgDDe,WAAS;AACP,WAAO,KAAKxB,KAAL,CAAWyB,QAAlB;AACD;AAtFiD,C,SAC3CC,S,GAAY;AACjBlB,YAAUrB,UAAUwC,IAAV,CAAeC,UADR;AAEjB3B,QAAMd,UAAU0C,MAFC;AAGjB9B,SAAOZ,UAAU2C,OAAV,CAAkB3C,UAAU0C,MAAV,CAAiBD,UAAnC,CAHU;AAIjBH,YAAUtC,UAAU4C,IAJH;AAKjBxB,kBAAgBpB,UAAU6C;AALT,C,SAQZC,Y,GAAe;AACpB1B,wBADoB,CACW;AADX,C,SAIf2B,Y,GAAe;AACpBZ,WAASnC,UAAUgD;AADC,C;;;AA4ExB,eAAe/C,UAAUG,2BAAV,CAAf","file":"index.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'alp-react-redux';\nimport Logger from 'nightingale-logger';\n\nconst logger = new Logger('react-alp-subscribe-container');\n\nclass SubscribeContainerComponent extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    names: PropTypes.arrayOf(PropTypes.string.isRequired),\n    children: PropTypes.node,\n    visibleTimeout: PropTypes.number,\n  };\n\n  static defaultProps = {\n    visibleTimeout: 1000 * 60 * 2, // 2 minutes\n  };\n\n  static contextTypes = {\n    context: PropTypes.object,\n  };\n\n  state = {};\n\n  componentDidMount() {\n    const websocket = this.getWebsocket();\n    websocket.on('connect', this.subscribe);\n    if (websocket.isConnected()) {\n      this.subscribe();\n    }\n    document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange, false);\n    this.getWebsocket().off('connect', this.subscribe);\n    this.unsubscribe();\n  }\n\n  getWebsocket() {\n    return this.context.context.app.websocket;\n  }\n\n  subscribed: boolean = false;\n  timeout = null;\n\n  handleVisibilityChange = () => {\n    if (!document.hidden) {\n      if (this.timeout) {\n        logger.log('timeout cleared', { names: this.props.names, name: this.props.name });\n        clearTimeout(this.timeout);\n      } else {\n        logger.debug('resubscribe', { names: this.props.names, name: this.props.name });\n        this.subscribe();\n      }\n      return;\n    }\n\n    if (!this.subscribed) return;\n\n    logger.log('timeout visible', { names: this.props.names, name: this.props.name });\n    this.timeout = setTimeout(this.unsubscribe, this.props.visibleTimeout);\n  };\n\n  subscribe = () => {\n    if (document.hidden) return;\n\n    logger.log('subscribe', { names: this.props.names, name: this.props.name });\n    this.subscribed = true;\n    const { dispatch } = this.props;\n    const names = this.props.names || [this.props.name];\n    const websocket = this.getWebsocket();\n    names.forEach(name =>\n      websocket.emit(`subscribe:${name}`).then(action => action && dispatch(action)),\n    );\n  };\n\n  unsubscribe = () => {\n    this.timeout = null;\n    if (!this.subscribed) return;\n    logger.log('unsubscribe', { names: this.props.names, name: this.props.name });\n    this.subscribed = false;\n    const names = this.props.names || [this.props.name];\n    const websocket = this.getWebsocket();\n    if (websocket.isConnected()) {\n      names.forEach(name => websocket.emit(`unsubscribe:${name}`));\n    }\n  };\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default connect()(SubscribeContainerComponent);\n"]}