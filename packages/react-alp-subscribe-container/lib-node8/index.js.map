{"version":3,"sources":["../src/index.js"],"names":["logger","SubscribeContainerComponent","state","subscribed","timeout","handleVisibilityChange","document","hidden","log","name","props","clearTimeout","debug","subscribe","setTimeout","unsubscribe","visibleTimeout","dispatch","websocket","getWebsocket","emit","then","action","isConnected","componentDidMount","on","addEventListener","componentWillUnmount","removeEventListener","off","context","app","render","children","propTypes","func","isRequired","string","node","number","defaultProps","contextTypes","object"],"mappings":"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","file":"index.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'alp-react-redux';\nimport Logger from 'nightingale-logger';\n\nconst logger = new Logger('react-alp-subscribe-container');\n\nclass SubscribeContainerComponent extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    children: PropTypes.node,\n    visibleTimeout: PropTypes.number,\n  };\n\n  static defaultProps = {\n    visibleTimeout: 1000 * 60 * 2, // 2 minutes\n  };\n\n  static contextTypes = {\n    context: PropTypes.object,\n  };\n\n  state = {};\n\n  componentDidMount() {\n    const websocket = this.getWebsocket();\n    websocket.on('connect', this.subscribe);\n    if (websocket.isConnected()) {\n      this.subscribe();\n    }\n    document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange, false);\n    this.getWebsocket().off('connect', this.subscribe);\n    this.unsubscribe();\n  }\n\n  getWebsocket() {\n    return this.context.context.app.websocket;\n  }\n\n  subscribed: boolean = false;\n  timeout = null;\n\n  handleVisibilityChange = () => {\n    if (!document.hidden) {\n      if (this.timeout) {\n        logger.log('timeout cleared', { name: this.props.name });\n        clearTimeout(this.timeout);\n      } else {\n        logger.debug('resubscribe', { name: this.props.name });\n        this.subscribe();\n      }\n      return;\n    }\n\n    if (!this.subscribed) return;\n\n    logger.log('timeout visible', { name: this.props.name });\n    this.timeout = setTimeout(this.unsubscribe, this.props.visibleTimeout);\n  };\n\n  subscribe = () => {\n    if (document.hidden) return;\n\n    logger.log('subscribe', { name: this.props.name });\n    this.subscribed = true;\n    const { dispatch, name } = this.props;\n    const websocket = this.getWebsocket();\n    websocket.emit(`subscribe:${name}`).then(action => action && dispatch(action));\n  };\n\n  unsubscribe = () => {\n    this.timeout = null;\n    if (!this.subscribed) return;\n    logger.log('unsubscribe', { name: this.props.name });\n    this.subscribed = false;\n    const { name } = this.props;\n    const websocket = this.getWebsocket();\n    if (websocket.isConnected()) {\n      websocket.emit(`unsubscribe:${name}`);\n    }\n  };\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default connect()(SubscribeContainerComponent);\n"]}