{"version":3,"file":"index-browser-dev.es.js","sources":["../src/SubscribeContainer.tsx","../src/index.ts"],"sourcesContent":["import { Component, ReactElement } from 'react';\nimport { Dispatch, AnyAction } from 'redux';\nimport PropTypes from 'prop-types';\nimport Logger from 'nightingale-logger';\n\nconst logger = new Logger('react-alp-subscribe-container');\n\nexport interface OwnProps {\n  children: ReactElement<any>;\n  // eslint-disable-next-line no-restricted-globals\n  name?: string;\n  names?: Array<string>;\n  visibleTimeout?: number;\n}\n\nexport interface ConnectProps {\n  dispatch: Dispatch<any>;\n}\n\nexport default class SubscribeContainer extends Component<OwnProps & ConnectProps, never> {\n  static defaultProps = {\n    visibleTimeout: 1000 * 60 * 2, // 2 minutes\n  };\n\n  static contextTypes = {\n    context: PropTypes.object,\n  };\n\n  subscribed: boolean = false;\n  timeout: number | undefined = undefined;\n\n  componentDidMount() {\n    const websocket = this.getWebsocket();\n    websocket.on('connect', this.subscribe);\n    if (websocket.isConnected()) {\n      this.subscribe();\n    }\n    document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange, false);\n    this.getWebsocket().off('connect', this.subscribe);\n    this.unsubscribe();\n  }\n\n  getWebsocket() {\n    return this.context.context.app.websocket;\n  }\n\n  handleVisibilityChange = () => {\n    if (!document.hidden) {\n      if (this.timeout != null) {\n        logger.log('timeout cleared', {\n          names: this.props.names,\n          name: this.props.name,\n        });\n        clearTimeout(this.timeout);\n      } else {\n        logger.debug('resubscribe', {\n          names: this.props.names,\n          name: this.props.name,\n        });\n        this.subscribe();\n      }\n      return;\n    }\n\n    if (!this.subscribed) return;\n\n    logger.log('timeout visible', {\n      names: this.props.names,\n      name: this.props.name,\n    });\n    this.timeout = setTimeout(this.unsubscribe, this.props.visibleTimeout);\n  };\n\n  subscribe = () => {\n    if (document.hidden) return;\n\n    logger.log('subscribe', { names: this.props.names, name: this.props.name });\n    this.subscribed = true;\n    const { dispatch } = this.props;\n    const names = this.props.names || [this.props.name];\n    const websocket = this.getWebsocket();\n    names.forEach(name =>\n      websocket.emit(`subscribe:${name}`).then((action: AnyAction) => action && dispatch(action)),\n    );\n  };\n\n  unsubscribe = () => {\n    this.timeout = undefined;\n    if (!this.subscribed) return;\n    logger.log('unsubscribe', {\n      names: this.props.names,\n      name: this.props.name,\n    });\n    this.subscribed = false;\n    const names = this.props.names || [this.props.name];\n    const websocket = this.getWebsocket();\n    if (websocket.isConnected()) {\n      names.forEach(name => websocket.emit(`unsubscribe:${name}`));\n    }\n  };\n\n  render(): ReactElement<any> {\n    return this.props.children;\n  }\n}\n","import { ComponentClass } from 'react';\nimport { connect } from 'react-redux';\nimport SubscribeContainer, { OwnProps } from './SubscribeContainer';\n\nconst SubscribeContainerConnected: ComponentClass<OwnProps> = connect()(SubscribeContainer);\n\nexport default SubscribeContainerConnected;\n"],"names":["logger","Logger","SubscribeContainer","subscribed","timeout","undefined","handleVisibilityChange","document","hidden","log","props","names","name","debug","subscribe","setTimeout","unsubscribe","visibleTimeout","dispatch","websocket","getWebsocket","forEach","emit","then","action","isConnected","componentDidMount","on","addEventListener","componentWillUnmount","removeEventListener","off","context","app","render","children","Component","defaultProps","contextTypes","PropTypes","object","SubscribeContainerConnected","connect"],"mappings":";;;;;;;;;;;;;;;;;;AAKA,IAAMA,SAAS,IAAIC,MAAJ,CAAW,+BAAX,CAAf;;IAcqBC;;;;;;;;;;kGASnBC,aAAsB,aACtBC,UAA8BC,iBAqB9BC,yBAAyB,YAAM;UACzB,CAACC,SAASC,MAAd,EAAsB;YAChB,MAAKJ,OAAL,IAAgB,IAApB,EAA0B;iBACjBK,GAAP,CAAW,iBAAX,EAA8B;mBACrB,MAAKC,KAAL,CAAWC,KADU;kBAEtB,MAAKD,KAAL,CAAWE;WAFnB;uBAIa,MAAKR,OAAlB;SALF,MAMO;iBACES,KAAP,CAAa,aAAb,EAA4B;mBACnB,MAAKH,KAAL,CAAWC,KADQ;kBAEpB,MAAKD,KAAL,CAAWE;WAFnB;;gBAIKE,SAAL;;;;;;UAKA,CAAC,MAAKX,UAAV,EAAsB;aAEfM,GAAP,CAAW,iBAAX,EAA8B;eACrB,MAAKC,KAAL,CAAWC,KADU;cAEtB,MAAKD,KAAL,CAAWE;OAFnB;YAIKR,OAAL,GAAeW,WAAW,MAAKC,WAAhB,EAA6B,MAAKN,KAAL,CAAWO,cAAxC,CAAf;aAGFH,YAAY,YAAM;UACZP,SAASC,MAAb,EAAqB;aAEdC,GAAP,CAAW,WAAX,EAAwB;eAAS,MAAKC,KAAL,CAAWC,KAApB;cAAiC,MAAKD,KAAL,CAAWE;OAApE;YACKT,UAAL,GAAkB,IAAlB;UACQe,QALQ,GAKK,MAAKR,KALV,CAKRQ,QALQ;UAMVP,QAAQ,MAAKD,KAAL,CAAWC,KAAX,IAAoB,CAAC,MAAKD,KAAL,CAAWE,IAAZ,CAAlC;;UACMO,YAAY,MAAKC,YAAL,EAAlB;;YACMC,OAAN,CAAc;eACZF,UAAUG,IAAV,gBAA4BV,IAA5B,EAAoCW,IAApC,CAAyC,UAACC,MAAD;iBAAuBA,UAAUN,SAASM,MAAT,CAAjC;SAAzC,CADY;OAAd;aAKFR,cAAc,YAAM;YACbZ,OAAL,GAAeC,SAAf;UACI,CAAC,MAAKF,UAAV,EAAsB;aACfM,GAAP,CAAW,aAAX,EAA0B;eACjB,MAAKC,KAAL,CAAWC,KADM;cAElB,MAAKD,KAAL,CAAWE;OAFnB;YAIKT,UAAL,GAAkB,KAAlB;UACMQ,QAAQ,MAAKD,KAAL,CAAWC,KAAX,IAAoB,CAAC,MAAKD,KAAL,CAAWE,IAAZ,CAAlC;;UACMO,YAAY,MAAKC,YAAL,EAAlB;;UACID,UAAUM,WAAV,EAAJ,EAA6B;cACrBJ,OAAN,CAAc;iBAAQF,UAAUG,IAAV,kBAA8BV,IAA9B,CAAR;SAAd;;;;;;;SAtEJc,iDAAoB;QACZP,YAAY,KAAKC,YAAL,EAAlB;cACUO,EAAV,CAAa,SAAb,EAAwB,KAAKb,SAA7B;;QACIK,UAAUM,WAAV,EAAJ,EAA6B;WACtBX,SAAL;;;aAEOc,gBAAT,CAA0B,kBAA1B,EAA8C,KAAKtB,sBAAnD,EAA2E,KAA3E;;;SAGFuB,uDAAuB;aACZC,mBAAT,CAA6B,kBAA7B,EAAiD,KAAKxB,sBAAtD,EAA8E,KAA9E;SACKc,YAAL,GAAoBW,GAApB,CAAwB,SAAxB,EAAmC,KAAKjB,SAAxC;SACKE,WAAL;;;SAGFI,uCAAe;WACN,KAAKY,OAAL,CAAaA,OAAb,CAAqBC,GAArB,CAAyBd,SAAhC;;;SA0DFe,2BAA4B;WACnB,KAAKxB,KAAL,CAAWyB,QAAlB;;;;;;EAvF4CC;;AAA3BlC,mBACZmC,eAAe;wBAAA;;;AADHnC,mBAKZoC,eAAe;WACXC,UAAUC;;;ACrBvB,IAAMC,8BAAwDC,UAAUxC,kBAAV,CAA9D;;;;"}