{"version":3,"sources":["../src/index.js"],"names":["Component","PropTypes","connect","Logger","logger","SubscribeContainerComponent","state","timeout","handleVisibilityChange","document","hidden","log","names","props","name","clearTimeout","debug","subscribe","subscribed","setTimeout","unsubscribe","visibleTimeout","dispatch","websocket","getWebsocket","forEach","emit","then","action","isConnected","componentDidMount","on","addEventListener","componentWillUnmount","removeEventListener","off","context","app","render","children","propTypes","func","isRequired","string","arrayOf","node","number","defaultProps","contextTypes","object"],"mappings":"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","file":"index.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'alp-react-redux';\nimport Logger from 'nightingale-logger';\n\nconst logger = new Logger('react-alp-subscribe-container');\n\nclass SubscribeContainerComponent extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    names: PropTypes.arrayOf(PropTypes.string.isRequired),\n    children: PropTypes.node,\n    visibleTimeout: PropTypes.number,\n  };\n\n  static defaultProps = {\n    visibleTimeout: 1000 * 60 * 2, // 2 minutes\n  };\n\n  static contextTypes = {\n    context: PropTypes.object,\n  };\n\n  state = {};\n\n  componentDidMount() {\n    const websocket = this.getWebsocket();\n    websocket.on('connect', this.subscribe);\n    if (websocket.isConnected()) {\n      this.subscribe();\n    }\n    document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange, false);\n    this.getWebsocket().off('connect', this.subscribe);\n    this.unsubscribe();\n  }\n\n  getWebsocket() {\n    return this.context.context.app.websocket;\n  }\n\n  subscribed: boolean = false;\n  timeout = null;\n\n  handleVisibilityChange = () => {\n    if (!document.hidden) {\n      if (this.timeout) {\n        logger.log('timeout cleared', { names: this.props.names, name: this.props.name });\n        clearTimeout(this.timeout);\n      } else {\n        logger.debug('resubscribe', { names: this.props.names, name: this.props.name });\n        this.subscribe();\n      }\n      return;\n    }\n\n    if (!this.subscribed) return;\n\n    logger.log('timeout visible', { names: this.props.names, name: this.props.name });\n    this.timeout = setTimeout(this.unsubscribe, this.props.visibleTimeout);\n  };\n\n  subscribe = () => {\n    if (document.hidden) return;\n\n    logger.log('subscribe', { names: this.props.names, name: this.props.name });\n    this.subscribed = true;\n    const { dispatch } = this.props;\n    const names = this.props.names || [this.props.name];\n    const websocket = this.getWebsocket();\n    names.forEach(name =>\n      websocket.emit(`subscribe:${name}`).then(action => action && dispatch(action)),\n    );\n  };\n\n  unsubscribe = () => {\n    this.timeout = null;\n    if (!this.subscribed) return;\n    logger.log('unsubscribe', { names: this.props.names, name: this.props.name });\n    this.subscribed = false;\n    const names = this.props.names || [this.props.name];\n    const websocket = this.getWebsocket();\n    if (websocket.isConnected()) {\n      names.forEach(name => websocket.emit(`unsubscribe:${name}`));\n    }\n  };\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default connect()(SubscribeContainerComponent);\n"]}