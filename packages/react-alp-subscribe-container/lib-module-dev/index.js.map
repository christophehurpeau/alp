{"version":3,"sources":["../src/index.js"],"names":["PropTypes","Component","connect","Logger","logger","SubscribeContainerComponent","timeout","state","handleVisibilityChange","document","hidden","log","name","props","clearTimeout","debug","subscribe","subscribed","setTimeout","unsubscribe","visibleTimeout","dispatch","websocket","getWebsocket","emit","then","action","isConnected","context","app","on","addEventListener","removeEventListener","off","children","propTypes","func","isRequired","string","node","number","defaultProps","contextTypes","object"],"mappings":"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","file":"index.js","sourcesContent":["import { PropTypes, Component } from 'react';\nimport { connect } from 'alp-react-redux';\nimport Logger from 'nightingale-logger';\n\nconst logger = new Logger('react-alp-subscribe-container');\n\nclass SubscribeContainerComponent extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    children: PropTypes.node,\n    visibleTimeout: PropTypes.number,\n  };\n\n  static defaultProps = {\n    visibleTimeout: 1000 * 60 * 2, // 2 minutes\n  };\n\n  static contextTypes = {\n    context: PropTypes.object,\n  };\n\n\n  subscribed: boolean = false;\n  timeout = null;\n  state = {};\n\n  getWebsocket() {\n    return this.context.context.app.websocket;\n  }\n\n\n  handleVisibilityChange = () => {\n    if (!document.hidden) {\n      if (this.timeout) {\n        logger.log('timeout cleared', { name: this.props.name });\n        clearTimeout(this.timeout);\n      } else {\n        logger.debug('resubscribe', { name: this.props.name });\n        this.subscribe();\n      }\n      return;\n    }\n\n    if (!this.subscribed) return;\n\n    logger.log('timeout visible', { name: this.props.name });\n    this.timeout = setTimeout(this.unsubscribe, this.props.visibleTimeout);\n  };\n\n  subscribe = () => {\n    if (document.hidden) return;\n\n    logger.log('subscribe', { name: this.props.name });\n    this.subscribed = true;\n    const { dispatch, name } = this.props;\n    const websocket = this.getWebsocket();\n    websocket.emit(`subscribe:${name}`)\n            .then(action => action && dispatch(action));\n  };\n\n  unsubscribe = () => {\n    this.timeout = null;\n    if (!this.subscribed) return;\n    logger.log('unsubscribe', { name: this.props.name });\n    this.subscribed = false;\n    const { name } = this.props;\n    const websocket = this.getWebsocket();\n    if (websocket.isConnected()) {\n      websocket.emit(`unsubscribe:${name}`);\n    }\n  };\n\n  componentDidMount() {\n    const websocket = this.getWebsocket();\n    websocket.on('connect', this.subscribe);\n    if (websocket.isConnected()) {\n      this.subscribe();\n    }\n    document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange, false);\n    this.getWebsocket().off('connect', this.subscribe);\n    this.unsubscribe();\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default connect()(SubscribeContainerComponent);\n"]}