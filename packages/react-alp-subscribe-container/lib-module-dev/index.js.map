{"version":3,"sources":["../src/index.js"],"names":["Component","PropTypes","connect","Logger","logger","SubscribeContainerComponent","state","timeout","handleVisibilityChange","document","hidden","log","names","props","name","clearTimeout","debug","subscribe","subscribed","setTimeout","unsubscribe","visibleTimeout","dispatch","websocket","getWebsocket","forEach","emit","then","action","isConnected","on","addEventListener","removeEventListener","off","context","app","children","propTypes","func","isRequired","string","arrayOf","node","number","defaultProps","contextTypes","object"],"mappings":"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","file":"index.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'alp-react-redux';\nimport Logger from 'nightingale-logger';\n\nconst logger = new Logger('react-alp-subscribe-container');\n\nclass SubscribeContainerComponent extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    names: PropTypes.arrayOf(PropTypes.string.isRequired),\n    children: PropTypes.node,\n    visibleTimeout: PropTypes.number,\n  };\n\n  static defaultProps = {\n    visibleTimeout: 1000 * 60 * 2, // 2 minutes\n  };\n\n  static contextTypes = {\n    context: PropTypes.object,\n  };\n\n  state = {};\n\n  componentDidMount() {\n    const websocket = this.getWebsocket();\n    websocket.on('connect', this.subscribe);\n    if (websocket.isConnected()) {\n      this.subscribe();\n    }\n    document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange, false);\n    this.getWebsocket().off('connect', this.subscribe);\n    this.unsubscribe();\n  }\n\n  getWebsocket() {\n    return this.context.context.app.websocket;\n  }\n\n  subscribed: boolean = false;\n  timeout = null;\n\n  handleVisibilityChange = () => {\n    if (!document.hidden) {\n      if (this.timeout) {\n        logger.log('timeout cleared', { names: this.props.names, name: this.props.name });\n        clearTimeout(this.timeout);\n      } else {\n        logger.debug('resubscribe', { names: this.props.names, name: this.props.name });\n        this.subscribe();\n      }\n      return;\n    }\n\n    if (!this.subscribed) return;\n\n    logger.log('timeout visible', { names: this.props.names, name: this.props.name });\n    this.timeout = setTimeout(this.unsubscribe, this.props.visibleTimeout);\n  };\n\n  subscribe = () => {\n    if (document.hidden) return;\n\n    logger.log('subscribe', { names: this.props.names, name: this.props.name });\n    this.subscribed = true;\n    const { dispatch } = this.props;\n    const names = this.props.names || [this.props.name];\n    const websocket = this.getWebsocket();\n    names.forEach(name =>\n      websocket.emit(`subscribe:${name}`).then(action => action && dispatch(action)),\n    );\n  };\n\n  unsubscribe = () => {\n    this.timeout = null;\n    if (!this.subscribed) return;\n    logger.log('unsubscribe', { names: this.props.names, name: this.props.name });\n    this.subscribed = false;\n    const names = this.props.names || [this.props.name];\n    const websocket = this.getWebsocket();\n    if (websocket.isConnected()) {\n      names.forEach(name => websocket.emit(`unsubscribe:${name}`));\n    }\n  };\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default connect()(SubscribeContainerComponent);\n"]}