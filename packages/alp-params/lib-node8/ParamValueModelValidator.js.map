{"version":3,"sources":["../src/ParamValueModelValidator.js"],"names":["ParamValueModelValidator"],"mappings":";;;;;;;AAAA;;;;;;IAEqBA,wB,GAAN,4CAA2D;AACxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADwE,C;kBAArDA,wB","file":"ParamValueModelValidator.js","sourcesContent":["import ParamValueValidator from './ParamValueValidator';\n\nexport default class ParamValueModelValidator extends ParamValueValidator {\n  /*\n  required() {\n      if (this.value == null) {\n          this._error('required');\n      }\n      return this;\n  }\n  valid(fieldsRequired) {\n      if (this.value == null) {\n          return this;\n      }\n      if (S.isString(fieldsRequired)) {\n          fieldsRequired = fieldsRequired.split(' ');\n      }\n      S.forEach(this.value.constructor.Fields, (name, fModel) => {\n          let value = this.value[name];\n          if (fieldsRequired) {\n              if(S.array.has(fieldsRequired, name) && value == null) {\n                  this._error('required');\n              }\n          } else {\n              if (value == null && fModel[1] && fModel[1].required) {\n                  this._error('required');\n              }\n          }\n          //TODO ...\n      });\n      return this;\n  }\n   */\n}\n"]}