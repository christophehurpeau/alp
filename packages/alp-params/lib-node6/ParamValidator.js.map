{"version":3,"sources":["../src/ParamValidator.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEe,MAAM,cAAN,CAAqB;AAChC,gBAAY,OAAZ,EAAqB;AACjB,aAAK,OAAL,GAAe,OAAf;AACH;;AAED,WAAO,IAAP,EAAa,GAAb,EAAkB,KAAlB,EAAyB;AACrB,YAAI,CAAC,KAAK,OAAV,EAAmB;AACf,iBAAK,OAAL,GAAe,EAAf;AACH;;AAED,aAAK,OAAL,CAAa,IAAb,IAAqB,EAAE,OAAO,GAAT,EAAc,OAAO,KAArB,EAArB;AACH;;AAED,gBAAY;AACR,eAAO,KAAK,OAAZ;AACH;;AAED,gBAAY;AACR,eAAO,CAAC,CAAC,KAAK,OAAd;AACH;;AAED,cAAU;AACN,eAAO,CAAC,KAAK,OAAb;AACH;;AAED,WAAO,IAAP,EAAa,QAAb,EAAuB;AACnB,eAAO,wCAA8B,IAA9B,EAAoC,IAApC,EAA0C,KAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,EAAyB,QAAzB,CAA1C,CAAP;AACH;;;;;;;;;;AA3B+B;kBAAf,c","file":"ParamValidator.js","sourcesContent":["import ParamValueStringValidator from './ParamValueStringValidator';\n\nexport default class ParamValidator {\n    constructor(context) {\n        this.context = context;\n    }\n\n    _error(name, key, value) {\n        if (!this._errors) {\n            this._errors = {};\n        }\n\n        this._errors[name] = { error: key, value: value };\n    }\n\n    getErrors() {\n        return this._errors;\n    }\n\n    hasErrors() {\n        return !!this._errors;\n    }\n\n    isValid() {\n        return !this._errors;\n    }\n\n    string(name, position) {\n        return new ParamValueStringValidator(this, name, this.context.param(name, position));\n    }\n    /* int(name, position) {\n        return new ParamValueIntValidator(this, name, this.context.param(name, position));\n    }\n    model(modelName, name) {\n        name = name || S.string.lcFirst(modelName);\n        console.log('paramvalidator model', modelName, M[modelName]);\n        let data = this.context.getOrPostParam(name);\n        return new ParamValueModelValidator(this, name, !data ? null : new M[modelName](data));\n    }*/\n}\n"]}