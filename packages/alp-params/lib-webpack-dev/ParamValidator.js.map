{"version":3,"sources":["../src/ParamValidator.js"],"names":[],"mappings":";;;;AAAA,OAAO,yBAAP,MAAsC,6BAAtC;;IAEqB,c;AACnB,0BAAY,OAAZ,EAAqB;AAAA;;AACnB,SAAK,OAAL,GAAe,OAAf;AACD;;;;2BAEM,I,EAAM,G,EAAK,K,EAAO;AACvB,UAAI,CAAC,KAAK,OAAV,EAAmB;AACjB,aAAK,OAAL,GAAe,EAAf;AACD;;AAED,WAAK,OAAL,CAAa,IAAb,IAAqB,EAAE,OAAO,GAAT,EAAc,OAAO,KAArB,EAArB;AACD;;;gCAEW;AACV,aAAO,KAAK,OAAZ;AACD;;;gCAEW;AACV,aAAO,CAAC,CAAC,KAAK,OAAd;AACD;;;8BAES;AACR,aAAO,CAAC,KAAK,OAAb;AACD;;;2BAEM,I,EAAM,Q,EAAU;AACrB,aAAO,IAAI,yBAAJ,CAA8B,IAA9B,EAAoC,IAApC,EAA0C,KAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,EAAyB,QAAzB,CAA1C,CAAP;AACD;AACD;;;;;;;;;;;;;;;eA5BmB,c","file":"ParamValidator.js","sourcesContent":["import ParamValueStringValidator from './ParamValueStringValidator';\n\nexport default class ParamValidator {\n  constructor(context) {\n    this.context = context;\n  }\n\n  _error(name, key, value) {\n    if (!this._errors) {\n      this._errors = {};\n    }\n\n    this._errors[name] = { error: key, value: value };\n  }\n\n  getErrors() {\n    return this._errors;\n  }\n\n  hasErrors() {\n    return !!this._errors;\n  }\n\n  isValid() {\n    return !this._errors;\n  }\n\n  string(name, position) {\n    return new ParamValueStringValidator(this, name, this.context.param(name, position));\n  }\n  /* int(name, position) {\n   return new ParamValueIntValidator(this, name, this.context.param(name, position));\n   }\n   model(modelName, name) {\n   name = name || S.string.lcFirst(modelName);\n   console.log('paramvalidator model', modelName, M[modelName]);\n   let data = this.context.getOrPostParam(name);\n   return new ParamValueModelValidator(this, name, !data ? null : new M[modelName](data));\n   }*/\n}\n"]}