{"version":3,"file":"index-browsermodern.es.js","sources":["../src/ParamValueValidator.ts","../src/ParamValueStringValidator.ts","../src/ParamValidator.ts","../src/ParamValidatorValid.ts","../src/index.ts"],"sourcesContent":["import type { ParamValidator } from './ParamValidator';\n\nexport default class ParamValueValidator<T> {\n  readonly validator: ParamValidator;\n\n  readonly name: string;\n\n  readonly value: T;\n\n  constructor(validator: ParamValidator, name: string, value: T) {\n    this.validator = validator;\n    this.name = name;\n    this.value = value;\n  }\n\n  _error(key: string): void {\n    this.validator._error(this.name, key, this.value);\n  }\n}\n","import ParamValueValidator from './ParamValueValidator';\n\nexport default class ParamValueStringValidator<\n  T extends string = string,\n> extends ParamValueValidator<T | undefined | null> {\n  notEmpty(): ParamValueValidator<T> {\n    if (this.value == null || this.value.trim() === '') {\n      this._error('notEmpty');\n    }\n\n    return this as ParamValueValidator<T>;\n  }\n}\n","import type { Context } from 'alp-types';\nimport ParamValueStringValidator from './ParamValueStringValidator';\n\nexport type Errors = Record<string, any>;\n\nexport class ParamValidator {\n  context: Context;\n\n  _errors?: Errors;\n\n  constructor(context: Context) {\n    this.context = context;\n  }\n\n  _error(name: string, key: string, value: unknown): void {\n    if (!this._errors) {\n      this._errors = {};\n    }\n\n    this._errors[name] = { error: key, value };\n  }\n\n  getErrors(): Errors | undefined {\n    return this._errors;\n  }\n\n  hasErrors(): boolean {\n    return this._errors !== undefined;\n  }\n\n  isValid(): boolean {\n    return this._errors === undefined;\n  }\n\n  string(name: string): ParamValueStringValidator {\n    return new ParamValueStringValidator(this, name, this.context.param(name));\n  }\n  /* int(name, position) {\n   return new ParamValueIntValidator(this, name, this.context.param(name, position));\n   }\n   model(modelName, name) {\n   name = name || S.string.lcFirst(modelName);\n   console.log('paramvalidator model', modelName, M[modelName]);\n   let data = this.context.getOrPostParam(name);\n   return new ParamValueModelValidator(this, name, !data ? null : new M[modelName](data));\n   } */\n}\n","import { ParamValidator } from './ParamValidator';\n\nexport default class ParamValidatorValid extends ParamValidator {\n  _error(): void {\n    this.context.throw(404, 'Invalid params', { validator: this });\n  }\n}\n","import type { Context, ApplicationInCreation } from 'alp-types';\nimport 'alp-router';\nimport { defineLazyProperty } from 'object-properties';\nimport { ParamValidator } from './ParamValidator';\nimport ParamValidatorValid from './ParamValidatorValid';\n\nexport { ParamValidator } from './ParamValidator';\n\ndeclare module 'alp-types' {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  interface Context {\n    params: ParamValidator;\n    validParams: ParamValidator;\n    param: (name: string) => string | undefined;\n    namedParam: (name: string) => string | undefined;\n    otherParam: (position: number) => string | undefined;\n    paramGET: (name: string) => string | undefined;\n    paramGETorPOST: <T>(name: string) => T | undefined;\n  }\n}\n\nexport default function alpParams(app: ApplicationInCreation): void {\n  Object.assign(app.context, {\n    param(this: Context, name: string): string | undefined {\n      return this.namedParam(name) || this.paramGET(name);\n    },\n\n    namedParam(this: Context, name: string): string | undefined {\n      const namedParams = this.route.namedParams;\n      return namedParams?.get(name);\n    },\n\n    otherParam(this: Context, position: number): string | undefined {\n      const otherParams = this.route.otherParams;\n      return otherParams && otherParams[position - 1];\n    },\n\n    paramGET(this: Context, name: string): string | undefined {\n      const searchParams = this.request.searchParams;\n      return searchParams.get(name) ?? undefined;\n    },\n\n    paramGETorPOST<T>(this: Context, name: string): T | undefined {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-return\n      return this.body[name] !== undefined\n        ? // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          this.body[name]\n        : this.paramGET(name);\n    },\n  });\n\n  defineLazyProperty(\n    app.request,\n    'searchParams',\n    function (this: Context['request']): URLSearchParams {\n      return new URLSearchParams(this.search);\n    },\n  );\n\n  defineLazyProperty(\n    app.context,\n    'params',\n    function (this: Context): ParamValidator {\n      return new ParamValidator(this);\n    },\n  );\n\n  defineLazyProperty(\n    app.context,\n    'validParams',\n    function (this: Context): ParamValidatorValid {\n      return new ParamValidatorValid(this);\n    },\n  );\n}\n"],"names":["ParamValueValidator","constructor","validator","name","value","_error","key","ParamValueStringValidator","notEmpty","trim","ParamValidator","context","_errors","error","getErrors","hasErrors","undefined","isValid","string","param","ParamValidatorValid","throw","alpParams","app","Object","assign","namedParam","paramGET","namedParams","route","get","otherParam","position","otherParams","searchParams","request","paramGETorPOST","body","defineLazyProperty","URLSearchParams","search"],"mappings":"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"}