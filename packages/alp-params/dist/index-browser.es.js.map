{"version":3,"file":"index-browser.es.js","sources":["../src/ParamValueValidator.ts","../src/ParamValueStringValidator.ts","../src/ParamValidator.ts","../src/ParamValidatorValid.ts","../src/index.ts"],"sourcesContent":["import type { ParamValidator } from './ParamValidator';\n\nexport default class ParamValueValidator<T> {\n  readonly validator: ParamValidator;\n\n  readonly name: string;\n\n  readonly value: T;\n\n  constructor(validator: ParamValidator, name: string, value: T) {\n    this.validator = validator;\n    this.name = name;\n    this.value = value;\n  }\n\n  _error(key: string): void {\n    this.validator._error(this.name, key, this.value);\n  }\n}\n","import ParamValueValidator from './ParamValueValidator';\n\nexport default class ParamValueStringValidator<\n  T extends string = string,\n> extends ParamValueValidator<T | undefined | null> {\n  notEmpty(): ParamValueValidator<T> {\n    if (this.value == null || this.value.trim() === '') {\n      this._error('notEmpty');\n    }\n\n    return this as ParamValueValidator<T>;\n  }\n}\n","import type { Context } from 'alp-types';\nimport ParamValueStringValidator from './ParamValueStringValidator';\n\nexport type Errors = Record<string, any>;\n\nexport class ParamValidator {\n  context: Context;\n\n  _errors?: Errors;\n\n  constructor(context: Context) {\n    this.context = context;\n  }\n\n  _error(name: string, key: string, value: unknown): void {\n    if (!this._errors) {\n      this._errors = {};\n    }\n\n    this._errors[name] = { error: key, value };\n  }\n\n  getErrors(): Errors | undefined {\n    return this._errors;\n  }\n\n  hasErrors(): boolean {\n    return this._errors !== undefined;\n  }\n\n  isValid(): boolean {\n    return this._errors === undefined;\n  }\n\n  string(name: string): ParamValueStringValidator {\n    return new ParamValueStringValidator(this, name, this.context.param(name));\n  }\n  /* int(name, position) {\n   return new ParamValueIntValidator(this, name, this.context.param(name, position));\n   }\n   model(modelName, name) {\n   name = name || S.string.lcFirst(modelName);\n   console.log('paramvalidator model', modelName, M[modelName]);\n   let data = this.context.getOrPostParam(name);\n   return new ParamValueModelValidator(this, name, !data ? null : new M[modelName](data));\n   } */\n}\n","import { ParamValidator } from './ParamValidator';\n\nexport default class ParamValidatorValid extends ParamValidator {\n  _error(): void {\n    this.context.throw(404, 'Invalid params', { validator: this });\n  }\n}\n","import type { Context, NodeApplicationInCreation } from 'alp-types';\nimport 'alp-router';\nimport { defineLazyProperty } from 'object-properties';\nimport { ParamValidator } from './ParamValidator';\nimport ParamValidatorValid from './ParamValidatorValid';\n\nexport { ParamValidator } from './ParamValidator';\n\ndeclare module 'alp-types' {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  interface Context {\n    params: ParamValidator;\n    validParams: ParamValidator;\n    param: (name: string) => string | undefined;\n    namedParam: (name: string) => string | undefined;\n    otherParam: (position: number) => string | undefined;\n    paramGET: (name: string) => string | undefined;\n    paramGETorPOST: <T>(name: string) => T | undefined;\n  }\n}\n\nexport default function alpParams(app: NodeApplicationInCreation): void {\n  Object.assign(app.context, {\n    param(this: Context, name: string): string | undefined {\n      return this.namedParam(name) || this.paramGET(name);\n    },\n\n    namedParam(this: Context, name: string): string | undefined {\n      const namedParams = this.route.namedParams;\n      return namedParams?.get(name);\n    },\n\n    otherParam(this: Context, position: number): string | undefined {\n      const otherParams = this.route.otherParams;\n      return otherParams && otherParams[position - 1];\n    },\n\n    paramGET(this: Context, name: string): string | undefined {\n      const query = this.request.query;\n      return query?.[name] as string | undefined;\n    },\n\n    paramGETorPOST<T>(this: Context, name: string): T | undefined {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-return\n      return this.body[name] !== undefined\n        ? // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          this.body[name]\n        : this.request.query[name];\n    },\n  });\n\n  defineLazyProperty(\n    app.context,\n    'params',\n    function (this: Context): ParamValidator {\n      return new ParamValidator(this);\n    },\n  );\n\n  defineLazyProperty(\n    app.context,\n    'validParams',\n    function (this: Context): ParamValidatorValid {\n      return new ParamValidatorValid(this);\n    },\n  );\n}\n"],"names":["ParamValueValidator","validator","name","value","_error","key","ParamValueStringValidator","notEmpty","trim","ParamValidator","context","_errors","error","getErrors","hasErrors","undefined","isValid","string","param","ParamValidatorValid","throw","alpParams","app","Object","assign","namedParam","paramGET","namedParams","route","get","otherParam","position","otherParams","query","request","paramGETorPOST","body","defineLazyProperty"],"mappings":"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"}