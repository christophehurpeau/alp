{"version":3,"file":"build-node8.cjs.js","sources":["../src/utils/readFile.ts","../src/utils/writeFile.ts","../src/utils/loadConfigFile.ts","../src/config-build.ts","../src/build.ts"],"sourcesContent":["import fs from 'fs';\n\nexport default (target: string): Promise<string> =>\n  new Promise((resolve, reject) => {\n    fs.readFile(target, 'utf-8', (err, content) => {\n      if (err) {\n        return reject(\n          new Error(`Failed to read file \"${target}\": ${err.message || err}`),\n        );\n      }\n\n      resolve(content);\n    });\n  });\n","import fs from 'fs';\nimport path from 'path';\nimport mkdirp from 'mkdirp';\n\nexport default (target: string, content: string): Promise<void> =>\n  new Promise((resolve, reject) => {\n    mkdirp(path.dirname(target), () => {\n      fs.writeFile(target, content, (err) => {\n        if (err) {\n          return reject(\n            new Error(\n              `Failed to write file \"${target}\": ${err.message || err}`,\n            ),\n          );\n        }\n\n        resolve();\n      });\n    });\n  });\n","import { readFileSync } from 'fs';\nimport path from 'path';\nimport { safeLoad as saveLoadYml } from 'js-yaml';\n\nexport interface Config {\n  [key: string]: any;\n}\n\nexport default function loadConfigFile(\n  content: string,\n  dirname: string,\n): [Config, Config] {\n  const data = saveLoadYml(content) || {};\n\n  const config = data.shared || data.common || {};\n  const serverConfig = { ...config, ...data.server };\n  const browserConfig = { ...config, ...data.browser };\n\n  if (data.include) {\n    const includePaths = data.include.map((includePath: string) =>\n      path.resolve(dirname, includePath),\n    );\n    includePaths\n      .map((includePath: string) => readFileSync(includePath, 'utf-8'))\n      .map((content: string, index: number) =>\n        loadConfigFile(content, path.dirname(includePaths[index])),\n      )\n      .forEach(\n        ([includeServerConfig, includeBrowserConfig]: [Config, Config]) => {\n          [\n            { config: serverConfig, include: includeServerConfig },\n            { config: browserConfig, include: includeBrowserConfig },\n          ].forEach(({ config, include }) =>\n            Object.keys(include).forEach((key) => {\n              if (!(key in config)) {\n                config[key] = include[key];\n                return;\n              }\n              if (Array.isArray(config[key])) {\n                config[key].push(include[key]);\n              } else if (typeof config[key] === 'object') {\n                Object.assign(config[key], include[key]);\n              } else {\n                throw new TypeError(\n                  `Unexpected override \"${key}\", filename = ${\n                    includePaths[key]\n                  }`,\n                );\n              }\n            }),\n          );\n        },\n      );\n  }\n\n  return [serverConfig, browserConfig];\n}\n","import { dirname, join } from 'path';\nimport { FSWatcher, watch as fsWatch } from 'fs';\nimport glob from 'glob';\nimport readFile from './utils/readFile';\nimport writeFile from './utils/writeFile';\nimport loadConfigFile from './utils/loadConfigFile';\n\nexport const clean = () => {};\n\nconst compileYml = async (filename: string) => {\n  const content = await readFile(filename);\n\n  const [serverConfig, browserConfig] = loadConfigFile(\n    content,\n    dirname(filename),\n  );\n  const destFile = `${filename.slice('src/'.length, -'yml'.length)}json`;\n\n  return Promise.all([\n    writeFile(`build/${destFile}`, JSON.stringify(serverConfig)),\n    writeFile(`public/${destFile}`, JSON.stringify(browserConfig)),\n  ]);\n};\n\nexport const build = (\n  src: string = './src/config',\n  onChanged?: () => void,\n): Promise<any> =>\n  Promise.all(\n    glob.sync(join(src, '**/*.yml')).map(\n      async (filename: string): Promise<() => void> => {\n        const compilePromise = compileYml(filename);\n\n        if (onChanged) {\n          const fsWatcher: FSWatcher = fsWatch(\n            filename,\n            { persistent: false, recursive: false },\n            async (eventType: string) => {\n              console.log(eventType, filename);\n              if (eventType === 'change') {\n                await compileYml(filename);\n                onChanged();\n              }\n            },\n          );\n\n          await compilePromise;\n\n          return () => fsWatcher.close();\n        }\n\n        return () => {};\n      },\n    ),\n  ).then((closeFns: (() => void)[]) => () => {\n    closeFns.forEach((closeFn) => closeFn());\n  });\n\nexport const watch = (envs: string[]) => {};\n","import { execSync } from 'child_process';\nimport { resolve as pathResolve } from 'path';\nimport execa from 'execa';\nimport { clean, build } from './config-build';\n\nexecSync(`rm -Rf ${pathResolve('public')}/* ${pathResolve('build')}/*`);\n\nclean();\n\nPromise.all([\n  build(),\n  ...['build-node', 'build-modern-browser', 'build-older-browser'].map(\n    (path) => {\n      const instance = execa('node', [\n        __filename.replace('/build-', `/${path}-`),\n      ]);\n      if (instance.stdout) instance.stdout.pipe(process.stdout);\n      return instance;\n    },\n  ),\n]).then(\n  () => {\n    console.log('done !');\n  },\n  (err) => {\n    console.error(err);\n    // eslint-disable-next-line unicorn/no-process-exit\n    process.exit(1);\n  },\n);\n"],"names":["target","Promise","resolve","reject","fs","readFile","err","content","Error","message","mkdirp","path","dirname","writeFile","loadConfigFile","data","saveLoadYml","config","shared","common","serverConfig","server","browserConfig","browser","include","includePaths","map","includePath","readFileSync","index","forEach","includeServerConfig","includeBrowserConfig","Object","keys","key","Array","isArray","push","assign","TypeError","compileYml","filename","destFile","slice","all","JSON","stringify","build","src","onChanged","glob","sync","join","compilePromise","fsWatcher","fsWatch","persistent","recursive","eventType","console","log","close","then","closeFns","closeFn","execSync","pathResolve","clean","instance","execa","__filename","replace","stdout","pipe","process","error","exit"],"mappings":"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"}