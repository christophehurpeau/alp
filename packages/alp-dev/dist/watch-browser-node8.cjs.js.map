{"version":3,"file":"watch-browser-node8.cjs.js","sources":["../src/webpack/createPobpackConfig.js","../src/webpack/browser.js","../src/watch-browser.js"],"sourcesContent":["import path from 'path';\nimport presetPob from 'babel-preset-pob';\nimport presetPobReact from 'babel-preset-pob-react';\nimport presetPobStages from 'babel-preset-pob-stages';\nimport presetEnv from 'babel-preset-env';\nimport { buildPreset as presetModernBrowsers } from 'babel-preset-modern-browsers';\nimport presetLatestNode from 'babel-preset-latest-node';\nimport presetOptimizations from 'babel-preset-optimizations';\nimport pluginDiscardModuleReference from 'babel-plugin-discard-module-references';\nimport pluginFlowRuntime from 'babel-plugin-flow-runtime';\nimport OptimizeCssAssetsPlugin from 'optimize-css-assets-webpack-plugin';\nimport BabelMinifyPlugin from 'babel-minify-webpack-plugin';\nimport { optimize } from 'webpack';\nimport ExtractTextPlugin from 'extract-text-webpack-plugin';\nimport autoprefixer from 'autoprefixer';\nimport { createModuleRules, createExtractPlugin } from 'ynnub/webpack-config';\n\ntype TargetType = 'node' | 'modern-browser' | 'browser';\n\nexport default (target: TargetType, production: ?boolean = false) => ({\n  env: process.env.NODE_ENV,\n  hmr: !production,\n\n  includeModules: ['ynnub', 'react-alp-login'],\n\n  paths: {\n    build: target === 'node' ? 'build' : 'public',\n  },\n\n  entries: [\n    {\n      // eslint-disable-next-line no-nested-ternary\n      key: target === 'node' ? 'index' : target === 'browser' ? 'es5' : 'modern-browsers',\n      path: target === 'node' ? 'index.server.js' : 'index.browser.js',\n    },\n  ],\n\n  resolveLoaderModules: [path.join(__dirname, '../..', 'node_modules'), 'node_modules'],\n\n  babel: {\n    minified: target !== 'node' && production,\n    comments: !(target !== 'node' && production),\n\n    // preset order is last to first, so we reverse it for clarity.\n    presets: [\n      // add react preset with jsx\n      [presetPobReact, { production }],\n      // add stage-1 to stage-3 features\n      presetPobStages,\n      // pob preset: flow, import `src`, export default function name, replacements\n      [\n        presetPob,\n        {\n          production,\n          replacements: {\n            BROWSER: target !== 'node',\n            NODEJS: target === 'node',\n            SERVER: target === 'node',\n            MODERN_BROWSERS: target === 'modern-browser',\n          },\n        },\n      ],\n      // optimizations: remove dead-code\n      presetOptimizations,\n      // flow runtime\n      !production && {\n        plugins: [\n          [\n            pluginFlowRuntime,\n            {\n              assert: true,\n              annotate: false,\n            },\n          ],\n        ],\n      },\n      // discard unused imports (like production-only or node-only imports)\n      { plugins: [pluginDiscardModuleReference] },\n      // transpile for browser\n      target === 'modern-browser' && [presetModernBrowsers, { modules: false }],\n      target === 'browser' && [\n        presetEnv,\n        {\n          modules: false,\n          useBuiltIns: true,\n          targets: [\n            '>1%',\n            'not ie < 9', // react doesn't support ie < 9\n          ],\n        },\n      ],\n\n      target === 'node' && [\n        presetLatestNode,\n        {\n          modules: false,\n          target: 8.3,\n        },\n      ],\n    ]\n      .reverse()\n      .filter(Boolean),\n    plugins: [],\n  },\n\n  moduleRules: [\n    // SCSS RULE, CSS RULE\n    ...createModuleRules({\n      ExtractTextPlugin,\n      production,\n      themeFile: './src/theme.scss',\n      plugins: [autoprefixer],\n      includePaths: [path.resolve('./node_modules')],\n    }),\n\n    // IMG RULE\n    {\n      test: /\\.(png|jpg|jpeg|gif|svg)$/,\n      loader: require.resolve('url-loader'),\n      options: {\n        emitFile: target === 'node', // only write file if node\n        limit: 1000,\n        name: 'images/[hash].[ext]',\n        outputPath: '../public/', // because it's node who is writing the file, node is in build/\n        publicPath: url => url.replace(/^..\\/public\\//, ''),\n      },\n    },\n  ],\n\n  plugins: [\n    createExtractPlugin(ExtractTextPlugin, {\n      // disable: target === 'node',\n      filename: `${\n        // eslint-disable-next-line no-nested-ternary\n        target === 'node' ? 'server' : target === 'browser' ? 'es5' : 'modern-browsers'\n      }.css`,\n    }),\n\n    new OptimizeCssAssetsPlugin(),\n\n    target !== 'node' &&\n      production &&\n      new BabelMinifyPlugin(\n        {\n          booleans: true,\n          builtIns: false,\n          consecutiveAdds: true,\n          deadcode: true,\n          evaluate: true,\n          flipComparisons: true,\n          guards: true,\n          infinity: false,\n          mangle: true,\n          memberExpressions: true,\n          mergeVars: true,\n          numericLiterals: true,\n          propertyLiterals: true,\n          regexpConstructors: true,\n          removeConsole: false,\n          removeDebugger: true,\n          removeUndefined: true,\n          replace: false,\n          simplify: true,\n          simplifyComparisons: true,\n          typeConstructors: true,\n          undefinedToVoid: false,\n          // keepFnName: true,\n          // keepClassName: true,\n        },\n        { comments: false },\n      ),\n\n    target === 'browser' &&\n      production &&\n      new optimize.UglifyJsPlugin({\n        compress: {\n          warnings: false,\n        },\n        sourceMap: !production,\n      }),\n    // TODO https://github.com/NekR/offline-plugin\n  ].filter(Boolean),\n\n  defines: {\n    BROWSER: target !== 'node',\n    SERVER: target === 'node',\n    NODEJS: target === 'node',\n    PRODUCTION: production,\n    MODERN_BROWSERS: target === 'modern-browser',\n  },\n});\n","import {\n  createAppBrowserCompiler,\n  MODERN,\n  ALL,\n  runDevServer as runDevServerPobpack,\n} from 'pobpack-browser/src';\nimport createPobpackConfig from './createPobpackConfig';\n\nexport const createModernBrowserCompiler = production =>\n  createAppBrowserCompiler(MODERN, createPobpackConfig('modern-browser', production));\n\nexport const createOlderBrowserCompiler = production =>\n  createAppBrowserCompiler(ALL, createPobpackConfig('browser', production));\n\nexport const runDevServer = (compiler, port: number, proxyPort: number, options) =>\n  runDevServerPobpack(compiler, {\n    port: proxyPort,\n    https: false,\n\n    // contentBase: false,\n\n    headers: {\n      // avoid errors in console\n      'Access-Control-Expose-Headers': 'SourceMap,X-SourceMap',\n    },\n\n    proxy: {\n      '**': `http://localhost:${port}`,\n    },\n\n    ...options,\n  });\n","import argv from 'minimist-argv';\nimport { createModernBrowserCompiler, runDevServer } from './webpack/browser';\n\nconst browserCompiler = createModernBrowserCompiler();\n\nrunDevServer(browserCompiler, argv.port, argv['proxy-port'], {\n  host: argv.host,\n});\n"],"names":["target","production","process","env","NODE_ENV","path","join","__dirname","presetLatestNode","presetEnv","presetModernBrowsers","modules","plugins","pluginDiscardModuleReference","pluginFlowRuntime","presetPob","presetPobReact","filter","Boolean","createModuleRules","autoprefixer","resolve","require","url","replace","createExtractPlugin","ExtractTextPlugin","OptimizeCssAssetsPlugin","BabelMinifyPlugin","comments","optimize","UglifyJsPlugin","createModernBrowserCompiler","createAppBrowserCompiler","MODERN","createPobpackConfig","runDevServer","compiler","port","proxyPort","options","runDevServerPobpack","browserCompiler","argv","host"],"mappings":"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"}