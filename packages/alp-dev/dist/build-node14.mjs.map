{"version":3,"file":"build-node14.mjs","sources":["../src/utils/loadConfigFile.ts","../src/utils/readFile.ts","../src/utils/writeFile.ts","../src/config-build.ts","../src/build.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */\nimport { readFileSync } from 'fs';\nimport path from 'path';\nimport yaml from 'js-yaml';\n\nexport type Config = Record<string, any>;\n\nexport default function loadConfigFile(\n  content: string,\n  dirname: string,\n): [Config, Config] {\n  const data: any = yaml.load(content) || {};\n\n  const config = data.shared || data.common || {};\n  const serverConfig = { ...config, ...data.server };\n  const browserConfig = { ...config, ...data.browser };\n\n  if (data.include) {\n    const includePaths = data.include.map((includePath: string) =>\n      path.resolve(dirname, includePath),\n    );\n    includePaths\n      .map((includePath: string) => readFileSync(includePath, 'utf-8'))\n      .map((fileContent: string, index: number) =>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        loadConfigFile(fileContent, path.dirname(includePaths[index])),\n      )\n      .forEach(\n        ([includeServerConfig, includeBrowserConfig]: [Config, Config]) => {\n          [\n            { includeConfig: serverConfig, include: includeServerConfig },\n            { includeConfig: browserConfig, include: includeBrowserConfig },\n          ].forEach(({ includeConfig, include }) => {\n            Object.keys(include).forEach((key) => {\n              if (!(key in includeConfig)) {\n                includeConfig[key] = include[key];\n                return;\n              }\n              if (Array.isArray(includeConfig[key])) {\n                includeConfig[key].push(include[key]);\n              } else if (typeof includeConfig[key] === 'object') {\n                Object.assign(includeConfig[key], include[key]);\n              } else {\n                throw new TypeError(\n                  `Unexpected override \"${key}\", filename = ${includePaths[key]}`,\n                );\n              }\n            });\n          });\n        },\n      );\n  }\n\n  return [serverConfig as Config, browserConfig as Config];\n}\n","import fs from 'fs';\n\nexport default function readFile(target: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    fs.readFile(target, 'utf-8', (err, content) => {\n      if (err) {\n        reject(\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-base-to-string\n          new Error(`Failed to read file \"${target}\": ${err.message || err}`),\n        );\n        return;\n      }\n\n      resolve(content);\n    });\n  });\n}\n","import fs from 'fs';\nimport path from 'path';\n\nexport default function writeFile(\n  target: string,\n  content: string,\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    fs.mkdir(path.dirname(target), { recursive: true }, () => {\n      fs.writeFile(target, content, (err) => {\n        if (err) {\n          reject(\n            new Error(\n              // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-base-to-string\n              `Failed to write file \"${target}\": ${err.message || err}`,\n            ),\n          );\n          return;\n        }\n\n        resolve();\n      });\n    });\n  });\n}\n","import type { FSWatcher } from 'fs';\nimport { watch as fsWatch } from 'fs';\nimport { dirname, join } from 'path';\nimport glob from 'glob';\nimport loadConfigFile from './utils/loadConfigFile';\nimport readFile from './utils/readFile';\nimport writeFile from './utils/writeFile';\n\nexport const clean = (): void => {};\n\nconst compileYml = async (filename: string): Promise<void> => {\n  const content = await readFile(filename);\n\n  const [serverConfig, browserConfig] = loadConfigFile(\n    content,\n    dirname(filename),\n  );\n  const destFile = `${filename.slice('src/'.length, -'yml'.length)}json`;\n\n  await Promise.all([\n    writeFile(`build/${destFile}`, JSON.stringify(serverConfig)),\n    writeFile(`public/${destFile}`, JSON.stringify(browserConfig)),\n  ]);\n};\n\nexport const build = (\n  src = './src/config',\n  onChanged?: () => void,\n): Promise<any> =>\n  Promise.all(\n    glob\n      .sync(join(src, '**/*.yml'))\n      .map(async (filename: string): Promise<() => void> => {\n        const compilePromise = compileYml(filename);\n\n        if (onChanged) {\n          const fsWatcher: FSWatcher = fsWatch(\n            filename,\n            { persistent: false, recursive: false },\n            (eventType: string): void => {\n              console.log(eventType, filename);\n              if (eventType === 'change') {\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                compileYml(filename).then(() => {\n                  onChanged();\n                });\n              }\n            },\n          );\n\n          await compilePromise;\n\n          return () => fsWatcher.close();\n        }\n\n        return () => {};\n      }),\n  ).then((closeFns: (() => void)[]) => () => {\n    closeFns.forEach((closeFn) => closeFn());\n  });\n\nexport const watch = (envs: string[]): void => {};\n","import { execSync } from 'child_process';\nimport { resolve as pathResolve } from 'path';\nimport { URL } from 'url';\nimport { execa } from 'execa';\nimport { clean, build } from './config-build';\n\nexecSync(`rm -Rf ${pathResolve('public')}/* ${pathResolve('build')}/*`);\n\nclean();\n\ntry {\n  await Promise.all([\n    build(),\n    ...['build-node', 'build-modern-browser', 'build-older-browser'].map(\n      async (path) => {\n        await execa(\n          'node',\n          [new URL(import.meta.url).pathname.replace('/build-', `/${path}-`)],\n          {\n            stdio: 'inherit',\n          },\n        );\n      },\n    ),\n  ]);\n} catch {\n  console.error('Failed to build');\n  process.exit(1);\n}\n"],"names":["loadConfigFile","content","dirname","data","yaml","load","config","shared","common","serverConfig","server","browserConfig","browser","include","includePaths","map","includePath","path","resolve","readFileSync","fileContent","index","forEach","includeServerConfig","includeBrowserConfig","includeConfig","Object","keys","key","Array","isArray","push","assign","TypeError","readFile","target","Promise","reject","fs","err","Error","message","writeFile","mkdir","recursive","clean","compileYml","filename","destFile","slice","all","JSON","stringify","build","src","onChanged","glob","sync","join","compilePromise","fsWatcher","fsWatch","persistent","eventType","console","log","then","close","closeFns","closeFn","execSync","pathResolve","execa","URL","import","meta","url","pathname","replace","stdio","error","process","exit"],"mappings":"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"}