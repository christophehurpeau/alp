{"version":3,"sources":["../src/browser-sync.js"],"names":[],"mappings":";;;;;;;;;AAIA,MAAM,OAAO,QAAQ,eAAR,CAAP;AACN,MAAM,cAAc,QAAQ,cAAR,CAAd;AACN,MAAM,UAAU,QAAQ,SAAR,CAAV;AACN,MAAM,uBAAuB,QAAQ,wBAAR,CAAvB;AACN,MAAM,uBAAuB,QAAQ,wBAAR,CAAvB;;;;;AAKN,MAAM,gBAAgB,QAAQ,mBAAR,CAAhB;AACN,MAAM,UAAU,QAAQ,aAAR,CAAV;;AAEN,MAAM,OAAO,KAAK,IAAL,IAAa,IAAb;;;;;kBAKE,YAAY;AACvB,UAAM,KAAK,IAAL;AACN,UAAM,IAAN;AACA,QAAI,EAAE,MAAM,OAAO,CAAP,EAAZ;;AAEA,eAAW;AACP,gBAAQ,KAAR;AACA,eAAO,KAAP;AACA,gBAAQ,IAAR;KAHJ;;AAMA,WAAO;AACH,gBAAQ,CAAC,UAAD,GAAa,KAAK,SAAL,EAAe,CAApC;AACA,oBAAY,CACR,qBAAqB,OAArB,EAA8B;;;AAG1B,wBAAY,cAAc,MAAd,CAAqB,UAArB;;;AAGZ,mBAAO,EAAE,QAAQ,IAAR,EAAT;;SANJ,CADQ;;;;;AAcR,6BAAqB,OAArB,CAdQ,CAAZ;KAFJ;;AAoBA,iBAAa,CAAC,QAAD,CAAb;;;;AAIA,WAAO;;KAAP;CAnCW","file":"browser-sync.js","sourcesContent":["/**\n * https://github.com/BrowserSync/recipes/blob/master/recipes/webpack.react-hot-loader/app.js\n * Require Browsersync along with webpack and middleware for it\n */\nconst argv = require('minimist-argv');\nconst browserSync = require('browser-sync');\nconst webpack = require('webpack');\nconst webpackDevMiddleware = require('webpack-dev-middleware');\nconst webpackHotMiddleware = require('webpack-hot-middleware');\n\n/**\n * Require ./webpack.config.js and make a bundler from it\n */\nconst webpackConfig = require('../webpack.config');\nconst bundler = webpack(webpackConfig);\n\nconst port = argv.port || 3000;\n\n/**\n * Run Browsersync and use middleware for Hot Module Replacement\n */\nexport default browserSync({\n    open: argv.open,\n    port: port,\n    ui: { port: port + 1 },\n\n    ghostMode: {\n        clicks: false,\n        forms: false,\n        scroll: true,\n    },\n\n    proxy: {\n        target: `localhost:${argv.proxyPort}`,\n        middleware: [\n            webpackDevMiddleware(bundler, {\n                // IMPORTANT: dev middleware can't access config, so we should\n                // provide publicPath by ourselves\n                publicPath: webpackConfig.output.publicPath,\n\n                // pretty colored output\n                stats: { colors: true },\n\n                // for other settings see\n                // http://webpack.github.io/docs/webpack-dev-middleware.html\n            }),\n\n            // bundler should be the same as above\n            webpackHotMiddleware(bundler),\n        ],\n    },\n\n    serveStatic: ['public'],\n\n    // no need to watch '*.js' here, webpack will take care of it for us,\n    // including full page reloads if HMR won't work\n    files: [\n        // 'app/*.html',\n    ],\n});\n"]}