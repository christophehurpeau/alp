{"version":3,"sources":["../../src/build/index.js"],"names":["Promise","all","map","path","instance","require","resolve","stdout","pipe","process","then","console","log"],"mappings":";;AAAA;;AACA;;;;AACA;;AACA;;;;AAEA,6BAAU,UAAS,mBAAY,QAAZ,CAAsB,MAAK,mBAAY,OAAZ,CAAqB,IAAnE;;AAEA;;AAEAA,QAAQC,GAAR,CAAY,CACV,yBADU,EAEV,GAAG,kDAAkDC,GAAlD,CAAsDC,QAAQ;AAC/D,QAAMC,WAAW,qBAAM,MAAN,EAAc,CAACC,QAAQC,OAAR,CAAgBH,IAAhB,CAAD,CAAd,CAAjB;AACAC,WAASG,MAAT,CAAgBC,IAAhB,CAAqBC,QAAQF,MAA7B;AACA,SAAOH,QAAP;AACD,CAJE,CAFO,CAAZ,EAOGM,IAPH,CAOQ,MAAM;AACZC,UAAQC,GAAR,CAAY,QAAZ;AACD,CATD","file":"index.js","sourcesContent":["import { resolve as pathResolve } from 'path';\nimport execa from 'execa';\nimport { execSync } from 'child_process';\nimport { clean, build } from '../config-build';\n\nexecSync(`rm -Rf ${pathResolve('public')}/* ${pathResolve('build')}/*`);\n\nclean();\n\nPromise.all([\n  build(),\n  ...['./node', './modern-browser', './older-browser'].map(path => {\n    const instance = execa('node', [require.resolve(path)]);\n    instance.stdout.pipe(process.stdout);\n    return instance;\n  }),\n]).then(() => {\n  console.log('done !');\n});\n"]}