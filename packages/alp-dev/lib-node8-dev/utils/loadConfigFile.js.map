{"version":3,"sources":["../../src/utils/loadConfigFile.js"],"names":["readFileSync","require","path","safeLoad","saveLoadYml","module","exports","loadConfigFile","content","dirname","data","config","shared","common","serverConfig","server","browserConfig","browser","include","includePaths","map","includePath","resolve","index","forEach","includeServerConfig","includeBrowserConfig","Object","keys","key","Array","isArray","push","assign","Error"],"mappings":";;AAAA,MAAM,EAAEA,YAAF,KAAmBC,QAAQ,IAAR,CAAzB;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAM,EAAEE,UAAUC,WAAZ,KAA4BH,QAAQ,SAAR,CAAlC;;AAEAI,OAAOC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,OAAjC,EAA0C;AACzD,MAAIC,OAAON,YAAYI,OAAZ,OAAX;;AAEA,QAAMG,SAASD,KAAKE,MAAL,IAAeF,KAAKG,MAApB,MAAf;AACA,QAAMC,iCAAoBH,MAApB,EAA+BD,KAAKK,MAApC,CAAN;AACA,QAAMC,kCAAqBL,MAArB,EAAgCD,KAAKO,OAArC,CAAN;;AAEA,MAAIP,KAAKQ,OAAT,EAAkB;AAChB,UAAMC,eAAeT,KAAKQ,OAAL,CAAaE,GAAb,CAAiBC,eAAenB,KAAKoB,OAAL,CAAab,OAAb,EAAsBY,WAAtB,CAAhC,CAArB;AACAF,iBACGC,GADH,CACOC,eAAerB,aAAaqB,WAAb,CADtB,EAEGD,GAFH,CAEO,CAACZ,OAAD,EAAUe,KAAV,KAAoBhB,eAAeC,OAAf,EAAwBN,KAAKO,OAAL,CAAaU,aAAaI,KAAb,CAAb,CAAxB,CAF3B,EAGGC,OAHH,CAGW,CAAC,CAACC,mBAAD,EAAsBC,oBAAtB,CAAD,KAAiD;AACxD,OACE,EAAEf,QAAQG,YAAV,EAAwBI,SAASO,mBAAjC,EADF,EAEE,EAAEd,QAAQK,aAAV,EAAyBE,SAASQ,oBAAlC,EAFF,EAGEF,OAHF,CAGU,CAAC,EAAEb,MAAF,EAAUO,OAAV,EAAD,KACRS,OAAOC,IAAP,CAAYV,OAAZ,EAAqBM,OAArB,CAA8BK,GAAD,IAAS;AACpC,YAAI,EAAEA,OAAOlB,MAAT,CAAJ,EAAsB;AACpBA,iBAAOkB,GAAP,IAAcX,QAAQW,GAAR,CAAd;AACA;AACD;AACD,YAAIC,MAAMC,OAAN,CAAcpB,OAAOkB,GAAP,CAAd,CAAJ,EAAgC;AAC9BlB,iBAAOkB,GAAP,EAAYG,IAAZ,CAAiBd,QAAQW,GAAR,CAAjB;AACD,SAFD,MAEO,IAAI,OAAOlB,OAAOkB,GAAP,CAAP,KAAuB,QAA3B,EAAqC;AAC1CF,iBAAOM,MAAP,CAActB,OAAOkB,GAAP,CAAd,EAA2BX,QAAQW,GAAR,CAA3B;AACD,SAFM,MAEA;AACL,gBAAM,IAAIK,KAAJ,CAAW,wBAAuBL,GAAI,iBAAgBV,aAAaU,GAAb,CAAkB,EAAxE,CAAN;AACD;AACF,OAZD,CAJF;AAkBD,KAtBH;AAuBD;;AAED,SAAO,CAACf,YAAD,EAAeE,aAAf,CAAP;AACD,CAnCD","file":"loadConfigFile.js","sourcesContent":["const { readFileSync } = require('fs');\nconst path = require('path');\nconst { safeLoad: saveLoadYml } = require('js-yaml');\n\nmodule.exports = function loadConfigFile(content, dirname) {\n  let data = saveLoadYml(content) || {};\n\n  const config = data.shared || data.common || {};\n  const serverConfig = { ...config, ...data.server };\n  const browserConfig = { ...config, ...data.browser };\n\n  if (data.include) {\n    const includePaths = data.include.map(includePath => path.resolve(dirname, includePath));\n    includePaths\n      .map(includePath => readFileSync(includePath))\n      .map((content, index) => loadConfigFile(content, path.dirname(includePaths[index])))\n      .forEach(([includeServerConfig, includeBrowserConfig]) => {\n        [\n          { config: serverConfig, include: includeServerConfig },\n          { config: browserConfig, include: includeBrowserConfig },\n        ].forEach(({ config, include }) => (\n          Object.keys(include).forEach((key) => {\n            if (!(key in config)) {\n              config[key] = include[key];\n              return;\n            }\n            if (Array.isArray(config[key])) {\n              config[key].push(include[key]);\n            } else if (typeof config[key] === 'object') {\n              Object.assign(config[key], include[key]);\n            } else {\n              throw new Error(`Unexpected override \"${key}\", filename = ${includePaths[key]}`);\n            }\n          })\n        ));\n      });\n  }\n\n  return [serverConfig, browserConfig];\n};\n"]}