{"version":3,"sources":["../../src/webpack/createPobpackConfig.js"],"names":["target","production","env","process","NODE_ENV","hmr","includeModules","paths","build","entries","key","path","resolveLoaderModules","join","__dirname","babel","minified","comments","presets","replacements","BROWSER","NODEJS","SERVER","MODERN_BROWSERS","plugins","assert","annotate","modules","useBuiltIns","targets","reverse","filter","Boolean","moduleRules","themeFile","test","loader","require","resolve","options","emitFile","limit","name","outputPath","publicPath","url","replace","filename","evaluate","deadcode","infinity","mangle","numericLiterals","simplify","mergeVars","booleans","regexpConstructors","removeConsole","removeDebugger","removeUndefined","undefinedToVoid","unsafe","flipComparisons","simplifyComparisons","guards","typeConstructors","properties","memberExpressions","propertyLiterals","UglifyJsPlugin","compress","warnings","sourceMap","defines","PRODUCTION"],"mappings":"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","file":"createPobpackConfig.js","sourcesContent":["import path from 'path';\nimport presetPob from 'babel-preset-pob';\nimport presetPobReact from 'babel-preset-pob-react';\nimport presetPobStages from 'babel-preset-pob-stages';\nimport presetEnv from 'babel-preset-env';\nimport { buildPreset as presetModernBrowsers } from 'babel-preset-modern-browsers';\nimport presetBabiliOptimizations from 'babel-preset-babili-optimizations';\nimport pluginDiscardModuleReference from 'babel-plugin-discard-module-references';\nimport pluginFlowRuntime from 'babel-plugin-flow-runtime';\nimport { createModuleRule, createExtractPlugin } from 'ynnub/webpack-config';\nimport ExtractTextPlugin from 'extract-text-webpack-plugin';\nimport BabiliPlugin from 'babili-webpack-plugin';\nimport { optimize } from 'webpack';\nimport autoprefixer from 'autoprefixer';\n\ntype TargetType = 'node' | 'modern-browser' | 'browser';\n\nexport default (target: TargetType, production: boolean = false) => ({\n  env: process.env.NODE_ENV,\n  hmr: !production,\n\n  includeModules: [\n    'ynnub',\n    'react-alp-login',\n  ],\n\n  paths: {\n    build: target === 'node' ? 'build' : 'public',\n  },\n\n  entries: [\n    {\n      // eslint-disable-next-line no-nested-ternary\n      key: target === 'node' ? 'index' : (target === 'browser' ? 'es5' : 'modern-browsers'),\n      path: target === 'node' ? 'index.server.js' : 'index.browser.js',\n\n    },\n  ],\n\n  resolveLoaderModules: [path.join(__dirname, '../..', 'node_modules'), 'node_modules'],\n\n  babel: {\n    minified: target !== 'node' && production,\n    comments: !(target !== 'node' && production),\n\n    // preset order is last to first, so we reverse it for clarity.\n    presets: [\n      // add react preset with jsx\n      [presetPobReact, { production }],\n      // add stage-1 to stage-3 features\n      presetPobStages,\n      // pob preset: flow, import `src`, export default function name, replacements\n      [presetPob, {\n        production,\n        replacements: {\n          BROWSER: target !== 'node',\n          NODEJS: target === 'node',\n          SERVER: target === 'node',\n          MODERN_BROWSERS: target === 'modern-browser',\n        },\n      }],\n      // optimizations: remove dead-code\n      presetBabiliOptimizations,\n      // flow runtime\n      !production && {\n        plugins: [[pluginFlowRuntime, {\n          assert: true,\n          annotate: false,\n        }]],\n      },\n      // discard unused imports (like production-only or node-only imports)\n      { plugins: [pluginDiscardModuleReference] },\n      // transpile for browser\n      target === 'modern-browser' && [presetModernBrowsers, { modules: false }],\n      target === 'browser' && [presetEnv, {\n        modules: false,\n        useBuiltIns: true,\n        targets: [\n          '>1%',\n          'not ie < 9', // react doesn't support ie < 9\n        ],\n      }],\n    ].reverse().filter(Boolean),\n    plugins: [\n    ],\n  },\n\n  moduleRules: [\n    // SCSS RULE\n    createModuleRule(ExtractTextPlugin, {\n      production,\n      themeFile: './src/theme.scss',\n      plugins: [\n        autoprefixer,\n      ],\n    }),\n\n    // IMG RULE\n    {\n      test: /\\.(png|jpg|jpeg|gif|svg)$/,\n      loader: require.resolve('url-loader'),\n      options: {\n        emitFile: target === 'node', // only write file if node\n        limit: 1000,\n        name: 'images/[hash].[ext]',\n        outputPath: '../public/', // because it's node who is writing the file, node is in build/\n        publicPath: url => url.replace(/^..\\/public\\//, ''),\n      },\n    },\n  ],\n\n  plugins: [\n    createExtractPlugin(ExtractTextPlugin, {\n      // disable: target === 'node',\n      filename: `${target === 'browser' ? 'es5' : 'modern-browsers'}.css`,\n    }),\n\n    target !== 'node' && production && new BabiliPlugin({\n      comments: false,\n      evaluate: true, // babel-plugin-minify-constant-folding\n      deadcode: true, // babel-plugin-minify-dead-code-elimination\n      infinity: false, // babel-plugin-minify-infinity\n      mangle: true, // babel-plugin-minify-mangle-names\n      numericLiterals: true, // babel-plugin-minify-numeric-literals\n      replace: false, // babel-plugin-minify-replace\n      simplify: true, // babel-plugin-minify-simplify\n      mergeVars: false, // babel-plugin-transform-merge-sibling-variables\n      booleans: false, // babel-plugin-transform-minify-booleans\n      regexpConstructors: true, // babel-plugin-transform-regexp-constructors\n      removeConsole: false, // babel-plugin-transform-remove-console\n      removeDebugger: true, // babel-plugin-transform-remove-debugger\n      removeUndefined: true, // babel-plugin-transform-remove-undefined\n      undefinedToVoid: false, // babel-plugin-transform-undefined-to-void\n      unsafe: {\n        flipComparisons: true,\n        simplifyComparisons: true,\n        guards: true,\n        typeConstructors: true,\n      },\n      properties: {\n        memberExpressions: true,\n        propertyLiterals: true,\n      },\n    }),\n\n    target === 'browser' && production && new optimize.UglifyJsPlugin({\n      compress: {\n        warnings: false,\n      },\n      sourceMap: !production,\n    }),\n    // TODO https://github.com/NekR/offline-plugin\n  ].filter(Boolean),\n\n  defines: {\n    BROWSER: target !== 'node',\n    SERVER: target === 'node',\n    NODEJS: target === 'node',\n    PRODUCTION: production,\n    MODERN_BROWSERS: target === 'modern-browser',\n  },\n});\n"]}