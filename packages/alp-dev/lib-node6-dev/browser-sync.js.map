{"version":3,"sources":["../src/browser-sync.js"],"names":["argv","require","browserSync","webpack","webpackDevMiddleware","webpackHotMiddleware","webpackConfig","bundler","port","open","ui","notify","online","ghostMode","clicks","forms","scroll","proxy","target","proxyPort","proxyOptions","xfwd","middleware","req","res","next","headers","host","publicPath","output","stats","colors","noInfo","serveStatic","files"],"mappings":";;;;;AAAA;;;;AAIA,MAAMA,OAAOC,QAAQ,eAAR,CAAb;AACA,MAAMC,cAAcD,QAAQ,cAAR,CAApB;AACA,MAAME,UAAUF,QAAQ,SAAR,CAAhB;AACA,MAAMG,uBAAuBH,QAAQ,wBAAR,CAA7B;AACA,MAAMI,uBAAuBJ,QAAQ,wBAAR,CAA7B;;AAEA;;;AAGA,MAAMK,gBAAgBL,QAAQ,mBAAR,CAAtB;;AAEA,MAAMM,UAAUJ,QAAQG,aAAR,CAAhB;;AAEA,MAAME,OAAOR,KAAKQ,IAAL,IAAa,IAA1B;;AAEA;;;kBAGeN,YAAY;AACzB;AACAO,QAAMT,KAAKS,IAFc;AAGzBD,MAHyB;AAIzBE,MAAI,EAAEF,MAAMA,OAAO,CAAf,EAJqB;AAKzBG,UAAQ,YALiB,EAKH;AACtBC,UAAQ,KANiB;;AAQzBC,aAAW;AACTC,YAAQ,KADC;AAETC,WAAO,KAFE;AAGTC,YAAQ;AAHC,GARc;;AAczBC,SAAO;AACLC,YAAS,cAAYlB,KAAKmB,SAAU,GAD/B;AAELC,kBAAc,EAAEC,MAAM,IAAR,EAFT;AAGLC,gBAAY;AACV;AACA,cAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACxB,UAAI,CAACF,IAAIG,OAAJ,CAAY,kBAAZ,CAAL,EAAsC;AACpCH,YAAIG,OAAJ,CAAY,kBAAZ,IAAkCH,IAAIG,OAAJ,CAAYC,IAA9C;AACD;AACDF;AACD,KAPS,EASVrB,qBAAqBG,OAArB,EAA8B;AAC5B;AACA;AACAqB,kBAAYtB,cAAcuB,MAAd,CAAqBD,UAHL;;AAK5B;AACAE,aAAO,EAAEC,QAAQ,IAAV,EANqB;;AAQ5BC,cAAQ;AARoB,KAA9B,CATU;;AAsBV;AACA3B,yBAAqBE,OAArB,CAvBU;AAHP,GAdkB;;AA4CzB0B,yBA5CyB;;AA8CvB;AACA;AACFC;AAhDyB,CAAZ,C","file":"browser-sync.js","sourcesContent":["/**\n * https://github.com/BrowserSync/recipes/blob/master/recipes/webpack.react-hot-loader/app.js\n * Require Browsersync along with webpack and middleware for it\n */\nconst argv = require('minimist-argv');\nconst browserSync = require('browser-sync');\nconst webpack = require('webpack');\nconst webpackDevMiddleware = require('webpack-dev-middleware');\nconst webpackHotMiddleware = require('webpack-hot-middleware');\n\n/**\n * Require ./webpack.config.js and make a bundler from it\n */\nconst webpackConfig = require('../webpack.config');\n\nconst bundler = webpack(webpackConfig);\n\nconst port = argv.port || 3000;\n\n/**\n * Run Browsersync and use middleware for Hot Module Replacement\n */\nexport default browserSync({\n  // options: https://www.browsersync.io/docs/options\n  open: argv.open,\n  port,\n  ui: { port: port + 1 },\n  notify: 'bottomleft', // https://github.com/BrowserSync/browser-sync/issues/685\n  online: false,\n\n  ghostMode: {\n    clicks: false,\n    forms: false,\n    scroll: true,\n  },\n\n  proxy: {\n    target: `localhost:${argv.proxyPort}`,\n    proxyOptions: { xfwd: true },\n    middleware: [\n      // headers\n      function (req, res, next) {\n        if (!req.headers['X-Forwarded-Host']) {\n          req.headers['X-Forwarded-Host'] = req.headers.host;\n        }\n        next();\n      },\n\n      webpackDevMiddleware(bundler, {\n        // IMPORTANT: dev middleware can't access config, so we should\n        // provide publicPath by ourselves\n        publicPath: webpackConfig.output.publicPath,\n\n        // pretty colored output\n        stats: { colors: true },\n\n        noInfo: true,\n        // for other settings see\n        // http://webpack.github.io/docs/webpack-dev-middleware.html\n      }),\n\n      // bundler should be the same as above\n      webpackHotMiddleware(bundler),\n    ],\n  },\n\n  serveStatic: ['public'],\n\n    // no need to watch '*.js' here, webpack will take care of it for us,\n    // including full page reloads if HMR won't work\n  files: [\n    'public/**/*.css',\n  ],\n});\n"]}