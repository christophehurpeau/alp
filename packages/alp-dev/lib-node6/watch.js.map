{"version":3,"sources":["../src/watch.js"],"names":["startBrowserSyncPort","browserSyncStartPort","startPort","Promise","all","resolve","reject","findAPortNotInUse","err","foundPort","then","browserSyncPort","port","require","start","catch","console","log","stack"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,uBAAuB,uBAAKC,oBAAL,IAA6B,IAA1D;AACA,MAAMC,YAAY,uBAAKA,SAAL,IAAkB,IAApC;;AAEAC,QAAQC,GAAR,CAAY,CACV,IAAID,OAAJ,CAAY,CAACE,OAAD,EAAUC,MAAV,KACV,sBAAYC,iBAAZ,CAA8BP,oBAA9B,EAAoDA,uBAAuB,EAA3E,EAA+E,WAA/E,EAA4F,CAACQ,GAAD,EAAMC,SAAN,KAAoB;AAC9G,MAAID,GAAJ,EAAS,OAAOF,OAAOE,GAAP,CAAP;AACTH,UAAQI,SAAR;AACD,CAHD,CADF,CADU,EAOV,IAAIN,OAAJ,CAAY,CAACE,OAAD,EAAUC,MAAV,KACV,sBAAYC,iBAAZ,CAA8BL,SAA9B,EAAyCA,YAAY,EAArD,EAAyD,WAAzD,EAAsE,CAACM,GAAD,EAAMC,SAAN,KAAoB;AACxF,MAAID,GAAJ,EAAS,OAAOF,OAAOE,GAAP,CAAP;AACTH,UAAQI,SAAR;AACD,CAHD,CADF,CAPU,CAAZ,EAaGC,IAbH,CAaQ,CAAC,CAACC,eAAD,EAAkBC,IAAlB,CAAD,KAA6B;AACnC,+BAAW,CACTC,QAAQR,OAAR,CAAgB,gBAAhB,CADS,EAET,QAFS,EAGTM,eAHS,EAIT,aAJS,EAKTC,IALS,CAAX,EAMGE,KANH;;AAQA,SAAO,sBAAYF,IAAZ,CAAP;AACD,CAvBD,EAuBGG,KAvBH,CAuBSP,OAAOQ,QAAQC,GAAR,CAAYT,IAAIU,KAAhB,CAvBhB","file":"watch.js","sourcesContent":["import { node as nodeDaemon } from 'springbokjs-daemon/src';\nimport portscanner from 'portscanner';\nimport argv from 'minimist-argv';\nimport watchServer from './server';\n\nconst startBrowserSyncPort = argv.browserSyncStartPort || 3000;\nconst startPort = argv.startPort || 3050;\n\nPromise.all([\n  new Promise((resolve, reject) => (\n    portscanner.findAPortNotInUse(startBrowserSyncPort, startBrowserSyncPort + 50, '127.0.0.1', (err, foundPort) => {\n      if (err) return reject(err);\n      resolve(foundPort);\n    })\n  )),\n  new Promise((resolve, reject) => (\n    portscanner.findAPortNotInUse(startPort, startPort + 50, '127.0.0.1', (err, foundPort) => {\n      if (err) return reject(err);\n      resolve(foundPort);\n    })\n  )),\n]).then(([browserSyncPort, port]) => {\n  nodeDaemon([\n    require.resolve('./browser-sync'),\n    '--port',\n    browserSyncPort,\n    '--proxyPort',\n    port,\n  ]).start();\n\n  return watchServer(port);\n}).catch(err => console.log(err.stack));\n"]}