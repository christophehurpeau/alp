{"version":3,"sources":["../../src/build/index.js"],"names":["Promise","all","map","path","instance","require","resolve","stdout","pipe","process","then","console","log"],"mappings":";;AAAA;;AACA;;;;AACA;;AACA;;;;AAEA,6BAAU,UAAS,mBAAY,QAAZ,CAAsB,MAAK,mBAAY,OAAZ,CAAqB,IAAnE;;AAEA;AACA;;AAEAA,QAAQC,GAAR,CAAY,kDAIVC,GAJU,CAINC,QAAQ;AACZ,QAAMC,WAAW,qBAAM,MAAN,EAAc,CAACC,QAAQC,OAAR,CAAgBH,IAAhB,CAAD,CAAd,CAAjB;AACAC,WAASG,MAAT,CAAgBC,IAAhB,CAAqBC,QAAQF,MAA7B;AACA,SAAOH,QAAP;AACD,CARW,CAAZ,EAQIM,IARJ,CAQS,MAAM;AACbC,UAAQC,GAAR,CAAY,QAAZ;AACD,CAVD","file":"index.js","sourcesContent":["import { resolve as pathResolve } from 'path';\nimport execa from 'execa';\nimport { execSync } from 'child_process';\nimport { clean, build } from '../config-build';\n\nexecSync(`rm -Rf ${pathResolve('public')}/* ${pathResolve('build')}/*`);\n\nclean();\nbuild();\n\nPromise.all([\n  './node',\n  './modern-browser',\n  './older-browser',\n].map(path => {\n  const instance = execa('node', [require.resolve(path)]);\n  instance.stdout.pipe(process.stdout);\n  return instance;\n})).then(() => {\n  console.log('done !');\n});\n"]}