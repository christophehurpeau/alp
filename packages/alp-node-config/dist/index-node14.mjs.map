{"version":3,"file":"index-node14.mjs","sources":["../src/index.ts"],"sourcesContent":["import { existsSync, readFileSync } from 'fs';\nimport type { NodeApplication, NodeConfig, PackageConfig } from 'alp-types';\nimport deepFreeze from 'deep-freeze-es6';\nimport argv from 'minimist-argv';\nimport parseJSON from 'parse-json-object-as-map';\n\nfunction _existsConfigSync(dirname: string, name: string): boolean {\n  return existsSync(`${dirname}${name}.json`);\n}\n\nfunction _loadConfigSync(dirname: string, name: string): Map<string, unknown> {\n  const content = readFileSync(`${dirname}${name}.json`, 'utf-8');\n  return parseJSON(content) as Map<string, unknown>;\n}\n\nexport interface ConfigOptions {\n  argv?: string[];\n  packageConfig?: PackageConfig;\n  version?: string;\n}\n\nexport class Config {\n  packageConfig?: PackageConfig;\n\n  private _map: Map<string, unknown>;\n\n  private readonly _dirname: string;\n\n  constructor(dirname: string, options?: ConfigOptions) {\n    this._map = new Map<string, unknown>();\n    this._dirname = dirname.replace(/\\/*$/, '/');\n    if (options) {\n      this.loadSync(options);\n    }\n  }\n\n  loadSync(options: ConfigOptions = {}): Config & NodeConfig {\n    const env = process.env.CONFIG_ENV || process.env.NODE_ENV || 'development';\n    const { argv: argvOverrides = [], packageConfig, version } = options;\n    this.packageConfig = packageConfig;\n\n    const config = this.loadConfigSync('common') as Map<string, unknown>;\n    for (const [key, value] of this.loadConfigSync(env)) {\n      config.set(key, value);\n    }\n\n    if (this.existsConfigSync('local')) {\n      for (const [key, value] of this.loadConfigSync('local')) {\n        config.set(key, value);\n      }\n    }\n\n    if (config.has('version')) {\n      throw new Error('Cannot have \"version\", in config.');\n    }\n\n    config.set(\n      'version',\n      String(version || argv.version || packageConfig?.version),\n    );\n\n    const socketPath: string | undefined = (argv.socket ||\n      argv['socket-path'] ||\n      argv.socketPath) as string | undefined;\n    if (socketPath) {\n      config.set('socketPath', socketPath);\n    } else if (argv.port) {\n      config.set('port', argv.port);\n      config.delete('socketPath');\n    } else if (process.env.PORT) {\n      config.set('port', Number(process.env.PORT));\n      config.delete('socketPath');\n    }\n\n    argvOverrides.forEach((key) => {\n      const splitted = key.split('.');\n      const value =\n        splitted.length > 0 &&\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return,unicorn/no-array-reduce, @typescript-eslint/no-shadow\n        splitted.reduce((config, partialKey) => config?.[partialKey], argv);\n      if (value !== undefined) {\n        const last = splitted.pop()!;\n        const map =\n          splitted.length === 0\n            ? config\n            : // eslint-disable-next-line unicorn/no-array-reduce\n              splitted.reduce(\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                (config, partialKey) =>\n                  config.get(partialKey) as Map<string, unknown>,\n                config,\n              );\n        map.set(last, value);\n      }\n    });\n\n    this._map = deepFreeze(config);\n    return this as Config & NodeConfig;\n  }\n\n  get<T>(key: string): T {\n    return this._map.get(key) as T;\n  }\n\n  existsConfigSync(name: string): boolean {\n    return _existsConfigSync(this._dirname, name);\n  }\n\n  loadConfigSync(name: string): ReadonlyMap<string, unknown> {\n    return _loadConfigSync(this._dirname, name);\n  }\n}\n\nexport default function getConfig(\n  app: NodeApplication,\n  config: Config & NodeConfig,\n): Config & NodeConfig {\n  return config;\n}\n"],"names":["_existsConfigSync","dirname","name","existsSync","_loadConfigSync","content","readFileSync","parseJSON","Config","constructor","options","_map","Map","_dirname","replace","loadSync","env","process","CONFIG_ENV","NODE_ENV","argv","argvOverrides","packageConfig","version","config","loadConfigSync","key","value","set","existsConfigSync","has","Error","String","socketPath","socket","port","delete","PORT","Number","forEach","splitted","split","length","reduce","partialKey","undefined","last","pop","map","get","deepFreeze","getConfig","app"],"mappings":";;;;;AAMA,SAASA,iBAAT,CAA2BC,OAA3B,EAA4CC,IAA5C,EAAmE;EACjE,OAAOC,UAAU,CAAE,GAAEF,OAAQ,GAAEC,IAAK,OAAnB,CAAjB;AACD;;AAED,SAASE,eAAT,CAAyBH,OAAzB,EAA0CC,IAA1C,EAA8E;EAC5E,MAAMG,OAAO,GAAGC,YAAY,CAAE,GAAEL,OAAQ,GAAEC,IAAK,OAAnB,EAA2B,OAA3B,CAA5B;EACA,OAAOK,SAAS,CAACF,OAAD,CAAhB;AACD;;AAQM,MAAMG,MAAN,CAAa;EAOlBC,WAAW,CAACR,OAAD,EAAkBS,OAAlB,EAA2C;IACpD,KAAKC,IAAL,GAAY,IAAIC,GAAJ,EAAZ;IACA,KAAKC,QAAL,GAAgBZ,OAAO,CAACa,OAAR,CAAgB,MAAhB,EAAwB,GAAxB,CAAhB;;IACA,IAAIJ,OAAJ,EAAa;MACX,KAAKK,QAAL,CAAcL,OAAd;;;;EAIJK,QAAQ,CAACL,OAAsB,GAAG,EAA1B,EAAmD;IACzD,MAAMM,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,UAAZ,IAA0BD,OAAO,CAACD,GAAR,CAAYG,QAAtC,IAAkD,aAA9D;IACA,MAAM;MAAEC,IAAI,EAAEC,aAAa,GAAG,EAAxB;MAA4BC,aAA5B;MAA2CC;QAAYb,OAA7D;IACA,KAAKY,aAAL,GAAqBA,aAArB;IAEA,MAAME,MAAM,GAAG,KAAKC,cAAL,CAAoB,QAApB,CAAf;;IACA,KAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2B,KAAKF,cAAL,CAAoBT,GAApB,CAA3B,EAAqD;MACnDQ,MAAM,CAACI,GAAP,CAAWF,GAAX,EAAgBC,KAAhB;;;IAGF,IAAI,KAAKE,gBAAL,CAAsB,OAAtB,CAAJ,EAAoC;MAClC,KAAK,MAAM,CAACH,GAAD,EAAMC,KAAN,CAAX,IAA2B,KAAKF,cAAL,CAAoB,OAApB,CAA3B,EAAyD;QACvDD,MAAM,CAACI,GAAP,CAAWF,GAAX,EAAgBC,KAAhB;;;;IAIJ,IAAIH,MAAM,CAACM,GAAP,CAAW,SAAX,CAAJ,EAA2B;MACzB,MAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;;;IAGFP,MAAM,CAACI,GAAP,CACE,SADF,EAEEI,MAAM,CAACT,OAAO,IAAIH,IAAI,CAACG,OAAhB,IAA2BD,aAAa,EAAEC,OAA3C,CAFR;IAKA,MAAMU,UAA8B,GAAIb,IAAI,CAACc,MAAL,IACtCd,IAAI,CAAC,aAAD,CADkC,IAEtCA,IAAI,CAACa,UAFP;;IAGA,IAAIA,UAAJ,EAAgB;MACdT,MAAM,CAACI,GAAP,CAAW,YAAX,EAAyBK,UAAzB;KADF,MAEO,IAAIb,IAAI,CAACe,IAAT,EAAe;MACpBX,MAAM,CAACI,GAAP,CAAW,MAAX,EAAmBR,IAAI,CAACe,IAAxB;MACAX,MAAM,CAACY,MAAP,CAAc,YAAd;KAFK,MAGA,IAAInB,OAAO,CAACD,GAAR,CAAYqB,IAAhB,EAAsB;MAC3Bb,MAAM,CAACI,GAAP,CAAW,MAAX,EAAmBU,MAAM,CAACrB,OAAO,CAACD,GAAR,CAAYqB,IAAb,CAAzB;MACAb,MAAM,CAACY,MAAP,CAAc,YAAd;;;IAGFf,aAAa,CAACkB,OAAd,CAAuBb,GAAD,IAAS;MAC7B,MAAMc,QAAQ,GAAGd,GAAG,CAACe,KAAJ,CAAU,GAAV,CAAjB;MACA,MAAMd,KAAK,GACTa,QAAQ,CAACE,MAAT,GAAkB,CAAlB;MAEAF,QAAQ,CAACG,MAAT,CAAgB,CAACnB,MAAD,EAASoB,UAAT,KAAwBpB,MAAM,GAAGoB,UAAH,CAA9C,EAA8DxB,IAA9D,CAHF;;MAIA,IAAIO,KAAK,KAAKkB,SAAd,EAAyB;QACvB,MAAMC,IAAI,GAAGN,QAAQ,CAACO,GAAT,EAAb;QACA,MAAMC,GAAG,GACPR,QAAQ,CAACE,MAAT,KAAoB,CAApB,GACIlB,MADJ;QAGIgB,QAAQ,CAACG,MAAT;QAEE,CAACnB,MAAD,EAASoB,UAAT,KACEpB,MAAM,CAACyB,GAAP,CAAWL,UAAX,CAHJ,EAIEpB,MAJF,CAJN;QAUAwB,GAAG,CAACpB,GAAJ,CAAQkB,IAAR,EAAcnB,KAAd;;KAlBJ;IAsBA,KAAKhB,IAAL,GAAYuC,UAAU,CAAC1B,MAAD,CAAtB;IACA,OAAO,IAAP;;;EAGFyB,GAAG,CAAIvB,GAAJ,EAAoB;IACrB,OAAO,KAAKf,IAAL,CAAUsC,GAAV,CAAcvB,GAAd,CAAP;;;EAGFG,gBAAgB,CAAC3B,IAAD,EAAwB;IACtC,OAAOF,iBAAiB,CAAC,KAAKa,QAAN,EAAgBX,IAAhB,CAAxB;;;EAGFuB,cAAc,CAACvB,IAAD,EAA6C;IACzD,OAAOE,eAAe,CAAC,KAAKS,QAAN,EAAgBX,IAAhB,CAAtB;;;AAxFgB;AA4FL,SAASiD,SAAT,CACbC,GADa,EAEb5B,MAFa,EAGQ;EACrB,OAAOA,MAAP;AACD;;;;"}