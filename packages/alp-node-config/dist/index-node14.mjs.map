{"version":3,"file":"index-node14.mjs","sources":["../src/index.ts"],"sourcesContent":["import { existsSync, readFileSync } from 'fs';\nimport type { NodeApplication, NodeConfig, PackageConfig } from 'alp-types';\nimport deepFreeze from 'deep-freeze-es6';\nimport argv from 'minimist-argv';\nimport parseJSON from 'parse-json-object-as-map';\n\nfunction _existsConfigSync(dirname: string, name: string): boolean {\n  return existsSync(`${dirname}${name}.json`);\n}\n\nfunction _loadConfigSync(dirname: string, name: string): Map<string, unknown> {\n  const content = readFileSync(`${dirname}${name}.json`, 'utf-8');\n  return parseJSON(content) as Map<string, unknown>;\n}\n\nexport interface ConfigOptions {\n  argv?: string[];\n  packageConfig?: PackageConfig;\n  version?: string;\n}\n\nexport class Config {\n  packageConfig?: PackageConfig;\n\n  private _map: Map<string, unknown>;\n\n  private readonly _dirname: string;\n\n  constructor(dirname: string, options?: ConfigOptions) {\n    this._map = new Map<string, unknown>();\n    this._dirname = dirname.replace(/\\/*$/, '/');\n    if (options) {\n      this.loadSync(options);\n    }\n  }\n\n  loadSync(options: ConfigOptions = {}): Config & NodeConfig {\n    const env = process.env.CONFIG_ENV || process.env.NODE_ENV || 'development';\n    const { argv: argvOverrides = [], packageConfig, version } = options;\n    this.packageConfig = packageConfig;\n\n    const config = this.loadConfigSync('common') as Map<string, unknown>;\n    for (const [key, value] of this.loadConfigSync(env)) {\n      config.set(key, value);\n    }\n\n    if (this.existsConfigSync('local')) {\n      for (const [key, value] of this.loadConfigSync('local')) {\n        config.set(key, value);\n      }\n    }\n\n    if (config.has('version')) {\n      throw new Error('Cannot have \"version\", in config.');\n    }\n\n    config.set(\n      'version',\n      String(version || argv.version || packageConfig?.version),\n    );\n\n    const socketPath: string | undefined = (argv.socket ||\n      argv['socket-path'] ||\n      argv.socketPath) as string | undefined;\n    if (socketPath) {\n      config.set('socketPath', socketPath);\n    } else if (argv.port) {\n      config.set('port', argv.port);\n      config.delete('socketPath');\n    } else if (process.env.PORT) {\n      config.set('port', Number(process.env.PORT));\n      config.delete('socketPath');\n    }\n\n    argvOverrides.forEach((key) => {\n      const splitted = key.split('.');\n      const value =\n        splitted.length > 0 &&\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return,unicorn/no-array-reduce, @typescript-eslint/no-shadow\n        splitted.reduce((config, partialKey) => config?.[partialKey], argv);\n      if (value !== undefined) {\n        const last = splitted.pop()!;\n        const map =\n          splitted.length === 0\n            ? config\n            : // eslint-disable-next-line unicorn/no-array-reduce\n              splitted.reduce(\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                (config, partialKey) =>\n                  config.get(partialKey) as Map<string, unknown>,\n                config,\n              );\n        map.set(last, value);\n      }\n    });\n\n    this._map = deepFreeze(config);\n    return this as Config & NodeConfig;\n  }\n\n  get<T>(key: string): T {\n    return this._map.get(key) as T;\n  }\n\n  existsConfigSync(name: string): boolean {\n    return _existsConfigSync(this._dirname, name);\n  }\n\n  loadConfigSync(name: string): ReadonlyMap<string, unknown> {\n    return _loadConfigSync(this._dirname, name);\n  }\n}\n\nexport default function getConfig(\n  app: NodeApplication,\n  config: Config & NodeConfig,\n): Config & NodeConfig {\n  return config;\n}\n"],"names":["_existsConfigSync","dirname","name","existsSync","_loadConfigSync","content","readFileSync","parseJSON","Config","constructor","options","_map","Map","_dirname","replace","loadSync","env","process","CONFIG_ENV","NODE_ENV","argv","argvOverrides","packageConfig","version","config","loadConfigSync","key","value","set","existsConfigSync","has","Error","String","socketPath","socket","port","delete","PORT","Number","forEach","splitted","split","length","reduce","partialKey","undefined","last","pop","map","get","deepFreeze","getConfig","app"],"mappings":"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"}