{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { deprecate } from 'util';\nimport Koa from 'koa';\nimport compress from 'koa-compress';\nimport serve from 'koa-static';\nimport config from 'alp-config';\nimport errors from 'alp-errors-node';\nimport params from 'alp-params';\nimport language from 'alp-language';\nimport translate from 'alp-translate';\nimport _listen from 'alp-listen';\nimport migrations from 'alp-migrations';\nimport Logger from 'nightingale-logger';\n\nexport { Config } from 'alp-config';\nexport { default as newController } from 'alp-controller';\nexport { MigrationsManager } from 'alp-migrations';\n\nconst logger = new Logger('alp');\n\nexport default class Alp extends Koa {\n  dirname: string;\n  packageDirname: string;\n  browserStateTransformers: Array<Function>;\n  config;\n\n  /**\n   * @param {Object} [options]\n   * @param {string} [options.srcDirname] directory of the application\n   * @param {Config} [options.config] alp-config object\n   * @param {string} [options.packageDirname] deprecated, directory of the package\n   * @param {Array} [options.argv] deprecated, list of overridable config by argv\n   */\n  constructor(options = {}) {\n    super();\n    if (!options.packageDirname) options.packageDirname = process.cwd();\n    if (!options.srcDirname) options.srcDirname = `${options.packageDirname}/lib`;\n\n    this.dirname = options.srcDirname;\n    Object.defineProperty(this, 'packageDirname', {\n      get: deprecate(() => options.packageDirname, 'packageDirname'),\n      configurable: false,\n      enumerable: false,\n    });\n\n\n    if (!options.config) {\n      deprecate(() => () => null, 'Alp options: missing options.config')();\n      // eslint-disable-next-line\n      const packageConfig = require(`${options.packageDirname}/package.json`);\n      config(`${this.dirname}/config`, { packageConfig, argv: options.argv })(this);\n    } else {\n      config()(this, options.config);\n    }\n\n    params(this);\n    language(this);\n    translate('locales')(this);\n\n    this.use(compress());\n\n    this.browserStateTransformers = [];\n    this.browserContextTransformers = [\n      (initialBrowserContext, context) => {\n        initialBrowserContext.state = Object.create(null);\n        this.browserStateTransformers.forEach(transformer => (\n          transformer(initialBrowserContext.state, context)\n        ));\n      },\n    ];\n\n    this.context.computeInitialContextForBrowser = function () {\n      const initialBrowserContext = Object.create(null);\n\n      this.app.browserContextTransformers.forEach(transformer => (\n        transformer(initialBrowserContext, this)\n      ));\n\n      return initialBrowserContext;\n    };\n  }\n\n  registerBrowserContextTransformer(transformer: Function) {\n    this.browserContextTransformers.push(transformer);\n  }\n\n  registerBrowserStateTransformer(transformer: Function) {\n    this.browserStateTransformers.push(transformer);\n  }\n\n  registerBrowserStateTransformers(transformer) {\n    deprecate(() => () => null, 'breaking: use registerBrowserStateTransformer instead')();\n    this.browserStateTransformers.push(transformer);\n  }\n\n  migrate(migrationsManager) {\n    return migrations({\n      config: this.config,\n      dirname: this.dirname,\n      migrationsManager,\n    });\n  }\n\n  get environment() {\n    deprecate(() => () => null, 'app.environment, use app.env instead')();\n    return this.env;\n  }\n\n  get production() {\n    deprecate(() => () => null, 'app.production, use global.PRODUCTION instead')();\n    return this.env === 'prod' || this.env === 'production';\n  }\n  servePublic() {\n    this.use(serve(`${this.packageDirname}/public/`)); // static files\n  }\n\n  catchErrors() {\n    this.use(errors);\n  }\n\n  listen() {\n    return _listen(`${this.packageDirname}/config/cert`)(this)\n      .catch(err => {\n        logger.error(err);\n        throw err;\n      });\n  }\n}\n"]}