{"version":3,"sources":["views/IndexView.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAKM,SAAS,qBAAf,MAAM,SAAS,gBALC,SAAS,CAKS;;AAU9B,UAAM,GAAG;cACG,IAAI,GAAK,IAAI,CAAC,KAAK,CAAnB,IAAI;;AACZ,cAAM,KAAK,GAAG,QAAQ,GAAG,IAAI,CAAC;AAC9B,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7B,eAAQ,0DAAO,IAAI,EAAE,IAAI,AAAC,EAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,AAAC,GAAS,CAAE;KAC7E;;AAED,WAAO,CAAC,IAAI,EAAE;AACV,cAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC;AACrD,gBAAQ,CAAC,UArBR,OAAO,EAqBS,IAAI,CAAC,CAAC,CAAC;KAC3B;;AAED,qBAAiB,GAAG;AAChB,cAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;AACzC,aAAK,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,GAAG,MAAM;AACxC,kBAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;;AAE/B,kBAAM,WAAW,GAAG,IAAI,eAAe,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/G,gBAAI,CAAC,KAAK,CAAC,IAAI,EAAE;AACb,2BAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAC9B,MAAM;AACH,2BAAW,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;aACvC;;AAED,kBAAM,WAAW,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;AAC3C,gBAAI,WAAW,KAAK,QAAQ,CAAC,KAAK,EAAE;AAChC,uBAAO,CAAC,YAAY,CAChB,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,EACpB,QAAQ,CAAC,KAAK,EACd,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA,AAAC,CAAC,IAAI,GAAG,CAAA,IAC1D,WAAW,IAAI,GAAG,GAAG,WAAW,CAAA,AAAC,CAC3C,CAAC;aACL;SACJ,CAAC,CAAC;KACN;;AAED,wBAAoB,GAAG;AACnB,cAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;AACzC,YAAI,IAAI,CAAC,cAAc,EAAE;AACrB,iBAAK,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC1C;KACJ;CACJ,SAnDU,YAAY,GAAG;AAClB,YAAQ,EAAE,OAPS,SAAS,CAOR,IAAI,CAAC,UAAU;AACnC,WAAO,EAAE,OARU,SAAS,CAQT,MAAM,CAAC,UAAU;CACvC,SAEM,SAAS,GAAG;AACf,QAAI,EAAE,OAZa,SAAS,CAYZ,MAAM;CACzB;kBA8CU,gBA1DN,OAAO,EA0DO,AAAC,KAAK,KAAM;AAC/B,QAAI,EAAE,KAAK,CAAC,IAAI;CACnB,CAAC,CAAC,CAAC,SAAS,CAAC","file":"views/IndexView.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Hello from './components/HelloComponent';\nimport { setName } from '../actions/name'\n\nclass IndexView extends Component {\n    static contextTypes = {\n        setTitle: PropTypes.func.isRequired,\n        context: PropTypes.object.isRequired,\n    };\n\n    static propTypes = {\n        name: PropTypes.string,\n    };\n\n    render() {\n        const { name } = this.props;\n        const title = 'Hello ' + name;\n        this.context.setTitle(title);\n        return (<Hello name={name} setName={name => this.setName(name)}></Hello>);\n    }\n\n    setName(name) {\n        const dispatch = this.context.context.store.dispatch;\n        dispatch(setName(name));\n    }\n\n    componentDidMount() {\n        const store = this.context.context.store;\n        store.subscribe(this._storeListener = () => {\n            const state = store.getState();\n\n            const queryParams = new URLSearchParams(!location.search.length ? location.search : location.search.substr(1));\n            if (!state.name) {\n                queryParams.delete('name');\n            } else {\n                queryParams.set('name', state.name);\n            }\n\n            const queryString = queryParams.toString();\n            if (queryString !== location.query) {\n                history.replaceState(\n                    { name: state.name },\n                    document.title,\n                    (location.pathname.slice(0, -(location.search.length - 1)) || '/')\n                        + (queryString && '?' + queryString)\n                );\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        const store = this.context.context.store;\n        if (this._storeListener) {\n            store.unsubscribe(this._storeListener);\n        }\n    }\n}\n\nexport default connect((state) => ({\n    name: state.name,\n}))(IndexView);\n"],"sourceRoot":"/"}