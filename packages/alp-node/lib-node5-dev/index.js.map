{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { deprecate } from 'util';\nimport Koa from 'koa';\nimport compress from 'koa-compress';\nimport serve from 'koa-static';\nimport config from 'alp-config';\nimport errors from 'alp-errors-node';\nimport params from 'alp-params-node';\nimport language from 'alp-language';\nimport translate from 'alp-translate';\nimport router from 'alp-limosa';\nimport _listen from 'alp-listen';\nimport Logger from 'nightingale-logger';\n\nexport { Config } from 'alp-config';\nexport { default as newController } from 'alp-controller';\n\nconst logger = new Logger('alp');\n\nexport default class Alp extends Koa {\n    dirname: string;\n    packageDirname: string;\n    browserStateTransformers: Array<Function>;\n\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.srcDirname] directory of the application\n     * @param {Config} [options.config] alp-config object\n     * @param {string} [options.packageDirname] deprecated, directory of the package (where package.json is)\n     * @param {Array} [options.argv] deprecated, list of overridable config by argv\n     */\n    constructor(options = {}) {\n        super();\n        if (!options.packageDirname) options.packageDirname = process.cwd();\n        if (!options.srcDirname) options.srcDirname = `${options.packageDirname}/lib`;\n\n        this.dirname = options.srcDirname;\n        Object.defineProperty(this, 'packageDirname', {\n            get: deprecate(() => options.packageDirname, 'packageDirname'),\n            configurable: false,\n            enumerable: false,\n        });\n\n\n        if (!options.config) {\n            deprecate(() => () => null, 'Alp options: missing options.config')();\n            // eslint-disable-next-line\n            const packageConfig = require(`${options.packageDirname}/package.json`);\n            config(`${this.dirname}/config`, { packageConfig, argv: options.argv })(this);\n        } else {\n            config()(this, options.config);\n        }\n\n        params(this);\n        language(this);\n        translate('locales')(this);\n        this.use(compress());\n\n        this.browserStateTransformers = [];\n        this.context.computeInitialStateForBrowser = function () {\n            const initialBrowserState = Object.create(null);\n            this.app.browserStateTransformers.forEach(transformer => transformer(initialBrowserState, this));\n            return initialBrowserState;\n        };\n    }\n\n    registerBrowserStateTransformers(transformer) {\n        this.browserStateTransformers.push(transformer);\n    }\n\n    get environment() {\n        deprecate(() => () => null, 'app.environment, use app.env instead')();\n        return this.env;\n    }\n\n    get production() {\n        deprecate(() => () => null, 'app.production, use global.PRODUCTION instead')();\n        return this.env === 'prod' || this.env === 'production';\n    }\n\n    createRouter(routerBuilder, controllers) {\n        return router(routerBuilder, controllers)(this);\n    }\n\n    servePublic() {\n        this.use(serve(`${this.packageDirname}/public/`)); // static files\n    }\n\n    catchErrors() {\n        this.use(errors);\n    }\n\n    useRouter(routerBuilder, controllers) {\n        // eslint-disable-next-line global-require\n        routerBuilder = routerBuilder || require(`${this.dirname}/routerBuilder`);\n        // eslint-disable-next-line global-require\n        controllers = controllers || require(`${this.dirname}/controllers`);\n        this.use(this.createRouter(routerBuilder, controllers));\n    }\n\n    listen() {\n        return _listen(`${this.packageDirname}/config/cert`)(this)\n            .catch(err => {\n                logger.error(err);\n                throw err;\n            });\n    }\n}\n"]}