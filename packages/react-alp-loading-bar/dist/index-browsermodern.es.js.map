{"version":3,"file":"index-browsermodern.es.js","sources":["../src/index.tsx"],"sourcesContent":["import type { ReactElement } from 'react';\nimport { PureComponent } from 'react';\nimport ReactAlpContext from 'react-alp-context';\n\n/*\nExample with antd:\nimport { Progress } from 'antd';\n\nconst LoadingBarComponent = ({ progress }) => (\n  <Progress\n    type=\"line\"\n    status=\"active\"\n    percent={progress}\n    showInfo={false}\n  />\n);\n*/\n\n/* number between 0 and 1 */\nconst random = (): number => Math.ceil(Math.random() * 100) / 100;\n\n/**\n * around:\n * at 100ms 20%\n * at 1s 40%\n * at 2s 60%\n * at 3s 80%\n */\nconst calculatePercent = (percent: number): number => {\n  if (percent < 60) return percent + random() * 10 + 5;\n  if (percent < 70) return percent + random() * 10 + 3;\n  else if (percent < 80) return percent + random() + 5;\n  else if (percent < 90) return percent + random() + 1;\n  else if (percent < 95) return percent + 0.1;\n  else return percent;\n};\n\ninterface LoadingBarProps {\n  LoadingBarComponent: React.ComponentType<{ progress: number }>;\n}\n\ninterface LoadingBarState {\n  loading: boolean;\n  hidden: boolean;\n  progress: number;\n}\n\ninterface WebsocketInterface {\n  isConnected: () => boolean;\n  on: (event: 'connect' | 'disconnect', callback: () => unknown) => void;\n}\n\nexport default class LoadingBar extends PureComponent<\n  LoadingBarProps,\n  LoadingBarState\n> {\n  static contextType = ReactAlpContext;\n\n  state = {\n    loading: true,\n    hidden: true,\n    progress: 1,\n  };\n\n  fadeOffTimeout?: ReturnType<typeof setTimeout>;\n\n  resetTimeout?: ReturnType<typeof setTimeout>;\n\n  first20Timeout?: ReturnType<typeof setTimeout>;\n\n  progressTimer?: ReturnType<typeof setTimeout>;\n\n  componentDidMount(): void {\n    const websocket = this.getWebsocket();\n    if (websocket.isConnected()) {\n      this.setState((prevState) => ({\n        loading: false,\n        progress: 100,\n        hidden: prevState.hidden || prevState.progress === 100,\n      }));\n    }\n    websocket.on('connect', () => {\n      this.setState({ loading: false });\n    });\n    websocket.on('disconnect', () => {\n      this.setState({ loading: true, progress: 1, hidden: false });\n    });\n  }\n\n  componentDidUpdate(\n    prevProps: LoadingBarProps,\n    prevState: LoadingBarState,\n  ): void {\n    if (this.state.loading !== prevState.loading) {\n      if (this.state.loading) {\n        this.showBar();\n      } else {\n        this.hideBar();\n      }\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.fadeOffTimeout) clearTimeout(this.fadeOffTimeout);\n    if (this.resetTimeout) clearTimeout(this.resetTimeout);\n    if (this.first20Timeout) clearTimeout(this.first20Timeout);\n    if (this.progressTimer) clearInterval(this.progressTimer);\n  }\n\n  getWebsocket(): WebsocketInterface {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-return\n    return (this.context as any).app.websocket;\n  }\n\n  private showBar(): void {\n    if (this.fadeOffTimeout) clearTimeout(this.fadeOffTimeout);\n    if (this.resetTimeout) clearTimeout(this.resetTimeout);\n\n    this.first20Timeout = setTimeout(() => {\n      this.setState({ progress: 20 });\n    }, 100);\n\n    this.progressTimer = setInterval(() => {\n      this.setState((prevState) => {\n        const newValue = calculatePercent(prevState.progress);\n        return { progress: newValue };\n      });\n    }, 500);\n  }\n\n  private hideBar(): void {\n    if (this.first20Timeout) clearTimeout(this.first20Timeout);\n    if (this.progressTimer) clearInterval(this.progressTimer);\n\n    this.fadeOffTimeout = setTimeout(() => {\n      this.setState({\n        progress: 100,\n      });\n    }, 500);\n\n    this.resetTimeout = setTimeout(() => {\n      this.setState({\n        hidden: true,\n        progress: 1,\n      });\n    }, 1000);\n  }\n\n  render(): ReactElement {\n    const LoadingBarComponent = this.props.LoadingBarComponent;\n\n    return (\n      <div\n        hidden={this.state.hidden}\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 4,\n          pointerEvents: 'none',\n        }}\n      >\n        <LoadingBarComponent progress={this.state.progress} />\n      </div>\n    );\n  }\n}\n"],"names":["random","Math","ceil","calculatePercent","percent","LoadingBar","PureComponent","contextType","ReactAlpContext","state","loading","hidden","progress","componentDidMount","websocket","getWebsocket","isConnected","setState","prevState","on","componentDidUpdate","prevProps","showBar","hideBar","componentWillUnmount","fadeOffTimeout","clearTimeout","resetTimeout","first20Timeout","progressTimer","clearInterval","context","app","setTimeout","setInterval","newValue","render","LoadingBarComponent","props","_jsx","position","top","left","right","zIndex","pointerEvents"],"mappings":"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"}