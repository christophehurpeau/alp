{"version":3,"file":"index-browser-dev.es.js","sources":["../src/index.ts"],"sourcesContent":["import { PRODUCTION } from 'pob-babel';\nimport config, { getConfig, existsConfig } from 'alp-browser-config';\nimport language from 'alp-browser-language';\nimport translate from 'alp-translate/browser';\nimport type {\n  BrowserApplication as BrowserApplicationType,\n  BrowserApplicationInCreation,\n  BaseContext as AlpBaseContext,\n  Context as AlpContext,\n  Config,\n  ContextState,\n  RawConfig,\n} from 'alp-types';\nimport Ibex from 'ibex';\nimport Logger from 'nightingale-logger';\n\nexport type BrowserApplication = BrowserApplicationType;\n\nconst logger = new Logger('alp');\n\ndeclare global {\n  interface Window {\n    __VERSION__: string;\n  }\n}\n\ninterface Options {\n  version?: string; // default to window.__VERSION__\n}\n\ndeclare module 'ibex' {\n  interface BaseContext extends AlpBaseContext {}\n  interface DefaultState extends ContextState {}\n  interface Context extends AlpContext {}\n}\n\nconst configPath = '/config';\n\nexport default class AlpBrowser\n  extends Ibex\n  implements BrowserApplicationInCreation {\n  path: string;\n\n  appVersion: string;\n\n  constructor(path = '/', { version = window.__VERSION__ }: Options = {}) {\n    super();\n    this.path = path;\n    this.appVersion = version;\n  }\n\n  config?: Config | undefined;\n\n  async init(): Promise<BrowserApplication> {\n    const configInstance = await config(\n      this,\n      PRODUCTION ? `/${this.appVersion}${configPath}` : configPath,\n    );\n    this.context.config = configInstance;\n\n    language(this);\n    await translate('/locales')(this);\n\n    return (this as unknown) as BrowserApplication;\n  }\n\n  async existsConfig(name: string): Promise<boolean> {\n    return existsConfig(`${configPath}${name}`);\n  }\n\n  loadConfig(name: string): Promise<RawConfig> {\n    return getConfig(`${configPath}${name}`);\n  }\n\n  start(fn: () => Promise<void>): void {\n    try {\n      fn()\n        .then(() => logger.success('started'))\n        .catch((err: unknown) => logger.error('start fail', { err }));\n    } catch (err: unknown) {\n      logger.error('start fail', { err });\n    }\n  }\n}\n\nexport const startApp = (\n  callback: (app: BrowserApplication) => unknown,\n): void => {\n  const app = new AlpBrowser();\n\n  return app.start(async () => {\n    // init\n    const browserApp = await app.init();\n    await callback(browserApp);\n  });\n};\n"],"names":["logger","Logger","configPath","AlpBrowser","path","version","window","__VERSION__","appVersion","init","config","configInstance","context","language","translate","existsConfig","name","loadConfig","getConfig","start","fn","then","success","catch","err","error","Ibex","startApp","callback","app","browserApp"],"mappings":";;;;;;;;;AAkBA,IAAMA,MAAM,GAAG,IAAIC,MAAJ,CAAW,KAAX,CAAf;AAkBA,IAAMC,UAAU,GAAG,SAAnB;;IAEqBC;;;AAOnB,sBAAYC,IAAZ,SAAwE;AAAA;;AAAA,QAA5DA,IAA4D;AAA5DA,MAAAA,IAA4D,GAArD,GAAqD;AAAA;;AAAA,kCAAJ,EAAI;AAAA,4BAA9CC,OAA8C;AAAA,QAA9CA,OAA8C,6BAApCC,MAAM,CAACC,WAA6B;;AACtE;AACA,UAAKH,IAAL,GAAYA,IAAZ;AACA,UAAKI,UAAL,GAAkBH,OAAlB;AAHsE;AAIvE;;;;SAIKI;yEAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC+BC,MAAM,CACjC,IADiC,EAEiBR,UAFjB,CADrC;;AAAA;AACQS,cAAAA,cADR;AAKE,mBAAKC,OAAL,CAAaF,MAAb,GAAsBC,cAAtB;AAEAE,cAAAA,QAAQ,CAAC,IAAD,CAAR;AAPF;AAAA,qBAQQC,SAAS,CAAC,UAAD,CAAT,CAAsB,IAAtB,CARR;;AAAA;AAAA,+CAUU,IAVV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;SAaMC;kFAAN,kBAAmBC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gDACSD,YAAY,CAAE,GAAEb,UAAW,GAAEc,IAAK,EAAtB,CADrB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;SAIAC,aAAA,oBAAWD,IAAX,EAA6C;AAC3C,WAAOE,SAAS,CAAE,GAAEhB,UAAW,GAAEc,IAAK,EAAtB,CAAhB;AACD;;SAEDG,QAAA,eAAMC,EAAN,EAAqC;AACnC,QAAI;AACFA,MAAAA,EAAE,GACCC,IADH,CACQ;AAAA,eAAMrB,MAAM,CAACsB,OAAP,CAAe,SAAf,CAAN;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAAkBxB,MAAM,CAACyB,KAAP,CAAa,YAAb,EAA2B;AAAED,UAAAA;AAAF,SAA3B,CAAlB;AAAA,OAFT;AAGD,KAJD,CAIE,OAAOA,GAAP,EAAqB;AACrBxB,MAAAA,MAAM,CAACyB,KAAP,CAAa,YAAb,EAA2B;AAAED,QAAAA;AAAF,OAA3B;AACD;AACF;;;EA3COE;IA8CGC,QAAQ,GAAG,SAAXA,QAAW,CACtBC,QADsB,EAEb;AACT,MAAMC,GAAG,GAAG,IAAI1B,UAAJ,EAAZ;AAEA,SAAO0B,GAAG,CAACV,KAAJ,wEAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUU,GAAG,CAACpB,IAAJ,EAFV;;AAAA;AAETqB,YAAAA,UAFS;AAAA;AAAA,mBAGTF,QAAQ,CAACE,UAAD,CAHC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV,GAAP;AAKD;;;;;"}