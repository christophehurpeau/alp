{"version":3,"file":"index-browser.es.js","sources":["../src/index.ts"],"sourcesContent":["import { PRODUCTION } from 'pob-babel';\nimport config, { getConfig, existsConfig } from 'alp-browser-config';\nimport language from 'alp-browser-language';\nimport translate from 'alp-translate/browser';\nimport type {\n  BrowserApplication as BrowserApplicationType,\n  BrowserApplicationInCreation,\n  BaseContext as AlpBaseContext,\n  Context as AlpContext,\n  Config,\n  ContextState,\n  RawConfig,\n} from 'alp-types';\nimport Ibex from 'ibex';\nimport Logger from 'nightingale-logger';\n\nexport type BrowserApplication = BrowserApplicationType;\n\nconst logger = new Logger('alp');\n\ndeclare global {\n  interface Window {\n    __VERSION__: string;\n  }\n}\n\ninterface Options {\n  version?: string; // default to window.__VERSION__\n}\n\ndeclare module 'ibex' {\n  interface BaseContext extends AlpBaseContext {}\n  interface DefaultState extends ContextState {}\n  interface Context extends AlpContext {}\n}\n\nconst configPath = '/config';\n\nexport default class AlpBrowser\n  extends Ibex\n  implements BrowserApplicationInCreation {\n  path: string;\n\n  appVersion: string;\n\n  constructor(path = '/', { version = window.__VERSION__ }: Options = {}) {\n    super();\n    this.path = path;\n    this.appVersion = version;\n  }\n\n  config?: Config | undefined;\n\n  async init(): Promise<BrowserApplication> {\n    const configInstance = await config(\n      this,\n      PRODUCTION ? `/${this.appVersion}${configPath}` : configPath,\n    );\n    this.context.config = configInstance;\n\n    language(this);\n    await translate('/locales')(this);\n\n    return (this as unknown) as BrowserApplication;\n  }\n\n  async existsConfig(name: string): Promise<boolean> {\n    return existsConfig(`${configPath}${name}`);\n  }\n\n  loadConfig(name: string): Promise<RawConfig> {\n    return getConfig(`${configPath}${name}`);\n  }\n\n  start(fn: () => Promise<void>): void {\n    try {\n      fn()\n        .then(() => logger.success('started'))\n        .catch((err: unknown) => logger.error('start fail', { err }));\n    } catch (err: unknown) {\n      logger.error('start fail', { err });\n    }\n  }\n}\n\nexport const startApp = (\n  callback: (app: BrowserApplication) => unknown,\n): void => {\n  const app = new AlpBrowser();\n\n  return app.start(async () => {\n    // init\n    const browserApp = await app.init();\n    await callback(browserApp);\n  });\n};\n"],"names":["logger","Logger","configPath","AlpBrowser","Ibex","constructor","path","version","window","__VERSION__","appVersion","init","config","configInstance","context","language","translate","existsConfig","name","loadConfig","getConfig","start","fn","then","success","catch","err","error","startApp","callback","app","browserApp"],"mappings":";;;;;;;;AAkBA,MAAMA,MAAM,GAAG,IAAIC,MAAJ,CAAW,KAAX,CAAf;AAkBA,MAAMC,UAAU,GAAG,SAAnB;AAEe,MAAMC,UAAN,SACLC,IADK,CAE2B;AAKxCC,EAAAA,WAAW,CAACC,IAAI,GAAG,GAAR,EAAa;AAAEC,IAAAA,OAAO,GAAGC,MAAM,CAACC;AAAnB,MAA4C,EAAzD,EAA6D;AACtE;AACA,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKI,UAAL,GAAkBH,OAAlB;AACD;;AAIKI,EAAAA,IAAN,GAA0C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACXC,MAAM,CACjC,KADiC,EAEnB,IAAG,KAAI,CAACF,UAAW,GAAER,UAAW,EAFb,CADK;;AAAA;AAClCW,YAAAA,cADkC;AAKxC,YAAA,KAAI,CAACC,OAAL,CAAaF,MAAb,GAAsBC,cAAtB;AAEAE,YAAAA,QAAQ,CAAC,KAAD,CAAR;AAPwC;AAAA,mBAQlCC,SAAS,CAAC,UAAD,CAAT,CAAsB,KAAtB,CARkC;;AAAA;AAAA,6CAUhC,KAVgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWzC;;AAEKC,EAAAA,YAAN,CAAmBC,IAAnB,EAAmD;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC1CD,YAAY,CAAE,GAAEf,UAAW,GAAEgB,IAAK,EAAtB,CAD8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElD;;AAEDC,EAAAA,UAAU,CAACD,IAAD,EAAmC;AAC3C,WAAOE,SAAS,CAAE,GAAElB,UAAW,GAAEgB,IAAK,EAAtB,CAAhB;AACD;;AAEDG,EAAAA,KAAK,CAACC,EAAD,EAAgC;AACnC,QAAI;AACFA,MAAAA,EAAE,GACCC,IADH,CACQ,MAAMvB,MAAM,CAACwB,OAAP,CAAe,SAAf,CADd,EAEGC,KAFH,CAEUC,GAAD,IAAkB1B,MAAM,CAAC2B,KAAP,CAAa,YAAb,EAA2B;AAAED,QAAAA;AAAF,OAA3B,CAF3B;AAGD,KAJD,CAIE,OAAOA,GAAP,EAAqB;AACrB1B,MAAAA,MAAM,CAAC2B,KAAP,CAAa,YAAb,EAA2B;AAAED,QAAAA;AAAF,OAA3B;AACD;AACF;;AA1CuC;MA6C7BE,QAAQ,GACnBC,QADsB,IAEb;AACT,QAAMC,GAAG,GAAG,IAAI3B,UAAJ,EAAZ;AAEA,SAAO2B,GAAG,CAACT,KAAJ,wEAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEUS,GAAG,CAACnB,IAAJ,EAFV;;AAAA;AAEToB,UAAAA,UAFS;AAAA;AAAA,iBAGTF,QAAQ,CAACE,UAAD,CAHC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV,GAAP;AAKD;;;;;"}