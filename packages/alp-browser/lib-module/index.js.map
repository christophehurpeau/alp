{"version":3,"sources":["../src/index.js"],"names":["Ibex","config","language","translate","Logger","Config","logger","AlpBrowser","path","version","window","VERSION","appVersion","fn","then","success","catch","error","err","env"],"mappings":";;;;;;;;;;AAAA;AACA,OAAOA,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;;AAEA,SAASC,MAAT;;AAEA,IAAMC,SAAS,IAAIF,MAAJ,CAAW,KAAX,CAAf;;IAMqBG,U;;;AAInB,wBAAwE;AAAA,QAA5DC,IAA4D,uEAArD,GAAqD;;AAAA;AAAA,4BAA9CC,OAA8C;AAAA,QAA9CA,OAA8C,gCAApCC,OAAOC,OAA6B;;AAAA;;AAAA;;AAEtE,UAAKH,IAAL,GAAYA,IAAZ;AACA,UAAKI,UAAL,GAAkBF,OAAOC,OAAzB;AAHsE;AAIvE;;;;;;;;;;;uBAGOV,OAAO,SAAP,EAAkB,IAAlB,C;;;AACNC,yBAAS,IAAT;;uBACMC,UAAU,UAAV,EAAsB,IAAtB,C;;;;;;;;;;;;;;;;0BAOFU,E,EAAc;AAClBA,WAAKC,IAAL,CAAU;AAAA,eAAMR,OAAOS,OAAP,CAAe,SAAf,CAAN;AAAA,OAAV,EAA2CC,KAA3C,CAAiD;AAAA,eAAOV,OAAOW,KAAP,CAAa,YAAb,EAA2B,EAAEC,QAAF,EAA3B,CAAP;AAAA,OAAjD;AACD;;;wBANiB;AAChB,aAAO,KAAKC,GAAZ;AACD;;;;EAlBqCnB,I;;SAAnBO,U","file":"index.js","sourcesContent":["/* global window */\nimport Ibex from 'ibex/src';\nimport config from 'alp-config/src';\nimport language from 'alp-language/src';\nimport translate from 'alp-translate/src';\nimport Logger from 'nightingale-logger/src';\n\nexport { Config } from 'alp-config/src';\n\nconst logger = new Logger('alp');\n\ntype OptionsType = {\n  version: ?string, // default to window.VERSION\n};\n\nexport default class AlpBrowser extends Ibex {\n  path: string;\n  appVersion: string;\n\n  constructor(path = '/', { version = window.VERSION }: OptionsType = {}) {\n    super();\n    this.path = path;\n    this.appVersion = window.VERSION;\n  }\n\n  async init() {\n    await config('/config')(this);\n    language(this);\n    await translate('/locales')(this);\n  }\n\n  get environment() {\n    return this.env;\n  }\n\n  start(fn: Function) {\n    fn().then(() => logger.success('started')).catch(err => logger.error('start fail', { err }));\n  }\n}\n"]}