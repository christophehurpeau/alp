{"version":3,"sources":["../src/index.js"],"names":["Ibex","config","errors","params","language","translate","contentLoaded","init","initWebApp","redirect","Logger","Config","default","newController","logger","AlpBrowser","constructor","path","version","window","VERSION","appVersion","global","initialBrowserContext","context","state","environment","env","catchErrors","use","initialRender","moduleDescriptor","data","Object","create","assign","then","render","on","load","url","start","fn","success","catch","error","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,QAAQC,UAAjB,EAA6BC,QAA7B;AACA,OAAOC,MAAP;;;AAEA,SAASC,MAAT;AACA,SAASC,WAAWC,aAApB;;AAEA,MAAMC,SAAS,IAAIJ,MAAJ,CAAW,KAAX,CAAf;;AAEA,0CAAmB,SACjB,sBAAS,WAAC,UAAD,CAAT,CADiB,CAAnB;IAIqBK,U,sBACf,U,sBACM,U,aAFG,cAAyBf,IAAzB,CAA8B;;AAI3CgB,cAAYC,OAAO,GAAnB,EAAwB,SAAxB,EAAwE;AAAA,QAAhD,EAAEC,UAAUC,OAAOC,OAAnB,EAAgD,GAApB,WAAoB;;AACtE;;AADsE;;AAAA;;AAEtE,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKI,UAAL,GAAkBF,OAAOC,OAAzB;;AAEA,QAAIE,OAAOC,qBAAX,EAAkC;AAChC,WAAKC,OAAL,CAAaC,KAAb,GAAqBH,OAAOC,qBAAP,CAA6BE,KAAlD;AACD;AACF;;AAEKlB,MAAN,GAAa;AAAA;;AAAA;AACX,YAAMN,OAAO,SAAP,QAAN;AACAE;AACAC;AACA,YAAMC,UAAU,UAAV,QAAN;AAJW;AAKZ;;AAED,MAAIqB,WAAJ,GAAkB;AAChB,WAAO,KAAKC,GAAZ;AACD;;AAEDC,gBAAc;AACZ,SAAKC,GAAL,CAAS3B,MAAT;AACD;;AAED4B,gBAAcC,gBAAd,EAAgCC,IAAhC,EAAsC;AAAA;;AACpC,UAAMR,UAAUS,OAAOC,MAAP,CAAc,KAAKV,OAAnB,CAAhB;AACAS,WAAOE,MAAP,CAAcX,OAAd,EAAuBF,OAAOC,qBAA9B;AACA,WAAOC,QAAQC,KAAf;;AAEA,WAAOnB,gBACJ8B,IADI,CACC;AAAA,aACJZ,QAAQa,MAAR,CAAeN,gBAAf,EAAiCC,IAAjC,EAAuC,IAAvC,CADI;AAAA,KADD,EAGFI,IAHE,CAGG,YAAM;AACZ,aAAKE,EAAL,CAAQ,UAAR,EAAoB7B,QAApB;AACAD,iBAAW;AAAA,eAAO,OAAK+B,IAAL,CAAUC,GAAV,CAAP;AAAA,OAAX;AACD,KANI,CAAP;AAOD;;AAEDC,QAAMC,EAAN,EAAoB;AAAA,kBAAZ,YAAY;;AAAA;;AAClBA,SACGN,IADH,CACQ;AAAA,aAAMtB,OAAO6B,OAAP,CAAe,SAAf,CAAN;AAAA,KADR,EAEGC,KAFH,CAES;AAAA,aAAO9B,OAAO+B,KAAP,CAAa,YAAb,EAA2B,EAAEC,GAAF,EAA3B,CAAP;AAAA,KAFT;AAGD;AA/C0C,C;;;;;;;SAAxB/B,U","file":"index.js","sourcesContent":["/* global window */\nimport Ibex from 'ibex/src';\nimport config from 'alp-config/src';\nimport errors from 'alp-errors-browser/src';\nimport params from 'alp-params/src';\nimport language from 'alp-language/src';\nimport translate from 'alp-translate/src';\nimport contentLoaded from 'content-loaded';\nimport { init as initWebApp, redirect } from 'alauda/src/web-app';\nimport Logger from 'nightingale-logger/src';\n\nexport { Config } from 'alp-config/src';\nexport { default as newController } from 'alp-controller/src';\n\nconst logger = new Logger('alp');\n\ntype OptionsType = {\n  version: ?string, // default to window.VERSION\n};\n\nexport default class AlpBrowser extends Ibex {\n  path: string;\n  appVersion: string;\n\n  constructor(path = '/', { version = window.VERSION }: OptionsType = {}) {\n    super();\n    this.path = path;\n    this.appVersion = window.VERSION;\n\n    if (global.initialBrowserContext) {\n      this.context.state = global.initialBrowserContext.state;\n    }\n  }\n\n  async init() {\n    await config('/config')(this);\n    params(this);\n    language(this);\n    await translate('/locales')(this);\n  }\n\n  get environment() {\n    return this.env;\n  }\n\n  catchErrors() {\n    this.use(errors);\n  }\n\n  initialRender(moduleDescriptor, data) {\n    const context = Object.create(this.context);\n    Object.assign(context, global.initialBrowserContext);\n    delete context.state;\n\n    return contentLoaded()\n      .then(() => (\n        context.render(moduleDescriptor, data, true)\n      )).then(() => {\n        this.on('redirect', redirect);\n        initWebApp(url => this.load(url));\n      });\n  }\n\n  start(fn: Function) {\n    fn()\n      .then(() => logger.success('started'))\n      .catch(err => logger.error('start fail', { err }));\n  }\n}\n"]}