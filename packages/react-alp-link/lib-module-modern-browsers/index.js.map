{"version":3,"sources":["../src/index.jsx"],"names":["PropTypes","LinkComponent","context","ctx","as","Type","to","params","children","props","urlGenerator","contextTypes","shape","func"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAgBA,MAAMC,gBAAgB,SAAhBA,aAAgB,OAEpB,EAAEC,SAASC,GAAX,EAFoB,EAGjB;AAAA,MAFH,EAAEC,IAAIC,OAAO,GAAb,EAAkBC,KAAK,SAAvB,EAAkCC,MAAlC,EAA0CC,QAA1C,EAEG;AAAA,MAFoDC,KAEpD;;AAEH,SAAO;AAAC,QAAD;AAAA,eAAM,MAAMN,IAAIO,YAAJ,CAAiBJ,EAAjB,EAAqBC,MAArB,CAAZ,IAA8CE,KAA9C;AAAsDD;AAAtD,GAAP;AACD,CAND;;AAQAP,cAAcU,YAAd,GAA6B;AAC3BT,WAASF,UAAUY,KAAV,CAAgB;AACvBF,kBAAcV,UAAUa;AADD,GAAhB;AADkB,CAA7B;;AAMA,eAAeZ,aAAf","file":"index.jsx","sourcesContent":["import { PropTypes } from 'react';\nimport type { TagNameOrReactComponentType } from 'alp-react-redux/src/types';\n\ntype PropsType = {\n  as: ?TagNameOrReactComponentType,\n  to: string,\n  params: ?Object,\n  children: ?any,\n};\n\ntype ContextType = {\n  context: {\n    urlGenerator: Function,\n  },\n};\n\nconst LinkComponent = (\n  { as: Type = 'a', to = 'default', params, children, ...props }: PropsType,\n  { context: ctx }: ContextType,\n) => {\n  if (!PRODUCTION && props.tagName) throw new Error('`tagName` is deprecated, use `as` instead');\n  return <Type href={ctx.urlGenerator(to, params)} {...props}>{children}</Type>;\n};\n\nLinkComponent.contextTypes = {\n  context: PropTypes.shape({\n    urlGenerator: PropTypes.func,\n  }),\n};\n\nexport default LinkComponent;\n"]}