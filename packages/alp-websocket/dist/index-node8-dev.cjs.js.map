{"version":3,"file":"index-node8-dev.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable no-use-before-define */\nimport { chmodSync, readFileSync, unlinkSync } from 'fs';\nimport socketio, { Server, Socket } from 'socket.io';\nimport Logger from 'nightingale-logger';\nimport { NodeApplication, NodeConfig } from 'alp-types';\n\ninterface NodeApplicationWithWebsocket extends NodeApplication {\n  websocket: Server;\n}\n\nconst logger = new Logger('alp:websocket');\n\nlet io: Server;\n\nfunction start(config: NodeConfig, dirname: string) {\n  if (io) {\n    throw new Error('Already started');\n  }\n\n  const webSocketConfig = config.get('webSocket') || config.get('websocket');\n\n  if (!webSocketConfig) {\n    throw new Error('Missing config webSocket');\n  }\n\n  if (!webSocketConfig.has('port') && !webSocketConfig.has('socketPath')) {\n    throw new Error('Missing config webSocket.port');\n  }\n\n  const secure = webSocketConfig.get('secure');\n  const socketPath = webSocketConfig.get('socketPath');\n  const port = webSocketConfig.get('port');\n  const hostname = webSocketConfig.get('hostname');\n  // eslint-disable-next-line global-require, import/no-dynamic-require\n  const createServer = require(secure ? 'https' : 'http').createServer;\n\n  const server = (() => {\n    if (!secure) {\n      return createServer();\n    }\n\n    return createServer({\n      key: readFileSync(`${dirname}/server.key`),\n      cert: readFileSync(`${dirname}/server.crt`),\n    });\n  })();\n\n  logger.info('Creating server', socketPath ? { socketPath } : { port });\n\n  return new Promise((resolve) => {\n    if (socketPath) {\n      try {\n        unlinkSync(socketPath);\n      } catch (err) {}\n\n      server.listen(socketPath, () => {\n        if (socketPath) {\n          chmodSync(socketPath, '777');\n        }\n\n        logger.info('Server listening', { socketPath });\n        resolve(io);\n      });\n    } else {\n      server.listen(port, hostname, () => {\n        logger.info('Server listening', { port });\n        resolve(io);\n      });\n    }\n\n    server.on('error', (err: Error) => logger.error(err));\n    io = socketio(server);\n\n    io.on('connection', (socket) => {\n      logger.debug('connected', { id: socket.id });\n      socket.emit('hello', { version: config.get('version') });\n\n      socket.on('error', (err) => logger.error(err));\n      socket.on('disconnect', () => {\n        logger.debug('disconnected', { id: socket.id });\n      });\n    });\n\n    io.on('error', (err: Error) => logger.error(err));\n  });\n}\n\nexport function close() {\n  io.close();\n}\n\n/**\n * @param {Koa|AlpNodeApp} app\n * @param {string} [dirname] for tls, dirname of server.key server.crt. If undefined: app.certPath\n */\nexport default function alpWebsocket(app: NodeApplication, dirname?: string) {\n  // @ts-ignore\n  start(app.config, dirname || app.certPath);\n\n  const appWithWebsocket: NodeApplicationWithWebsocket = Object.assign(app, {\n    websocket: io,\n  });\n\n  app.on('close', close);\n  return appWithWebsocket;\n}\n\nexport function subscribe(\n  socket: Socket,\n  name: string,\n  callbackOnSubscribe: () => void,\n  callbackOnUnsubscribe: () => void,\n) {\n  const diconnect = callbackOnUnsubscribe && (() => callbackOnUnsubscribe());\n  socket.on(`subscribe:${name}`, (callback) => {\n    logger.info('join', { name });\n    socket.join(name);\n\n    if (callbackOnSubscribe) {\n      callback(null, callbackOnSubscribe());\n    } else {\n      callback(null);\n    }\n\n    if (diconnect) socket.on('disconnect', diconnect);\n  });\n\n  socket.on(`unsubscribe:${name}`, (callback) => {\n    logger.info('leave', { name });\n    socket.leave(name);\n    if (diconnect) socket.removeListener('disconnect', diconnect);\n\n    if (callbackOnUnsubscribe) {\n      callback(null, callbackOnUnsubscribe());\n    } else {\n      callback(null);\n    }\n  });\n}\n"],"names":["logger","Logger","io","start","config","dirname","Error","webSocketConfig","get","has","secure","socketPath","port","hostname","createServer","require","server","key","readFileSync","cert","info","Promise","resolve","unlinkSync","err","listen","chmodSync","on","error","socketio","socket","debug","id","emit","version","close","alpWebsocket","app","certPath","appWithWebsocket","Object","assign","websocket","subscribe","name","callbackOnSubscribe","callbackOnUnsubscribe","diconnect","callback","join","leave","removeListener"],"mappings":"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"}