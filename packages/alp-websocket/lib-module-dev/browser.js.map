{"version":3,"sources":["../src/browser.js"],"names":["socketio","Logger","logger","socket","successfulConnection","connected","websocket","on","off","emit","isConnected","isDisconnected","WEBSOCKET_ONLINE_STATE_ACTION_TYPE","alpWebsocket","app","namespaceName","alpReducers","state","action","type","start","config","context","Error","webSocketConfig","get","has","secure","port","location","hostname","reconnectionDelay","reconnectionDelayMax","timeout","transports","success","store","dispatch","warn","version","window","VERSION","process","env","NODE_ENV","confirm","t","reload","console","serverVersion","clientVersion","args","debug","Promise","resolve","reject","resolved","setTimeout","error","result","clearTimeout","handler"],"mappings":"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","file":"browser.js","sourcesContent":["/* eslint-disable no-use-before-define */\nimport socketio from 'socket.io-client';\nimport Logger from 'nightingale-logger/src';\n\nconst logger = new Logger('alp:websocket');\nlet socket;\nlet successfulConnection = false;\nlet connected = false;\n\nexport const websocket = {\n  get connected() { return connected; },\n  on,\n  off,\n  emit,\n  isConnected,\n  isDisconnected,\n};\n\nconst WEBSOCKET_ONLINE_STATE_ACTION_TYPE = 'alp:websocket/online';\n\nexport default function alpWebsocket(app, namespaceName) {\n  if (!app.alpReducers) app.alpReducers = {}; // TODO remove in next major\n  app.alpReducers.websocket = (state, action) => {\n    if (!state) state = connected ? 'connected' : 'disconnected';\n    if (action.type === WEBSOCKET_ONLINE_STATE_ACTION_TYPE) return action.state;\n    return state;\n  };\n\n  start(app, namespaceName);\n  app.websocket = websocket;\n  websocket.socket = socket;\n  return socket;\n}\n\nfunction start(app, namespaceName = '') {\n  const { config, context } = app;\n\n  if (socket) {\n    throw new Error('WebSocket already started');\n  }\n\n  const webSocketConfig = config.get('webSocket') || config.get('websocket');\n\n  if (!webSocketConfig) {\n    throw new Error('Missing config webSocket');\n  }\n\n  if (!webSocketConfig.has('port')) {\n    throw new Error('Missing config webSocket.port');\n  }\n\n  const secure = webSocketConfig.get('secure');\n  const port = webSocketConfig.get('port');\n\n  socket = socketio(`http${secure ? 's' : ''}://${location.hostname}:${port}/${namespaceName}`, {\n    reconnectionDelay: 500,\n    reconnectionDelayMax: 2500,\n    timeout: 4000,\n    transports: ['websocket'],\n  });\n\n  socket.on('connect', () => {\n    logger.success('connected');\n    successfulConnection = true;\n    connected = true;\n    if (app.store) {\n      app.store.dispatch({ type: WEBSOCKET_ONLINE_STATE_ACTION_TYPE, state: 'connected' });\n    }\n  });\n\n  socket.on('reconnect', () => {\n    logger.success('reconnected');\n    connected = true;\n    if (app.store) {\n      app.store.dispatch({ type: WEBSOCKET_ONLINE_STATE_ACTION_TYPE, state: 'connected' });\n    }\n  });\n\n  socket.on('disconnect', () => {\n    logger.warn('disconnected');\n    connected = false;\n    if (app.store) {\n      app.store.dispatch({ type: WEBSOCKET_ONLINE_STATE_ACTION_TYPE, state: 'disconnected' });\n    }\n  });\n\n  socket.on('hello', ({ version }) => {\n    if (version !== window.VERSION) {\n      // eslint-disable-next-line no-alert\n      if (process.env.NODE_ENV === 'production' && confirm(context.t('newversion'))) {\n        return location.reload(true);\n      } else {\n        console.warn('Version mismatch', { serverVersion: version, clientVersion: window.VERSION });\n      }\n    }\n  });\n\n  return socket;\n}\n\nfunction emit(...args): Promise<any> {\n  logger.debug('emit', { args });\n  return new Promise((resolve, reject) => {\n    const resolved = setTimeout(() => {\n      logger.warn('websocket emit timeout', { args });\n      reject(new Error('websocket response timeout'));\n    }, 10000);\n\n    socket.emit(...args, (error, result) => {\n      clearTimeout(resolved);\n      if (error != null) return reject(typeof error === 'string' ? new Error(error) : error);\n      resolve(result);\n    });\n  });\n}\n\nfunction on(type, handler) {\n  socket.on(type, handler);\n  return handler;\n}\n\nfunction off(type, handler) {\n  socket.off(type, handler);\n}\n\n\nfunction isConnected() {\n  // socket.connected is not updated after reconnect event\n  return socket && connected;\n}\n\nfunction isDisconnected() {\n  return successfulConnection && !isConnected();\n}\n"]}