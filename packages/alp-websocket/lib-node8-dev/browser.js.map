{"version":3,"sources":["../src/browser.js"],"names":["alpWebsocket","logger","socket","successfulConnection","connected","websocket","on","off","emit","isConnected","isDisconnected","REDUX_INIT_TYPE","WEBSOCKET_STATE_ACTION_TYPE","app","namespaceName","reduxReducers","state","action","type","setTimeout","store","dispatch","reduxMiddlewares","push","start","config","context","Error","webSocketConfig","get","has","secure","port","location","hostname","reconnectionDelay","reconnectionDelayMax","timeout","transports","callbackFirstConnectionError","success","warn","version","window","VERSION","process","env","NODE_ENV","confirm","t","reload","console","serverVersion","clientVersion","debug","args","Promise","resolve","reject","resolved","error","result","clearTimeout","handler"],"mappings":"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","file":"browser.js","sourcesContent":["/* eslint-disable no-use-before-define */\nimport socketio from 'socket.io-client';\nimport Logger from 'nightingale-logger/src';\nimport reduxMiddleware from './redux/middleware';\n\nconst logger = new Logger('alp:websocket');\n\nlet socket;\nlet successfulConnection = null;\nlet connected = false;\n\nexport const websocket = {\n  get connected() {\n    return connected;\n  },\n  on,\n  off,\n  emit,\n  isConnected,\n  isDisconnected,\n};\n\nconst REDUX_INIT_TYPE = '@@INIT';\nconst WEBSOCKET_STATE_ACTION_TYPE = 'alp:websocket/state';\n\nexport default function alpWebsocket(app, namespaceName) {\n  app.reduxReducers.websocket = (state = 'disconnected', action) => {\n    if (action.type === WEBSOCKET_STATE_ACTION_TYPE) return action.state;\n    if (action.type === REDUX_INIT_TYPE) {\n      setTimeout(() => {\n        if (successfulConnection !== false) {\n          app.store.dispatch({\n            type: WEBSOCKET_STATE_ACTION_TYPE,\n            state: connected ? 'connected' : 'connecting',\n          });\n        }\n      });\n      return state;\n    }\n    return state;\n  };\n\n  app.reduxMiddlewares.push(reduxMiddleware(app));\n\n  start(app, namespaceName);\n  app.websocket = websocket;\n  websocket.socket = socket;\n  return socket;\n}\n\nfunction start(app, namespaceName = '') {\n  const { config, context } = app;\n\n  if (socket) {\n    throw new Error('WebSocket already started');\n  }\n\n  const webSocketConfig = config.get('webSocket') || config.get('websocket');\n\n  if (!webSocketConfig) {\n    throw new Error('Missing config webSocket');\n  }\n\n  if (!webSocketConfig.has('port')) {\n    throw new Error('Missing config webSocket.port');\n  }\n\n  const secure = webSocketConfig.get('secure');\n  const port = webSocketConfig.get('port');\n\n  socket = socketio(`http${secure ? 's' : ''}://${location.hostname}:${port}/${namespaceName}`, {\n    reconnectionDelay: 500,\n    reconnectionDelayMax: 2500,\n    timeout: 4000,\n    transports: ['websocket'],\n  });\n\n  const callbackFirstConnectionError = () => (successfulConnection = false);\n\n  socket.on('connect_error', callbackFirstConnectionError);\n\n  socket.on('connect', () => {\n    socket.off('connect_error', callbackFirstConnectionError);\n    logger.success('connected');\n    successfulConnection = true;\n    connected = true;\n    if (app.store) {\n      app.store.dispatch({ type: WEBSOCKET_STATE_ACTION_TYPE, state: 'connected' });\n    }\n  });\n\n  socket.on('reconnect', () => {\n    logger.success('reconnected');\n    connected = true;\n    app.store.dispatch({ type: WEBSOCKET_STATE_ACTION_TYPE, state: 'connected' });\n  });\n\n  socket.on('disconnect', () => {\n    logger.warn('disconnected');\n    connected = false;\n    app.store.dispatch({ type: WEBSOCKET_STATE_ACTION_TYPE, state: 'disconnected' });\n  });\n\n  socket.on('hello', ({ version }) => {\n    if (version !== window.VERSION) {\n      // eslint-disable-next-line no-alert\n      if (process.env.NODE_ENV === 'production' && confirm(context.t('newversion'))) {\n        return location.reload(true);\n      } else {\n        console.warn('Version mismatch', { serverVersion: version, clientVersion: window.VERSION });\n      }\n    }\n  });\n\n  socket.on('redux:action', action => {\n    logger.debug('dispatch action from websocket', action);\n    app.store.dispatch(action);\n  });\n\n  return socket;\n}\n\nfunction emit(...args): Promise<any> {\n  logger.debug('emit', { args });\n  return new Promise((resolve, reject) => {\n    const resolved = setTimeout(() => {\n      logger.warn('websocket emit timeout', { args });\n      reject(new Error('websocket response timeout'));\n    }, 10000);\n\n    socket.emit(...args, (error, result) => {\n      clearTimeout(resolved);\n      if (error != null) return reject(typeof error === 'string' ? new Error(error) : error);\n      resolve(result);\n    });\n  });\n}\n\nfunction on(type, handler) {\n  socket.on(type, handler);\n  return handler;\n}\n\nfunction off(type, handler) {\n  socket.off(type, handler);\n}\n\nfunction isConnected() {\n  // socket.connected is not updated after reconnect event\n  return socket && connected;\n}\n\nfunction isDisconnected() {\n  return successfulConnection && !isConnected();\n}\n"]}