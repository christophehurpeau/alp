{"version":3,"sources":["../../src/browser.js"],"names":[],"mappings":";;;;;kBAMwB;;AANxB;;;;AACA;;;;;;;;AAEA,IAAM,SAAS,+BAAkB,eAAlB,EAAmC,sBAAS,IAAT,CAA5C;AACN,IAAI,eAAJ;;;;;EAEe,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACtC,UAAM,IAAI,MAAJ,CAAN,CADsC;AAEtC,QAAI,SAAJ,GAAgB;AACZ,sBADY;AAEZ,cAFY;AAGZ,gBAHY;AAIZ,kBAJY;KAAhB,CAFsC;;AAStC,WAAO,MAAP,CATsC;CAA3B;;;;;EAYf,SAAS,KAAT,CAAe,MAAf,EAAuB;AACnB,QAAI,MAAJ,EAAY;AACR,cAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN,CADQ;KAAZ;;AAIA,QAAM,kBAAkB,OAAO,GAAP,CAAW,WAAX,CAAlB,CALa;;AAOnB,QAAI,CAAC,eAAD,EAAkB;AAClB,cAAM,IAAI,KAAJ,CAAU,0BAAV,CAAN,CADkB;KAAtB;;AAIA,QAAI,CAAC,gBAAgB,GAAhB,CAAoB,MAApB,CAAD,EAA8B;AAC9B,cAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN,CAD8B;KAAlC;;AAIA,QAAM,SAAS,gBAAgB,GAAhB,CAAoB,QAApB,CAAT,CAfa;AAgBnB,QAAM,OAAO,gBAAgB,GAAhB,CAAoB,MAApB,CAAP,CAhBa;;AAkBnB,aAAS,gCAAgB,SAAS,GAAT,GAAe,EAAf,YAAuB,SAAS,QAAT,SAAqB,UAA5D,EAAqE;AAC1E,2BAAmB,GAAnB;AACA,8BAAsB,IAAtB;AACA,iBAAS,IAAT;AACA,oBAAY,CAAC,WAAD,CAAZ;KAJK,CAAT,CAlBmB;;AAyBnB,WAAO,EAAP,CAAU,SAAV,EAAqB,YAAM;AACvB,eAAO,OAAP,CAAe,WAAf,EADuB;KAAN,CAArB,CAzBmB;;AA6BnB,WAAO,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC1B,eAAO,IAAP,CAAY,cAAZ,EAD0B;KAAN,CAAxB,CA7BmB;;AAiCnB,WAAO,EAAP,CAAU,OAAV,EAAmB,gBAAiB;YAAd,uBAAc;;AAChC,YAAI,YAAY,OAAO,OAAP,EAAgB;AAC5B,mBAAO,SAAS,MAAT,CAAgB,IAAhB,CAAP,CAD4B;SAAhC;KADe,CAAnB,CAjCmB;;AAuCnB,WAAO,MAAP,CAvCmB;CAAvB;;;;;EA0CA,SAAS,IAAT,GAAuB;;;sCAAN;;KAAM;;AACnB,WAAO,KAAP,CAAa,MAAb,EAAqB,EAAE,UAAF,EAArB,EADmB;AAEnB,WAAO,mBAAO,IAAP,gBAAe,IAAf,CAAP,CAFmB;CAAvB;;;;;;EAKA,SAAS,EAAT,CAAY,IAAZ,EAAkB,OAAlB,EAA2B;AACvB,WAAO,EAAP,CAAU,IAAV,EAAgB,OAAhB,EADuB;AAEvB,WAAO,OAAP,CAFuB;CAA3B;;;;;;EAKA,SAAS,GAAT,CAAa,IAAb,EAAmB,OAAnB,EAA4B;AACxB,WAAO,GAAP,CAAW,IAAX,EAAiB,OAAjB,EADwB;CAA5B","file":"browser.js","sourcesContent":["import socketio from 'socket.io-client';\nimport { ConsoleLogger, LogLevel } from 'nightingale';\n\nconst logger = new ConsoleLogger('alp-websocket', LogLevel.INFO);\nlet socket;\n\nexport default function alpWebsocket(app) {\n    start(app.config);\n    app.websocket = {\n        socket,\n        on,\n        off,\n        emit,\n    };\n\n    return socket;\n}\n\nfunction start(config) {\n    if (socket) {\n        throw new Error('WebSocket already started');\n    }\n\n    const webSocketConfig = config.get('webSocket');\n\n    if (!webSocketConfig) {\n        throw new Error('Missing config webSocket');\n    }\n\n    if (!webSocketConfig.has('port')) {\n        throw new Error('Missing config webSocket.port');\n    }\n\n    const secure = webSocketConfig.get('secure');\n    const port = webSocketConfig.get('port');\n\n    socket = socketio(`http${secure ? 's' : ''}://${location.hostname}:${port}/`, {\n        reconnectionDelay: 500,\n        reconnectionDelayMax: 1000,\n        timeout: 4000,\n        transports: ['websocket'],\n    });\n\n    socket.on('connect', () => {\n        logger.success('connected');\n    });\n\n    socket.on('disconnect', () => {\n        logger.warn('disconnected');\n    });\n\n    socket.on('hello', ({ version }) => {\n        if (version !== window.VERSION) {\n            return location.reload(true);\n        }\n    });\n\n    return socket;\n}\n\nfunction emit(...args) {\n    logger.debug('emit', { args });\n    return socket.emit(...args);\n}\n\nfunction on(type, handler) {\n    socket.on(type, handler);\n    return handler;\n}\n\nfunction off(type, handler) {\n    socket.off(type, handler);\n}\n"]}