{"version":3,"sources":["../../src/browser.js"],"names":[],"mappings":";;;;;kBAMwB,Y;;AANxB;;;;AACA;;;;;;;;;;AAEA,IAAM,SAAS,gCAAW,eAAX,CAAf;AACA,IAAI,eAAJ;;;;;;EAEe,SAAS,YAAT,CAAsB,GAAtB,EAA2B,aAA3B,EAA0C;AACrD,UAAM,IAAI,MAAV,EAAkB,aAAlB;AACA,QAAI,SAAJ,GAAgB;AACZ,sBADY;AAEZ,cAFY;AAGZ,gBAHY;AAIZ;AAJY,KAAhB;;AAOA,WAAO,MAAP;AACH;;;;;;EAED,SAAS,KAAT,CAAe,MAAf,EAA2C;AAAA,QAApB,aAAoB,yDAAJ,EAAI;;AACvC,QAAI,MAAJ,EAAY;AACR,cAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN;AACH;;AAED,QAAM,kBAAkB,OAAO,GAAP,CAAW,WAAX,CAAxB;;AAEA,QAAI,CAAC,eAAL,EAAsB;AAClB,cAAM,IAAI,KAAJ,CAAU,0BAAV,CAAN;AACH;;AAED,QAAI,CAAC,gBAAgB,GAAhB,CAAoB,MAApB,CAAL,EAAkC;AAC9B,cAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACH;;AAED,QAAM,SAAS,gBAAgB,GAAhB,CAAoB,QAApB,CAAf;AACA,QAAM,OAAO,gBAAgB,GAAhB,CAAoB,MAApB,CAAb;;AAEA,aAAS,gCAAgB,SAAS,GAAT,GAAe,EAA/B,YAAuC,SAAS,QAAhD,SAA4D,IAA5D,SAAoE,aAApE,EAAqF;AAC1F,2BAAmB,GADuE;AAE1F,8BAAsB,IAFoE;AAG1F,iBAAS,IAHiF;AAI1F,oBAAY,CAAC,WAAD;AAJ8E,KAArF,CAAT;;AAOA,WAAO,EAAP,CAAU,SAAV,EAAqB,YAAM;AACvB,eAAO,OAAP,CAAe,WAAf;AACH,KAFD;;AAIA,WAAO,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC1B,eAAO,IAAP,CAAY,cAAZ;AACH,KAFD;;AAIA,WAAO,EAAP,CAAU,OAAV,EAAmB,gBAAiB;AAAA,YAAd,OAAc,QAAd,OAAc;;AAChC,YAAI,YAAY,OAAO,OAAvB,EAAgC;AAC5B,mBAAO,SAAS,MAAT,CAAgB,IAAhB,CAAP;AACH;AACJ,KAJD;;AAMA,WAAO,MAAP;AACH;;;;;EAED,SAAS,IAAT,GAAuB;AAAA;;AAAA,sCAAN,IAAM;AAAN,YAAM;AAAA;;AACnB,WAAO,KAAP,CAAa,MAAb,EAAqB,EAAE,UAAF,EAArB;AACA,WAAO,mBAAO,IAAP,gBAAe,IAAf,CAAP;AACH;;;;;;EAED,SAAS,EAAT,CAAY,IAAZ,EAAkB,OAAlB,EAA2B;AACvB,WAAO,EAAP,CAAU,IAAV,EAAgB,OAAhB;AACA,WAAO,OAAP;AACH;;;;;;EAED,SAAS,GAAT,CAAa,IAAb,EAAmB,OAAnB,EAA4B;AACxB,WAAO,GAAP,CAAW,IAAX,EAAiB,OAAjB;AACH","file":"browser.js","sourcesContent":["import socketio from 'socket.io-client';\nimport Logger from 'nightingale-logger';\n\nconst logger = new Logger('alp.websocket');\nlet socket;\n\nexport default function alpWebsocket(app, namespaceName) {\n    start(app.config, namespaceName);\n    app.websocket = {\n        socket,\n        on,\n        off,\n        emit,\n    };\n\n    return socket;\n}\n\nfunction start(config, namespaceName = '') {\n    if (socket) {\n        throw new Error('WebSocket already started');\n    }\n\n    const webSocketConfig = config.get('webSocket');\n\n    if (!webSocketConfig) {\n        throw new Error('Missing config webSocket');\n    }\n\n    if (!webSocketConfig.has('port')) {\n        throw new Error('Missing config webSocket.port');\n    }\n\n    const secure = webSocketConfig.get('secure');\n    const port = webSocketConfig.get('port');\n\n    socket = socketio(`http${secure ? 's' : ''}://${location.hostname}:${port}/${namespaceName}`, {\n        reconnectionDelay: 500,\n        reconnectionDelayMax: 1000,\n        timeout: 4000,\n        transports: ['websocket'],\n    });\n\n    socket.on('connect', () => {\n        logger.success('connected');\n    });\n\n    socket.on('disconnect', () => {\n        logger.warn('disconnected');\n    });\n\n    socket.on('hello', ({ version }) => {\n        if (version !== window.VERSION) {\n            return location.reload(true);\n        }\n    });\n\n    return socket;\n}\n\nfunction emit(...args) {\n    logger.debug('emit', { args });\n    return socket.emit(...args);\n}\n\nfunction on(type, handler) {\n    socket.on(type, handler);\n    return handler;\n}\n\nfunction off(type, handler) {\n    socket.off(type, handler);\n}\n"]}