{"version":3,"sources":["../src/browser.js"],"names":["socketio","Logger","logger","socket","successfulConnection","connected","websocket","on","off","emit","isConnected","isDisconnected","WEBSOCKET_STATE_ACTION_TYPE","alpWebsocket","app","namespaceName","alpReducers","state","action","setTimeout","store","dispatch","type","start","config","context","Error","webSocketConfig","get","has","secure","port","location","hostname","reconnectionDelay","reconnectionDelayMax","timeout","transports","callbackFirstConnectionError","success","warn","version","window","VERSION","process","env","NODE_ENV","confirm","t","reload","console","serverVersion","clientVersion","args","debug","Promise","resolve","reject","resolved","error","result","clearTimeout","handler"],"mappings":"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","file":"browser.js","sourcesContent":["/* eslint-disable no-use-before-define */\nimport socketio from 'socket.io-client';\nimport Logger from 'nightingale-logger/src';\n\nconst logger = new Logger('alp:websocket');\nlet socket;\nlet successfulConnection = null;\nlet connected = false;\n\nexport const websocket = {\n  get connected() {\n    return connected;\n  },\n  on,\n  off,\n  emit,\n  isConnected,\n  isDisconnected,\n};\n\nconst WEBSOCKET_STATE_ACTION_TYPE = 'alp:websocket/state';\n\nexport default function alpWebsocket(app, namespaceName) {\n  if (!app.alpReducers) app.alpReducers = {}; // TODO remove in next major\n  app.alpReducers.websocket = (state, action) => {\n    if (!state) {\n      state = 'disconnected';\n      setTimeout(() => {\n        if (successfulConnection !== false) {\n          app.store.dispatch({\n            type: WEBSOCKET_STATE_ACTION_TYPE,\n            state: connected ? 'connected' : 'connecting',\n          });\n        }\n      });\n    } else if (action.type === WEBSOCKET_STATE_ACTION_TYPE) return action.state;\n    return state;\n  };\n\n  start(app, namespaceName);\n  app.websocket = websocket;\n  websocket.socket = socket;\n  return socket;\n}\n\nfunction start(app, namespaceName = '') {\n  const { config, context } = app;\n\n  if (socket) {\n    throw new Error('WebSocket already started');\n  }\n\n  const webSocketConfig = config.get('webSocket') || config.get('websocket');\n\n  if (!webSocketConfig) {\n    throw new Error('Missing config webSocket');\n  }\n\n  if (!webSocketConfig.has('port')) {\n    throw new Error('Missing config webSocket.port');\n  }\n\n  const secure = webSocketConfig.get('secure');\n  const port = webSocketConfig.get('port');\n\n  socket = socketio(`http${secure ? 's' : ''}://${location.hostname}:${port}/${namespaceName}`, {\n    reconnectionDelay: 500,\n    reconnectionDelayMax: 2500,\n    timeout: 4000,\n    transports: ['websocket'],\n  });\n\n  const callbackFirstConnectionError = () => (successfulConnection = false);\n\n  socket.on('connect_error', callbackFirstConnectionError);\n\n  socket.on('connect', () => {\n    socket.off('connect_error', callbackFirstConnectionError);\n    logger.success('connected');\n    successfulConnection = true;\n    connected = true;\n    if (app.store) {\n      app.store.dispatch({ type: WEBSOCKET_STATE_ACTION_TYPE, state: 'connected' });\n    }\n  });\n\n  socket.on('reconnect', () => {\n    logger.success('reconnected');\n    connected = true;\n    if (app.store) {\n      app.store.dispatch({ type: WEBSOCKET_STATE_ACTION_TYPE, state: 'connected' });\n    }\n  });\n\n  socket.on('disconnect', () => {\n    logger.warn('disconnected');\n    connected = false;\n    if (app.store) {\n      app.store.dispatch({ type: WEBSOCKET_STATE_ACTION_TYPE, state: 'disconnected' });\n    }\n  });\n\n  socket.on('hello', ({ version }) => {\n    if (version !== window.VERSION) {\n      // eslint-disable-next-line no-alert\n      if (process.env.NODE_ENV === 'production' && confirm(context.t('newversion'))) {\n        return location.reload(true);\n      } else {\n        console.warn('Version mismatch', { serverVersion: version, clientVersion: window.VERSION });\n      }\n    }\n  });\n\n  return socket;\n}\n\nfunction emit(...args): Promise<any> {\n  logger.debug('emit', { args });\n  return new Promise((resolve, reject) => {\n    const resolved = setTimeout(() => {\n      logger.warn('websocket emit timeout', { args });\n      reject(new Error('websocket response timeout'));\n    }, 10000);\n\n    socket.emit(...args, (error, result) => {\n      clearTimeout(resolved);\n      if (error != null) return reject(typeof error === 'string' ? new Error(error) : error);\n      resolve(result);\n    });\n  });\n}\n\nfunction on(type, handler) {\n  socket.on(type, handler);\n  return handler;\n}\n\nfunction off(type, handler) {\n  socket.off(type, handler);\n}\n\nfunction isConnected() {\n  // socket.connected is not updated after reconnect event\n  return socket && connected;\n}\n\nfunction isDisconnected() {\n  return successfulConnection && !isConnected();\n}\n"]}