{"version":3,"sources":["../src/index.js"],"names":["readFileSync","socketio","Logger","logger","io","alpWebsocket","app","dirname","alpReducers","websocket","start","config","certPath","on","close","subscribe","socket","name","callbackOnSubscribe","callbackOnUnsubscribe","diconnect","info","join","callback","leave","removeListener","Error","webSocketConfig","get","has","secure","port","createServer","require","server","key","cert","listen","error","err","debug","id","emit","version"],"mappings":"AAAA;AACA,SAASA,YAAT,QAA6B,IAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP;;AAEA,MAAMC,SAAS,IAAID,MAAJ,CAAW,eAAX,CAAf;;AAEA,IAAIE,EAAJ;;AAEA;;;;AAIA,eAAe,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,OAA3B,EAAoC;AAOjD,SANKD,IAAIE,WAMT,KANsBF,IAAIE,WAAJ,KAMtB,GALAF,IAAIE,WAAJ,CAAgBC,SAAhB,GAA4B;AAAA,WAAmB,cAAnB;AAAA,GAK5B,EAHAC,MAAMJ,IAAIK,MAAV,EAAkBJ,WAAWD,IAAIM,QAAjC,CAGA,EAFAN,IAAIG,SAAJ,GAAgBL,EAEhB,EADAE,IAAIO,EAAJ,CAAO,OAAP,EAAgBC,KAAhB,CACA,EAAOV,EAAP;AACD;;AAED,OAAO,SAASU,KAAT,GAAiB;AACtBV,KAAGU,KAAH,EADsB;AAEvB;;AAED,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,mBAAjC,EAAsDC,qBAAtD,EAA6E;AAClF,QAAMC,YAAYD,yBAA0B;AAAA,WAAMA,uBAAN;AAAA,GAA5C;AACAH,SAAOH,EAAP,CAAW,aAAYI,IAAK,EAA5B,EAA+B,oBAAY;AACzCd,WAAOkB,IAAP,CAAY,MAAZ,EAAoB,EAAEJ,IAAF,EAApB,CADyC,EAEzCD,OAAOM,IAAP,CAAYL,IAAZ,CAFyC,EAIrCC,mBAJqC,GAKvCK,SAAS,IAAT,EAAeL,qBAAf,CALuC,GAOvCK,SAAS,IAAT,CAPuC,EAUrCH,SAVqC,IAU1BJ,OAAOH,EAAP,CAAU,YAAV,EAAwBO,SAAxB,CAV0B;AAW1C,GAXD,CAFkF,EAelFJ,OAAOH,EAAP,CAAW,eAAcI,IAAK,EAA9B,EAAiC,oBAAY;AAC3Cd,WAAOkB,IAAP,CAAY,OAAZ,EAAqB,EAAEJ,IAAF,EAArB,CAD2C,EAE3CD,OAAOQ,KAAP,CAAaP,IAAb,CAF2C,EAGvCG,SAHuC,IAG5BJ,OAAOS,cAAP,CAAsB,YAAtB,EAAoCL,SAApC,CAH4B,EAKvCD,qBALuC,GAMzCI,SAAS,IAAT,EAAeJ,uBAAf,CANyC,GAQzCI,SAAS,IAAT,CARyC;AAU5C,GAVD,CAfkF;AA0BnF;;AAED,SAASb,KAAT,CAAeC,MAAf,EAAuBJ,OAAvB,EAAgC;AAC9B,MAAIH,EAAJ,EACE,MAAM,IAAIsB,KAAJ,CAAU,iBAAV,CAAN;;AAGF,QAAMC,kBAAkBhB,OAAOiB,GAAP,CAAW,WAAX,KAA2BjB,OAAOiB,GAAP,CAAW,WAAX,CAAnD;;AAEA,MAAI,CAACD,eAAL,EACE,MAAM,IAAID,KAAJ,CAAU,0BAAV,CAAN;;AAGF,MAAI,CAACC,gBAAgBE,GAAhB,CAAoB,MAApB,CAAL,EACE,MAAM,IAAIH,KAAJ,CAAU,+BAAV,CAAN;;AAGF,QAAMI,SAASH,gBAAgBC,GAAhB,CAAoB,QAApB,CAAf;AACA,QAAMG,OAAOJ,gBAAgBC,GAAhB,CAAoB,MAApB,CAAb;AACA;AACA,QAAMI,eAAeC,QAAQH,SAAS,OAAT,GAAmB,MAA3B,EAAmCE,YAAxD;;AAEA,QAAME,SAAU,YAAM;AAAA,WACfJ,MADe,GAKbE,aAAa;AAClBG,WAAKnC,aAAc,GAAEO,OAAQ,aAAxB,CADa;AAElB6B,YAAMpC,aAAc,GAAEO,OAAQ,aAAxB;AAFY,KAAb,CALa,GAEXyB,cAFW;AASrB,GATc,EAAf;;AA4BA,SAjBA7B,OAAOkB,IAAP,CAAY,UAAZ,EAAwB,EAAEU,IAAF,EAAxB,CAiBA,EAhBAG,OAAOG,MAAP,CAAcN,IAAd,EAAoB;AAAA,WAAM5B,OAAOkB,IAAP,CAAY,WAAZ,EAAyB,EAAEU,IAAF,EAAzB,CAAN;AAAA,GAApB,CAgBA,EAfAG,OAAOrB,EAAP,CAAU,OAAV,EAAmB;AAAA,WAAOV,OAAOmC,KAAP,CAAaC,GAAb,CAAP;AAAA,GAAnB,CAeA,EAdAnC,KAAKH,SAASiC,MAAT,CAcL,EAZA9B,GAAGS,EAAH,CAAM,YAAN,EAAoB,kBAAU;AAC5BV,WAAOqC,KAAP,CAAa,WAAb,EAA0B,EAAEC,IAAIzB,OAAOyB,EAAb,EAA1B,CAD4B,EAE5BzB,OAAO0B,IAAP,CAAY,OAAZ,EAAqB,EAAEC,SAAShC,OAAOiB,GAAP,CAAW,SAAX,CAAX,EAArB,CAF4B,EAI5BZ,OAAOH,EAAP,CAAU,OAAV,EAAmB;AAAA,aAAOV,OAAOmC,KAAP,CAAaC,GAAb,CAAP;AAAA,KAAnB,CAJ4B,EAK5BvB,OAAOH,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC5BV,aAAOqC,KAAP,CAAa,cAAb,EAA6B,EAAEC,IAAIzB,OAAOyB,EAAb,EAA7B,CAD4B;AAE7B,KAFD,CAL4B;AAQ7B,GARD,CAYA,EAFArC,GAAGS,EAAH,CAAM,OAAN,EAAe;AAAA,WAAOV,OAAOmC,KAAP,CAAaC,GAAb,CAAP;AAAA,GAAf,CAEA,EAAOnC,EAAP;AACD","file":"index.js","sourcesContent":["/* eslint-disable no-use-before-define */\nimport { readFileSync } from 'fs';\nimport socketio from 'socket.io';\nimport Logger from 'nightingale-logger/src';\n\nconst logger = new Logger('alp:websocket');\n\nlet io;\n\n/**\n * @param {Koa|AlpNodeApp} app\n * @param {string} [dirname] for tls, dirname of server.key server.crt. If undefined: app.certPath\n */\nexport default function alpWebsocket(app, dirname) {\n  if (!app.alpReducers) app.alpReducers = {}; // TODO remove in next major\n  app.alpReducers.websocket = (state, action) => 'disconnected';\n\n  start(app.config, dirname || app.certPath);\n  app.websocket = io;\n  app.on('close', close);\n  return io;\n}\n\nexport function close() {\n  io.close();\n}\n\nexport function subscribe(socket, name, callbackOnSubscribe, callbackOnUnsubscribe) {\n  const diconnect = callbackOnUnsubscribe && (() => callbackOnUnsubscribe());\n  socket.on(`subscribe:${name}`, callback => {\n    logger.info('join', { name });\n    socket.join(name);\n\n    if (callbackOnSubscribe) {\n      callback(null, callbackOnSubscribe());\n    } else {\n      callback(null);\n    }\n\n    if (diconnect) socket.on('disconnect', diconnect);\n  });\n\n  socket.on(`unsubscribe:${name}`, callback => {\n    logger.info('leave', { name });\n    socket.leave(name);\n    if (diconnect) socket.removeListener('disconnect', diconnect);\n\n    if (callbackOnUnsubscribe) {\n      callback(null, callbackOnUnsubscribe());\n    } else {\n      callback(null);\n    }\n  });\n}\n\nfunction start(config, dirname) {\n  if (io) {\n    throw new Error('Already started');\n  }\n\n  const webSocketConfig = config.get('webSocket') || config.get('websocket');\n\n  if (!webSocketConfig) {\n    throw new Error('Missing config webSocket');\n  }\n\n  if (!webSocketConfig.has('port')) {\n    throw new Error('Missing config webSocket.port');\n  }\n\n  const secure = webSocketConfig.get('secure');\n  const port = webSocketConfig.get('port');\n  // eslint-disable-next-line global-require, import/no-dynamic-require\n  const createServer = require(secure ? 'https' : 'http').createServer;\n\n  const server = (() => {\n    if (!secure) {\n      return createServer();\n    }\n\n    return createServer({\n      key: readFileSync(`${dirname}/server.key`),\n      cert: readFileSync(`${dirname}/server.crt`),\n    });\n  })();\n\n  logger.info('Starting', { port });\n  server.listen(port, () => logger.info('Listening', { port }));\n  server.on('error', err => logger.error(err));\n  io = socketio(server);\n\n  io.on('connection', socket => {\n    logger.debug('connected', { id: socket.id });\n    socket.emit('hello', { version: config.get('version') });\n\n    socket.on('error', err => logger.error(err));\n    socket.on('disconnect', () => {\n      logger.debug('disconnected', { id: socket.id });\n    });\n  });\n\n  io.on('error', err => logger.error(err));\n\n  return io;\n}\n"]}