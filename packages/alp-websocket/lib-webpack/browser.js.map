{"version":3,"sources":["../src/browser.js"],"names":[],"mappings":"AAAA;AACA,OAAO,QAAP,MAAqB,kBAArB;AACA,OAAO,MAAP,MAAmB,oBAAnB;;AAEA,IAAM,SAAS,IAAI,MAAJ,CAAW,eAAX,CAAf;AACA,IAAI,kBAAJ;;AAEA,eAAe,SAAS,YAAT,CAAsB,GAAtB,EAA2B,aAA3B,EAA0C;AACrD,UAAM,GAAN,EAAW,aAAX;AACA,QAAI,SAAJ,GAAgB;AACZ,sBADY;AAEZ,cAFY;AAGZ,gBAHY;AAIZ,kBAJY;AAKZ;AALY,KAAhB;;AAQA,WAAO,MAAP;AACH;;AAED,SAAS,KAAT,OAAwD;AAAA,QAAvC,MAAuC,QAAvC,MAAuC;AAAA,QAA/B,OAA+B,QAA/B,OAA+B;AAAA,QAApB,aAAoB,yDAAJ,EAAI;;AACpD,QAAI,MAAJ,EAAY;AACR,cAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN;AACH;;AAED,QAAM,kBAAkB,OAAO,GAAP,CAAW,WAAX,CAAxB;;AAEA,QAAI,CAAC,eAAL,EAAsB;AAClB,cAAM,IAAI,KAAJ,CAAU,0BAAV,CAAN;AACH;;AAED,QAAI,CAAC,gBAAgB,GAAhB,CAAoB,MAApB,CAAL,EAAkC;AAC9B,cAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACH;;AAED,QAAM,SAAS,gBAAgB,GAAhB,CAAoB,QAApB,CAAf;AACA,QAAM,OAAO,gBAAgB,GAAhB,CAAoB,MAApB,CAAb;;AAEA,aAAS,mBAAgB,SAAS,GAAT,GAAe,EAA/B,YAAuC,SAAS,QAAhD,SAA4D,IAA5D,SAAoE,aAApE,EAAqF;AAC1F,2BAAmB,GADuE;AAE1F,8BAAsB,IAFoE;AAG1F,iBAAS,IAHiF;AAI1F,oBAAY,CAAC,WAAD;AAJ8E,KAArF,CAAT;;AAOA,WAAO,EAAP,CAAU,SAAV,EAAqB,YAAM;AACvB,eAAO,OAAP,CAAe,WAAf;AACH,KAFD;;AAIA,WAAO,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC1B,eAAO,IAAP,CAAY,cAAZ;AACH,KAFD;;AAIA,WAAO,EAAP,CAAU,OAAV,EAAmB,iBAAiB;AAAA,YAAd,OAAc,SAAd,OAAc;;AAChC,YAAI,YAAY,OAAO,OAAvB,EAAgC;AAC5B;AACA,gBAAI,wCAAsB,QAAQ,QAAQ,CAAR,CAAU,YAAV,CAAR,CAA1B,EAA4D;AACxD,uBAAO,SAAS,MAAT,CAAgB,IAAhB,CAAP;AACH;AACJ;AACJ,KAPD;;AASA,WAAO,MAAP;AACH;;AAED,SAAS,IAAT,GAAgC;AAAA,sCAAf,IAAe;AAAf,YAAe;AAAA;;AAC5B,WAAO,KAAP,CAAa,MAAb,EAAqB,EAAE,UAAF,EAArB;AACA,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AAAA;;AACpC,YAAM,WAAW,WAAW,YAAM;AAC9B,mBAAO,IAAP,CAAY,wBAAZ,EAAsC,EAAE,UAAF,EAAtC;AACA,mBAAO,SAAP;AACH,SAHgB,EAGd,KAHc,CAAjB;;AAKA,2BAAO,IAAP,gBAAe,IAAf,SAAqB,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACpC,yBAAa,QAAb;AACA,gBAAI,SAAS,IAAb,EAAmB,OAAO,OAAO,KAAP,CAAP;AACnB,oBAAQ,MAAR;AACH,SAJD;AAKH,KAXM,CAAP;AAYH;;AAED,SAAS,EAAT,CAAY,IAAZ,EAAkB,OAAlB,EAA2B;AACvB,WAAO,EAAP,CAAU,IAAV,EAAgB,OAAhB;AACA,WAAO,OAAP;AACH;;AAED,SAAS,GAAT,CAAa,IAAb,EAAmB,OAAnB,EAA4B;AACxB,WAAO,GAAP,CAAW,IAAX,EAAiB,OAAjB;AACH;;AAGD,SAAS,WAAT,GAAuB;AACnB,WAAO,UAAU,OAAO,SAAxB;AACH","file":"browser.js","sourcesContent":["/* global location, window, confirm */\nimport socketio from 'socket.io-client';\nimport Logger from 'nightingale-logger';\n\nconst logger = new Logger('alp.websocket');\nlet socket;\n\nexport default function alpWebsocket(app, namespaceName) {\n    start(app, namespaceName);\n    app.websocket = {\n        socket,\n        on,\n        off,\n        emit,\n        isConnected,\n    };\n\n    return socket;\n}\n\nfunction start({ config, context }, namespaceName = '') {\n    if (socket) {\n        throw new Error('WebSocket already started');\n    }\n\n    const webSocketConfig = config.get('webSocket');\n\n    if (!webSocketConfig) {\n        throw new Error('Missing config webSocket');\n    }\n\n    if (!webSocketConfig.has('port')) {\n        throw new Error('Missing config webSocket.port');\n    }\n\n    const secure = webSocketConfig.get('secure');\n    const port = webSocketConfig.get('port');\n\n    socket = socketio(`http${secure ? 's' : ''}://${location.hostname}:${port}/${namespaceName}`, {\n        reconnectionDelay: 500,\n        reconnectionDelayMax: 2500,\n        timeout: 4000,\n        transports: ['websocket'],\n    });\n\n    socket.on('connect', () => {\n        logger.success('connected');\n    });\n\n    socket.on('disconnect', () => {\n        logger.warn('disconnected');\n    });\n\n    socket.on('hello', ({ version }) => {\n        if (version !== window.VERSION) {\n            // eslint-disable-next-line no-alert\n            if (!global.PRODUCTION || confirm(context.t('newversion'))) {\n                return location.reload(true);\n            }\n        }\n    });\n\n    return socket;\n}\n\nfunction emit(...args): Promise {\n    logger.debug('emit', { args });\n    return new Promise((resolve, reject) => {\n        const resolved = setTimeout(() => {\n            logger.warn('websocket emit timeout', { args });\n            reject('timeout');\n        }, 10000);\n\n        socket.emit(...args, (error, result) => {\n            clearTimeout(resolved);\n            if (error != null) return reject(error);\n            resolve(result);\n        });\n    });\n}\n\nfunction on(type, handler) {\n    socket.on(type, handler);\n    return handler;\n}\n\nfunction off(type, handler) {\n    socket.off(type, handler);\n}\n\n\nfunction isConnected() {\n    return socket && socket.connected;\n}\n"]}