{"version":3,"sources":["../../src/utils/generators.js"],"names":["randomBytes","promiseCallback","randomBase64","size","done","then","buffer","toString","randomHex"],"mappings":"AAAA,SAASA,WAAT,QAA4B,QAA5B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA6C;AAClD,SAAOF,gBAAgBG,QAAQJ,YAAYG,IAAZ,EAAkBC,IAAlB,CAAxB,EACAC,IADA,CACKC,UAAUA,OAAOC,QAAP,CAAgB,QAAhB,CADf,CAAP;AAED;;AAED,OAAO,SAASC,SAAT,CAAmBL,IAAnB,EAA0C;AAC/C,SAAOF,gBAAgBG,QAAQJ,YAAYG,IAAZ,EAAkBC,IAAlB,CAAxB,EACAC,IADA,CACKC,UAAUA,OAAOC,QAAP,CAAgB,KAAhB,CADf,CAAP;AAED","file":"generators.js","sourcesContent":["import { randomBytes } from 'crypto';\nimport promiseCallback from 'promise-callback-factory';\n\nexport function randomBase64(size: number): Promise {\n  return promiseCallback(done => randomBytes(size, done))\n        .then(buffer => buffer.toString('base64'));\n}\n\nexport function randomHex(size: number): Promise {\n  return promiseCallback(done => randomBytes(size, done))\n        .then(buffer => buffer.toString('hex'));\n}\n"]}