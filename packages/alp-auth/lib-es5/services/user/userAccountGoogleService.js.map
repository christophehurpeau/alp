{"version":3,"sources":["../../../src/services/user/userAccountGoogleService.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;kBAEe;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA,0NAKX,WALW,GAKG,QALH;AAAA;;AAAA;AAAA;AAAA,mCAOA,MAPA,EAOQ;AACf,mBAAO,sEAAoE,OAAO,WAA3E,EACF,IADE,CACG,UAAC,QAAD;AAAA,uBAAc,SAAS,IAAT,EAAd;AAAA,aADH,CAAP;AAEH;AAVU;AAAA;AAAA,kCAYD,OAZC,EAYQ,OAZR,EAYiB;AACxB,mBAAO,QAAQ,QAAR,KAAqB,QAAQ,EAApC;AACH;AAdU;AAAA;AAAA,8BAgBL,OAhBK,EAgBI;AACX,mBAAO,QAAQ,EAAf;AACH;AAlBU;AAAA;AAAA,uCAoBI,OApBJ,EAoBa;AACpB,mBAAO,QAAQ,KAAf;AACH;AAtBU;AAAA;AAAA,kCAwBD,OAxBC,EAwBQ,WAxBR,EAwBqB;AAC5B,gBAAM,SAAS,EAAf;;AAEA,gBAAI,QAAQ,KAAZ,EAAmB;AACf,uBAAO,IAAP,CAAY,QAAQ,KAApB;AACH;;AAED,gBAAI,YAAY,MAAhB,EAAwB;AACpB,4BAAY,MAAZ,CAAmB,OAAnB,CAA2B,UAAC,KAAD,EAAW;AAClC,wBAAI,OAAO,OAAP,CAAe,MAAM,KAArB,QAAJ,EAAwC;AACpC,+BAAO,IAAP,CAAY,MAAM,KAAlB;AACH;AACJ,iBAJD;AAKH;;AAED,mBAAO,MAAP;AACH;AAxCU;AAAA;AAAA,uCA0CI,OA1CJ,EA0Ca;AACpB,mBAAO,QAAQ,IAAf;AACH;AA5CU;AAAA;AAAA,oCA8CC,OA9CD,EA8CU;AACjB,mBAAO;AACH,2BAAW,QAAQ,UADhB;AAEH,4BAAY,QAAQ;AAFjB,aAAP;AAIH;AAnDU;AAAA;AAAA,wCAqDK,QArDL,EAqDe;AACtB,mBAAO,KAAK,QAAL,CAAc,QAAd,CAAP;AACH;AAvDU;AAAA;AAAA,iCAyDF,QAzDE,EAyDQ,QAzDR,EAyDkB;AACzB,mBAAO,CAAC,QAAD,GAAY,SAAS,KAAT,CAAe,GAAf,CAAZ,GAAkC,SAAS,MAAT,CAAgB,SAAS,KAAT,CAAe,GAAf,CAAhB,EACpC,MADoC,CAC7B,UAAC,IAAD,EAAO,CAAP,EAAU,EAAV;AAAA,uBAAiB,GAAG,OAAH,CAAW,IAAX,MAAqB,CAAtC;AAAA,aAD6B,CAAzC;AAEH;AA5DU;;AAAA;AAAA,4BACJ,eADI,GACc;AACrB,WAAO;AADc,CADd,W","file":"userAccountGoogleService.js","sourcesContent":["import EventEmitter from 'events';\n\nexport default new class UserAccountGoogleService extends EventEmitter {\n    static scopeKeyToScope = {\n        login: 'openid profile email https://www.googleapis.com/auth/plus.profile.emails.read',\n    };\n\n    providerKey = 'google';\n\n    getProfile(tokens) {\n        return fetch(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${tokens.accessToken}`)\n            .then((response) => response.json());\n    }\n\n    isAccount(account, profile) {\n        return account.googleId === profile.id;\n    }\n\n    getId(profile) {\n        return profile.id;\n    }\n\n    getAccountName(profile) {\n        return profile.email;\n    }\n\n    getEmails(profile, plusProfile) {\n        const emails = [];\n\n        if (profile.email) {\n            emails.push(profile.email);\n        }\n\n        if (plusProfile.emails) {\n            plusProfile.emails.forEach((email) => {\n                if (emails.indexOf(email.value) === -1) {\n                    emails.push(email.value);\n                }\n            });\n        }\n\n        return emails;\n    }\n\n    getDisplayName(profile) {\n        return profile.name;\n    }\n\n    getFullName(profile) {\n        return {\n            givenName: profile.given_name,\n            familyName: profile.family_name,\n        };\n    }\n\n    getDefaultScope(newScope) {\n        return this.getScope(newScope);\n    }\n\n    getScope(oldScope, newScope) {\n        return !oldScope ? newScope.split(' ') : oldScope.concat(newScope.split(' '))\n            .filter((item, i, ar) => ar.indexOf(item) === i);\n    }\n};\n"]}