{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { sign, verify } from 'jsonwebtoken';\nimport promiseCallback from 'promise-callback-factory';\nimport Logger from 'nightingale-logger';\nimport UsersManager from './models/user/UsersManager';\n\nexport { default as createAuthController } from './controllers/authController';\nexport { UsersManager };\nexport { default as AuthenticationService } from './services/AuthenticationService';\nexport { default as UserAccountsService } from './services/user/UserAccountsService';\n\nconst COOKIE_NAME = 'connectedUser';\nconst logger = new Logger('alp-auth');\n\nexport function init(app, usersManager: UsersManager) {\n    app.context.setConnected = async function (connected: number|string, user: Object) {\n        logger.debug('setConnected', { connected });\n        if (!connected) {\n            throw new Error('Illegal value for setConnected');\n        }\n\n        this.state.connected = connected;\n        this.state.user = user;\n\n        const token = await promiseCallback(done => sign(\n            { connected, time: Date.now() },\n            this.config.get('authentication').get('secretKey'),\n            {\n                algorithm: 'HS512',\n                audience: this.request.headers['user-agent'],\n                expiresIn: '30 days',\n            },\n            done\n        ));\n\n        this.cookies.set(COOKIE_NAME, token, {\n            httpOnly: true,\n            secure: this.config.get('allowHttps'),\n        });\n    };\n\n    app.context.logout = function () {\n        delete this.state.connected;\n        delete this.state.user;\n        this.cookies.set(COOKIE_NAME, '', { expires: new Date(1) });\n    };\n\n    app.registerBrowserStateTransformers((initialBrowserState, ctx) => {\n        if (ctx.state.connected) {\n            initialBrowserState.connected = ctx.state.connected;\n            initialBrowserState.user = usersManager.transformForBrowser(ctx.state.user);\n        }\n    });\n}\n\n\nexport function middleware(usersManager: UsersManager) {\n    return async (ctx, next) => {\n        let token = ctx.cookies.get(COOKIE_NAME);\n        logger.debug('middleware', { token });\n        if (!token) return await next();\n\n        let connected;\n        try {\n            let decoded = await verify(token, ctx.config.get('authentication').get('secretKey'), {\n                algorithm: 'HS512',\n                audience: ctx.request.headers['user-agent'],\n            });\n            connected = decoded.connected;\n        } catch (err) {\n            logger.info('failed to verify authentification', { err });\n            ctx.cookies.set(COOKIE_NAME, '', { expires: new Date(1) });\n            return await next();\n        }\n        logger.debug('middleware', { connected });\n\n        if (!connected) return await next();\n\n        const user = await usersManager.findConnected(connected);\n\n        if (!user) {\n            ctx.cookies.set(COOKIE_NAME, '', { expires: new Date(1) });\n            return await next();\n        }\n\n        ctx.state.connected = connected;\n        ctx.state.user = user;\n\n        await next();\n    };\n}\n"]}