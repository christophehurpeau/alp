{"version":3,"sources":["../src/index.js"],"names":["default","init","abstractUsersManager","mongoUsersManager","rethinkUsersManager","COOKIE_NAME","logger","controllers","Map","usersManager","strategies","loginModuleDescriptor","homeRouterKey","app","userAccountsService","authenticationService","config","set","context","setConnected","connected","user","debug","Error","state","token","time","Date","now","get","algorithm","audience","request","headers","expiresIn","done","cookies","httpOnly","secure","logout","expires","registerBrowserStateTransformer","initialBrowserState","ctx","transformForBrowser","decodeJwt","userAgent","result","websocket","Cookies","require","use","socket","next","handshakeData","keys","err","info","findConnected"],"mappings":"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","file":"index.js","sourcesContent":["import { sign, verify } from 'jsonwebtoken';\nimport promiseCallback from 'promise-callback-factory';\nimport Logger from 'nightingale-logger';\nimport abstractUsersManager from './models/user/abstractUsersManager';\nimport mongoUsersManager from './models/user/mongoUsersManager';\nimport rethinkUsersManager from './models/user/rethinkUsersManager';\nimport AuthenticationService from './services/AuthenticationService';\nimport UserAccountsService from './services/user/UserAccountsService';\nimport createAuthController from './controllers/createAuthController.server';\n\nexport { abstractUsersManager, mongoUsersManager, rethinkUsersManager };\nexport { default as routes } from './routes';\n\nconst COOKIE_NAME = 'connectedUser';\nconst logger = new Logger('alp-auth');\n\nexport default function init({\n  controllers,\n  usersManager,\n  strategies,\n  loginModuleDescriptor,\n  homeRouterKey,\n}: {\n  controllers: Map,\n  usersManager: Object,\n  strategies: Object,\n  loginModuleDescriptor: Object,\n  homeRouterKey: ?string,\n}) {\n  return app => {\n    const userAccountsService = new UserAccountsService(usersManager);\n\n    const authenticationService = new AuthenticationService(\n      app.config,\n      strategies,\n      userAccountsService,\n    );\n\n    controllers.set('auth', createAuthController({\n      usersManager,\n      authenticationService,\n      loginModuleDescriptor,\n      homeRouterKey,\n    }));\n\n    app.context.setConnected = async function (connected: number|string, user: Object) {\n      logger.debug('setConnected', { connected });\n      if (!connected) {\n        throw new Error('Illegal value for setConnected');\n      }\n\n      this.state.connected = connected;\n      this.state.user = user;\n\n      const token = await promiseCallback(done => sign(\n        { connected, time: Date.now() },\n        this.config.get('authentication').get('secretKey'),\n        {\n          algorithm: 'HS512',\n          audience: this.request.headers['user-agent'],\n          expiresIn: '30 days',\n        },\n        done,\n      ));\n\n      this.cookies.set(COOKIE_NAME, token, {\n        httpOnly: true,\n        secure: this.config.get('allowHttps'),\n      });\n    };\n\n    app.context.logout = function () {\n      delete this.state.connected;\n      delete this.state.user;\n      this.cookies.set(COOKIE_NAME, '', { expires: new Date(1) });\n    };\n\n    app.registerBrowserStateTransformer((initialBrowserState, ctx) => {\n      if (ctx.state.connected) {\n        initialBrowserState.connected = ctx.state.connected;\n        initialBrowserState.user = usersManager.transformForBrowser(ctx.state.user);\n      }\n    });\n\n    const decodeJwt = (token, userAgent) => {\n      const result = verify(token, app.config.get('authentication').get('secretKey'), {\n        algorithm: 'HS512',\n        audience: userAgent,\n      });\n      return result && result.connected;\n    };\n\n    if (app.websocket) {\n      logger.debug('app has websocket');\n            // eslint-disable-next-line\n            const Cookies = require('cookies');\n\n      app.websocket.use(async (socket, next) => {\n        const handshakeData = socket.request;\n        const cookies = new Cookies(handshakeData, null, { keys: app.keys });\n        let token = cookies.get(COOKIE_NAME);\n        logger.debug('middleware websocket', { token });\n\n        if (!token) return await next();\n\n        let connected;\n        try {\n          connected = await decodeJwt(token, handshakeData.headers['user-agent']);\n        } catch (err) {\n          logger.info('failed to verify authentification', { err });\n          return await next();\n        }\n        logger.debug('middleware websocket', { connected });\n\n        if (!connected) return await next();\n\n        const user = await usersManager.findConnected(connected);\n\n        if (!user) return await next();\n\n        socket.user = user;\n\n        await next();\n      });\n    }\n\n    return async (ctx, next) => {\n      let token = ctx.cookies.get(COOKIE_NAME);\n      logger.debug('middleware', { token });\n\n      if (!token) return await next();\n\n      let connected;\n      try {\n        connected = await decodeJwt(token, ctx.request.headers['user-agent']);\n      } catch (err) {\n        logger.info('failed to verify authentification', { err });\n        ctx.cookies.set(COOKIE_NAME, '', { expires: new Date(1) });\n        return await next();\n      }\n      logger.debug('middleware', { connected });\n\n      if (!connected) return await next();\n\n      const user = await usersManager.findConnected(connected);\n\n      if (!user) {\n        ctx.cookies.set(COOKIE_NAME, '', { expires: new Date(1) });\n        return await next();\n      }\n\n      ctx.state.connected = connected;\n      ctx.state.user = user;\n\n      await next();\n    };\n  };\n}\n"]}