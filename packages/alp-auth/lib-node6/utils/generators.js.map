{"version":3,"sources":["../../src/utils/generators.js"],"names":["randomBase64","randomHex","size","done","then","buffer","toString"],"mappings":";;;;;QAGgBA,Y,GAAAA,Y;QAKAC,S,GAAAA,S;;AARhB;;AACA;;;;;;AAEO,SAASD,YAAT,CAAsBE,IAAtB,EAA6C;AAClD,SAAO,sCAAgBC,QAAQ,yBAAYD,IAAZ,EAAkBC,IAAlB,CAAxB,EACAC,IADA,CACKC,UAAUA,OAAOC,QAAP,CAAgB,QAAhB,CADf,CAAP;AAED;;AAEM,SAASL,SAAT,CAAmBC,IAAnB,EAA0C;AAC/C,SAAO,sCAAgBC,QAAQ,yBAAYD,IAAZ,EAAkBC,IAAlB,CAAxB,EACAC,IADA,CACKC,UAAUA,OAAOC,QAAP,CAAgB,KAAhB,CADf,CAAP;AAED","file":"generators.js","sourcesContent":["import { randomBytes } from 'crypto';\nimport promiseCallback from 'promise-callback-factory';\n\nexport function randomBase64(size: number): Promise {\n  return promiseCallback(done => randomBytes(size, done))\n        .then(buffer => buffer.toString('base64'));\n}\n\nexport function randomHex(size: number): Promise {\n  return promiseCallback(done => randomBytes(size, done))\n        .then(buffer => buffer.toString('hex'));\n}\n"]}