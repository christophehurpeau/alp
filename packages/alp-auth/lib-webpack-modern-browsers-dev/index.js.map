{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { sign, verify } from 'jsonwebtoken';\nimport promiseCallback from 'promise-callback-factory';\nimport Logger from 'nightingale-logger';\nimport UsersManager from './models/user/UsersManager';\nimport AuthenticationService from './services/AuthenticationService';\nimport UserAccountsService from './services/user/UserAccountsService';\nimport createAuthController from './controllers/createAuthController.server';\n\nexport { UsersManager };\nexport { default as routes } from './routes';\n\nconst COOKIE_NAME = 'connectedUser';\nconst logger = new Logger('alp-auth');\n\nexport default function init({\n    controllers,\n    usersManager,\n    strategies,\n    loginModuleDescriptor,\n    homeRouterKey,\n}: {\n    controllers: Map;\n    usersManager: UsersManager;\n    strategies: Object;\n    loginModuleDescriptor: Object;\n    homeRouterKey: ?string;\n}) {\n    return app => {\n        const userAccountsService = new UserAccountsService(usersManager);\n\n        const authenticationService = new AuthenticationService(\n            app.config,\n            strategies,\n            userAccountsService\n        );\n\n        controllers.set('auth', createAuthController({\n            authenticationService,\n            loginModuleDescriptor,\n            homeRouterKey,\n        }));\n\n        app.context.setConnected = async function (connected: number|string, user: Object) {\n            logger.debug('setConnected', { connected });\n            if (!connected) {\n                throw new Error('Illegal value for setConnected');\n            }\n\n            this.state.connected = connected;\n            this.state.user = user;\n\n            const token = await promiseCallback(done => sign(\n                { connected, time: Date.now() },\n                this.config.get('authentication').get('secretKey'),\n                {\n                    algorithm: 'HS512',\n                    audience: this.request.headers['user-agent'],\n                    expiresIn: '30 days',\n                },\n                done\n            ));\n\n            this.cookies.set(COOKIE_NAME, token, {\n                httpOnly: true,\n                secure: this.config.get('allowHttps'),\n            });\n        };\n\n        app.context.logout = function () {\n            delete this.state.connected;\n            delete this.state.user;\n            this.cookies.set(COOKIE_NAME, '', { expires: new Date(1) });\n        };\n\n        app.registerBrowserStateTransformer((initialBrowserState, ctx) => {\n            if (ctx.state.connected) {\n                initialBrowserState.connected = ctx.state.connected;\n                initialBrowserState.user = usersManager.transformForBrowser(ctx.state.user);\n            }\n        });\n\n        const decodeJwt = (token, userAgent) => {\n            const result = verify(token, app.config.get('authentication').get('secretKey'), {\n                algorithm: 'HS512',\n                audience: userAgent,\n            });\n            return result && result.connected;\n        };\n\n        if (app.websocket) {\n            logger.debug('app has websocket');\n            // eslint-disable-next-line\n            const Cookies = require('cookies');\n\n            app.websocket.use(async (socket, next) => {\n                const handshakeData = socket.request;\n                const cookies = new Cookies(handshakeData, null, { keys: app.keys });\n                let token = cookies.get(COOKIE_NAME);\n                logger.debug('middleware websocket', { token });\n\n                if (!token) return await next();\n\n                let connected;\n                try {\n                    connected = await decodeJwt(token, handshakeData.headers['user-agent']);\n                } catch (err) {\n                    logger.info('failed to verify authentification', { err });\n                    return await next();\n                }\n                logger.debug('middleware websocket', { connected });\n\n                if (!connected) return await next();\n\n                const user = await usersManager.findConnected(connected);\n\n                if (!user) return await next();\n\n                socket.user = user;\n\n                await next();\n            });\n        }\n\n        return async (ctx, next) => {\n            let token = ctx.cookies.get(COOKIE_NAME);\n            logger.debug('middleware', { token });\n\n            if (!token) return await next();\n\n            let connected;\n            try {\n                connected = await decodeJwt(token, ctx.request.headers['user-agent']);\n            } catch (err) {\n                logger.info('failed to verify authentification', { err });\n                ctx.cookies.set(COOKIE_NAME, '', { expires: new Date(1) });\n                return await next();\n            }\n            logger.debug('middleware', { connected });\n\n            if (!connected) return await next();\n\n            const user = await usersManager.findConnected(connected);\n\n            if (!user) {\n                ctx.cookies.set(COOKIE_NAME, '', { expires: new Date(1) });\n                return await next();\n            }\n\n            ctx.state.connected = connected;\n            ctx.state.user = user;\n\n            await next();\n        };\n    };\n}\n"]}