{"version":3,"sources":["../../src/utils/generators.js"],"names":["randomBase64","randomHex","size","done","then","buffer","toString"],"mappings":";;;;;QAGgBA,Y,GAAAA,Y;QAIAC,S,GAAAA,S;;AAPhB;;AACA;;;;;;AAEO,SAASD,YAAT,CAAsBE,IAAtB,EAAqD;AAC1D,SAAO,sCAAgBC,QAAQ,yBAAYD,IAAZ,EAAkBC,IAAlB,CAAxB,EAAiDC,IAAjD,CAAsDC,UAAUA,OAAOC,QAAP,CAAgB,QAAhB,CAAhE,CAAP;AACD;;AAEM,SAASL,SAAT,CAAmBC,IAAnB,EAAkD;AACvD,SAAO,sCAAgBC,QAAQ,yBAAYD,IAAZ,EAAkBC,IAAlB,CAAxB,EAAiDC,IAAjD,CAAsDC,UAAUA,OAAOC,QAAP,CAAgB,KAAhB,CAAhE,CAAP;AACD","file":"generators.js","sourcesContent":["import { randomBytes } from 'crypto';\nimport promiseCallback from 'promise-callback-factory';\n\nexport function randomBase64(size: number): Promise<string> {\n  return promiseCallback(done => randomBytes(size, done)).then(buffer => buffer.toString('base64'));\n}\n\nexport function randomHex(size: number): Promise<string> {\n  return promiseCallback(done => randomBytes(size, done)).then(buffer => buffer.toString('hex'));\n}\n"]}