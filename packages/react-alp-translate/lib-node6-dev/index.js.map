{"version":3,"sources":["../src/index.jsx"],"names":["TranslateComponent","id","children","props","context","translated","t","contextTypes","object","isRequired"],"mappings":";;;;;;AAAA;;;;;;;;;;;;AAEA,gFAA4B,+BAAC,0CAAY,8BAAZ,CAAD,+BAAwB,4BAAxB,EAA5B;;AAEA,0DAAiB,kCACf,qCAAI,8BAAJ,CADe,EAEf,qCAAK,+BAAC,4BAAD,CAAL,OAFe,EAGf,2CAAW,+BAAC,oBAAD,CAAX,OAHe,EAIf,qCAAC,8BAAD,EAAU,2BAAV,CAJe,CAAjB;;AAOA,MAAMA,qBAAqB,iBAAwD;AAAA,0BAA7B,SAA6B;AAAA,MAAvD,EAAEC,EAAF,EAAMC,QAAN,EAAuD;AAAA,MAApCC,KAAoC;;AAAA,MAAhB,EAAEC,OAAF,EAAgB;;AACjF,QAAMC,aAAaD,QAAQE,CAAR,CAAUL,EAAV,EAAcE,KAAd,CAAnB;;AAEA,MAAID,QAAJ,EAAc;AACZ,WAAOA,SAASG,UAAT,CAAP;AACD;;AAED,SAAOA,UAAP;AACD,CARD;;AAUAL,mBAAmBO,YAAnB,GAAkC;AAChCH,WAAS,oBAAUI,MAAV,CAAiBC;AADM,CAAlC;;kBAIeT,kB","file":"index.jsx","sourcesContent":["import PropTypes from 'prop-types';\n\ntype ChildrenCallbackType = (translated: string) => void;\n\ntype PropsType = {|\n  id: string,\n  as?: ?null,\n  children?: ?ChildrenCallbackType,\n  [string]: any,\n|};\n\nconst TranslateComponent = ({ id, children, ...props }: PropsType, { context }) => {\n  const translated = context.t(id, props);\n\n  if (children) {\n    return children(translated);\n  }\n\n  return translated;\n};\n\nTranslateComponent.contextTypes = {\n  context: PropTypes.object.isRequired,\n};\n\nexport default TranslateComponent;\n"]}