{"version":3,"file":"index-node10-dev.cjs.js","sources":["../src/index.ts"],"sourcesContent":["import Application, { Context } from 'koa';\nimport parse from 'co-body';\n\ndeclare module 'koa' {\n  interface Request {\n    body: any;\n  }\n\n  interface BaseContext {\n    parseBody(): Promise<void>;\n    parseBodyJson(): Promise<void>;\n    parseBodyText(): Promise<void>;\n  }\n}\n\nconst assertBodyNotParsed = (ctx: Context) => {\n  if (ctx.request.body) {\n    throw new Error('Request is already parsed');\n  }\n};\n\nexport default function alpBodyParser(app: Application) {\n  app.context.parseBody = async function(this: Context) {\n    assertBodyNotParsed(this);\n    const body = await parse.form(this);\n    this.request.body = body;\n    return body;\n  };\n\n  app.context.parseBodyJson = async function(this: Context) {\n    assertBodyNotParsed(this);\n    const body = await parse.json(this);\n    this.request.body = body;\n    return body;\n  };\n\n  app.context.parseBodyText = async function(this: Context) {\n    assertBodyNotParsed(this);\n    const body = await parse.text(this);\n    this.request.body = body;\n    return body;\n  };\n}\n"],"names":["assertBodyNotParsed","ctx","request","body","Error","alpBodyParser","app","context","parseBody","parse","form","parseBodyJson","json","parseBodyText","text"],"mappings":";;;;;;;;AAeA,MAAMA,mBAAmB,GAAIC,GAAD,IAAkB;MACxCA,GAAG,CAACC,OAAJ,CAAYC,IAAhB,EAAsB;UACd,IAAIC,KAAJ,CAAU,2BAAV,CAAN;;CAFJ;;AAMA,AAAe,SAASC,aAAT,CAAuBC,GAAvB,EAAyC;EACtDA,GAAG,CAACC,OAAJ,CAAYC,SAAZ,GAAwB,kBAA8B;IACpDR,mBAAmB,CAAC,IAAD,CAAnB;UACMG,IAAI,GAAG,MAAMM,KAAK,CAACC,IAAN,CAAW,IAAX,CAAnB;SACKR,OAAL,CAAaC,IAAb,GAAoBA,IAApB;WACOA,IAAP;GAJF;;EAOAG,GAAG,CAACC,OAAJ,CAAYI,aAAZ,GAA4B,kBAA8B;IACxDX,mBAAmB,CAAC,IAAD,CAAnB;UACMG,IAAI,GAAG,MAAMM,KAAK,CAACG,IAAN,CAAW,IAAX,CAAnB;SACKV,OAAL,CAAaC,IAAb,GAAoBA,IAApB;WACOA,IAAP;GAJF;;EAOAG,GAAG,CAACC,OAAJ,CAAYM,aAAZ,GAA4B,kBAA8B;IACxDb,mBAAmB,CAAC,IAAD,CAAnB;UACMG,IAAI,GAAG,MAAMM,KAAK,CAACK,IAAN,CAAW,IAAX,CAAnB;SACKZ,OAAL,CAAaC,IAAb,GAAoBA,IAApB;WACOA,IAAP;GAJF;;;;;"}