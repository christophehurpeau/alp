{"version":3,"sources":["views/IndexView.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;kBAEe,yBAAQ;AAAA,QAAG,IAAH,QAAG,IAAH;AAAA,WAAe,EAAE,UAAF,EAAf;AAAA,CAAR,qBAAkC,MAAM,SAAN,0BAAkC;AAAA;AAAA;;AAAA,iDAyC/E,OAzC+E,GAyCpE,IAAD,IAAkB;AAAA,yBAAjB,IAAiB;AAAA,4HAAjB,IAAiB;AAAA;;AACxB,gBAAI,KAAK,KAAL,CAAW,IAAX,KAAoB,IAAxB,EAA8B;AAC9B,kBAAM,WAAW,KAAK,OAAL,CAAa,OAAb,CAAqB,KAArB,CAA2B,QAA5C;AACA,qBAAS,mBAAc,IAAd,CAAT;AACH,SA7C8E;AAAA;;AAU/E,wBAAoB;AAChB,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,KAAnC;AACA,cAAM,SAAN,CAAgB,KAAK,cAAL,GAAsB,MAAM;AACxC,kBAAM,QAAQ,MAAM,QAAN,EAAd;;AAEA,kBAAM,cAAc,IAAI,eAAJ,CAAoB,CAAC,SAAS,MAAT,CAAgB,MAAjB,GAA0B,SAAS,MAAnC,GAA4C,SAAS,MAAT,CAAgB,MAAhB,CAAuB,CAAvB,CAAhE,CAApB;AACA,gBAAI,CAAC,MAAM,IAAX,EAAiB;AACb,4BAAY,MAAZ,CAAmB,MAAnB;AACH,aAFD,MAEO;AACH,4BAAY,GAAZ,CAAgB,MAAhB,EAAwB,MAAM,IAA9B;AACH;;AAED,kBAAM,cAAc,YAAY,QAAZ,EAApB;AACA,gBAAI,gBAAgB,SAAS,KAA7B,EAAoC;AAChC,wBAAQ,YAAR,CACI,EAAE,MAAM,MAAM,IAAd,EADJ,EAEI,SAAS,KAFb,EAGI,CAAC,SAAS,QAAT,CAAkB,KAAlB,CAAwB,CAAxB,EAA2B,EAAE,SAAS,MAAT,CAAgB,MAAhB,GAAyB,CAA3B,CAA3B,KAA6D,GAA9D,KACO,eAAe,CAAC,CAAD,GAAI,WAAJ,EAAgB,AAAhB,CADtB,CAHJ;AAMH;AACJ,SAnBD;AAoBH;;AAED,2BAAuB;AACnB,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,KAAnC;AACA,YAAI,KAAK,cAAT,EAAyB;AACrB,kBAAM,WAAN,CAAkB,KAAK,cAAvB;AACH;AACJ;;AAQD,aAAS;AAAA,cACG,IADH,GACY,KAAK,KADjB,CACG,IADH;;AAEL,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,CAArB,CAAuB,eAAvB,EAAwC,EAAE,MAAM,QAAQ,OAAhB,EAAxC,CAAd;AACA,aAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB;AACA,eAAO,0DAAO,MAAM,IAAb,EAAmB,SAAS,KAAK,OAAjC,GAAP;AACH;AApD8E,CAApE,SACJ,YADI,GACW;AAClB,cAAU,iBAAU,IAAV,CAAe,UADP;AAElB,aAAS,iBAAU,MAAV,CAAiB;AAFR,CADX,SAMJ,SANI,GAMQ;AACf,UAAM,iBAAU;AADD,CANR,U","file":"views/IndexView.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Hello from './components/HelloComponent';\nimport { setName as actionSetName } from './actions/name';\n\nexport default connect(({ name }) => ({ name }))(class IndexView extends Component {\n    static contextTypes = {\n        setTitle: PropTypes.func.isRequired,\n        context: PropTypes.object.isRequired,\n    };\n\n    static propTypes = {\n        name: PropTypes.string,\n    };\n\n    componentDidMount() {\n        const store = this.context.context.store;\n        store.subscribe(this._storeListener = () => {\n            const state = store.getState();\n\n            const queryParams = new URLSearchParams(!location.search.length ? location.search : location.search.substr(1));\n            if (!state.name) {\n                queryParams.delete('name');\n            } else {\n                queryParams.set('name', state.name);\n            }\n\n            const queryString = queryParams.toString();\n            if (queryString !== location.query) {\n                history.replaceState(\n                    { name: state.name },\n                    document.title,\n                    (location.pathname.slice(0, -(location.search.length - 1)) || '/')\n                        + (queryString && `?${queryString}`)\n                );\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        const store = this.context.context.store;\n        if (this._storeListener) {\n            store.unsubscribe(this._storeListener);\n        }\n    }\n\n    setName = (name: string) => {\n        if (this.props.name === name) return;\n        const dispatch = this.context.context.store.dispatch;\n        dispatch(actionSetName(name));\n    };\n\n    render() {\n        const { name } = this.props;\n        const title = this.context.context.t('Hello {name}!', { name: name || 'World' });\n        this.context.setTitle(title);\n        return <Hello name={name} setName={this.setName} />;\n    }\n});\n"],"sourceRoot":"/"}