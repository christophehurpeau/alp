{"version":3,"sources":["views/IndexView.jsx"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AAEA,MAAM,SAAN,0BAAkC;;AAU9B,aAAS;AAAA,cACG,IADH,GACY,KAAK,KADjB,CACG,IADH;;AAEL,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,CAArB,CAAuB,YAAvB,EAAqC,QAAQ,OAA7C,CAAd;AACA,aAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB;AACA,eAAQ,0DAAO,MAAM,IAAb,EAAmB,SAAS;AAAA,uBAAQ,KAAK,OAAL,CAAa,IAAb,CAAR;AAAA,aAA5B,GAAR;AACH;;AAED,YAAQ,IAAR,EAAc;AACV,cAAM,WAAW,KAAK,OAAL,CAAa,OAAb,CAAqB,KAArB,CAA2B,QAA5C;AACA,iBAAS,mBAAQ,IAAR,CAAT;AACH;;AAED,wBAAoB;AAChB,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,KAAnC;AACA,cAAM,SAAN,CAAgB,KAAK,cAAL,GAAsB,MAAM;AACxC,kBAAM,QAAQ,MAAM,QAAN,EAAd;;AAEA,kBAAM,cAAc,IAAI,eAAJ,CAAoB,CAAC,SAAS,MAAT,CAAgB,MAAjB,GAA0B,SAAS,MAAnC,GAA4C,SAAS,MAAT,CAAgB,MAAhB,CAAuB,CAAvB,CAAhE,CAApB;AACA,gBAAI,CAAC,MAAM,IAAX,EAAiB;AACb,4BAAY,MAAZ,CAAmB,MAAnB;AACH,aAFD,MAEO;AACH,4BAAY,GAAZ,CAAgB,MAAhB,EAAwB,MAAM,IAA9B;AACH;;AAED,kBAAM,cAAc,YAAY,QAAZ,EAApB;AACA,gBAAI,gBAAgB,SAAS,KAA7B,EAAoC;AAChC,wBAAQ,YAAR,CACI,EAAE,MAAM,MAAM,IAAd,EADJ,EAEI,SAAS,KAFb,EAGI,CAAC,SAAS,QAAT,CAAkB,KAAlB,CAAwB,CAAxB,EAA2B,EAAE,SAAS,MAAT,CAAgB,MAAhB,GAAyB,CAA3B,CAA3B,KAA6D,GAA9D,KACO,eAAe,MAAM,WAD5B,CAHJ;AAMH;AACJ,SAnBD;AAoBH;;AAED,2BAAuB;AACnB,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,KAAnC;AACA,YAAI,KAAK,cAAT,EAAyB;AACrB,kBAAM,WAAN,CAAkB,KAAK,cAAvB;AACH;AACJ;AAnD6B;;AAA5B,S,CACK,Y,GAAe;AAClB,cAAU,iBAAU,IAAV,CAAe,UADP;AAElB,aAAS,iBAAU,MAAV,CAAiB;AAFR,C;AADpB,S,CAMK,S,GAAY;AACf,UAAM,iBAAU;AADD,C;kBAgDR,yBAAS,KAAD;AAAA,WAAY;AAC/B,cAAM,MAAM;AADmB,KAAZ;AAAA,CAAR,EAEX,SAFW,C","file":"views/IndexView.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Hello from './components/HelloComponent';\nimport { setName } from './actions/name'\n\nclass IndexView extends Component {\n    static contextTypes = {\n        setTitle: PropTypes.func.isRequired,\n        context: PropTypes.object.isRequired,\n    };\n\n    static propTypes = {\n        name: PropTypes.string,\n    };\n\n    render() {\n        const { name } = this.props;\n        const title = this.context.context.t('Hello {0}!', name || 'World');\n        this.context.setTitle(title);\n        return (<Hello name={name} setName={name => this.setName(name)}></Hello>);\n    }\n\n    setName(name) {\n        const dispatch = this.context.context.store.dispatch;\n        dispatch(setName(name));\n    }\n\n    componentDidMount() {\n        const store = this.context.context.store;\n        store.subscribe(this._storeListener = () => {\n            const state = store.getState();\n\n            const queryParams = new URLSearchParams(!location.search.length ? location.search : location.search.substr(1));\n            if (!state.name) {\n                queryParams.delete('name');\n            } else {\n                queryParams.set('name', state.name);\n            }\n\n            const queryString = queryParams.toString();\n            if (queryString !== location.query) {\n                history.replaceState(\n                    { name: state.name },\n                    document.title,\n                    (location.pathname.slice(0, -(location.search.length - 1)) || '/')\n                        + (queryString && '?' + queryString)\n                );\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        const store = this.context.context.store;\n        if (this._storeListener) {\n            store.unsubscribe(this._storeListener);\n        }\n    }\n}\n\nexport default connect((state) => ({\n    name: state.name,\n}))(IndexView);\n"],"sourceRoot":"/"}