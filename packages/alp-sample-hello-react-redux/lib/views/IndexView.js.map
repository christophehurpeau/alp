{"version":3,"sources":["views/IndexView.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;IAEM,8BAAN,MAAM,SAAN,0BAAkC;;AAU9B,aAAS;cACG,OAAS,KAAK,KAAL,CAAT,KADH;;AAEL,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,CAArB,CAAuB,YAAvB,EAAqC,QAAQ,OAAR,CAA7C,CAFD;AAGL,aAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB,EAHK;AAIL,eAAQ,0DAAO,MAAM,IAAN,EAAY,SAAS,QAAQ,KAAK,OAAL,CAAa,IAAb,CAAR,EAA5B,CAAR,CAJK;KAAT;;AAOA,YAAQ,IAAR,EAAc;AACV,cAAM,WAAW,KAAK,OAAL,CAAa,OAAb,CAAqB,KAArB,CAA2B,QAA3B,CADP;AAEV,iBAAS,mBAAQ,IAAR,CAAT,EAFU;KAAd;;AAKA,wBAAoB;AAChB,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,KAArB,CADE;AAEhB,cAAM,SAAN,CAAgB,KAAK,cAAL,GAAsB,MAAM;AACxC,kBAAM,QAAQ,MAAM,QAAN,EAAR,CADkC;;AAGxC,kBAAM,cAAc,IAAI,eAAJ,CAAoB,CAAC,SAAS,MAAT,CAAgB,MAAhB,GAAyB,SAAS,MAAT,GAAkB,SAAS,MAAT,CAAgB,MAAhB,CAAuB,CAAvB,CAA5C,CAAlC,CAHkC;AAIxC,gBAAI,CAAC,MAAM,IAAN,EAAY;AACb,4BAAY,MAAZ,CAAmB,MAAnB,EADa;aAAjB,MAEO;AACH,4BAAY,GAAZ,CAAgB,MAAhB,EAAwB,MAAM,IAAN,CAAxB,CADG;aAFP;;AAMA,kBAAM,cAAc,YAAY,QAAZ,EAAd,CAVkC;AAWxC,gBAAI,gBAAgB,SAAS,KAAT,EAAgB;AAChC,wBAAQ,YAAR,CACI,EAAE,MAAM,MAAM,IAAN,EADZ,EAEI,SAAS,KAAT,EACA,CAAC,SAAS,QAAT,CAAkB,KAAlB,CAAwB,CAAxB,EAA2B,EAAE,SAAS,MAAT,CAAgB,MAAhB,GAAyB,CAAzB,CAAF,CAA3B,IAA6D,GAA7D,CAAD,IACO,eAAe,MAAM,WAAN,CADtB,CAHJ,CADgC;aAApC;SAXkC,CAAtC,CAFgB;KAApB;;AAwBA,2BAAuB;AACnB,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,KAArB,CADK;AAEnB,YAAI,KAAK,cAAL,EAAqB;AACrB,kBAAM,WAAN,CAAkB,KAAK,cAAL,CAAlB,CADqB;SAAzB;KAFJ;CA9CJ,SACW,eAAe;AAClB,cAAU,iBAAU,IAAV,CAAe,UAAf;AACV,aAAS,iBAAU,MAAV,CAAiB,UAAjB;UAGN,YAAY;AACf,UAAM,iBAAU,MAAV;;kBA+CC,yBAAQ,UAAY;AAC/B,UAAM,MAAM,IAAN;EADa,CAAR,CAEX,SAFW","file":"views/IndexView.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Hello from './components/HelloComponent';\nimport { setName } from './actions/name'\n\nclass IndexView extends Component {\n    static contextTypes = {\n        setTitle: PropTypes.func.isRequired,\n        context: PropTypes.object.isRequired,\n    };\n\n    static propTypes = {\n        name: PropTypes.string,\n    };\n\n    render() {\n        const { name } = this.props;\n        const title = this.context.context.t('Hello {0}!', name || 'World');\n        this.context.setTitle(title);\n        return (<Hello name={name} setName={name => this.setName(name)}></Hello>);\n    }\n\n    setName(name) {\n        const dispatch = this.context.context.store.dispatch;\n        dispatch(setName(name));\n    }\n\n    componentDidMount() {\n        const store = this.context.context.store;\n        store.subscribe(this._storeListener = () => {\n            const state = store.getState();\n\n            const queryParams = new URLSearchParams(!location.search.length ? location.search : location.search.substr(1));\n            if (!state.name) {\n                queryParams.delete('name');\n            } else {\n                queryParams.set('name', state.name);\n            }\n\n            const queryString = queryParams.toString();\n            if (queryString !== location.query) {\n                history.replaceState(\n                    { name: state.name },\n                    document.title,\n                    (location.pathname.slice(0, -(location.search.length - 1)) || '/')\n                        + (queryString && '?' + queryString)\n                );\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        const store = this.context.context.store;\n        if (this._storeListener) {\n            store.unsubscribe(this._storeListener);\n        }\n    }\n}\n\nexport default connect((state) => ({\n    name: state.name,\n}))(IndexView);\n"],"sourceRoot":"/"}