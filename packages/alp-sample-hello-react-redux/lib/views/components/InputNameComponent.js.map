{"version":3,"sources":["views/components/InputNameComponent.jsx"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEe,MAAM,kBAAN,0BAA2C;;AAMtD,aAAS;AAAA,qBACqB,KAAK,KAD1B;AAAA,cACG,IADH,UACG,IADH;AAAA,cACS,OADT,UACS,OADT;;AAEL,eAAO;AACH,0BAAa,KADV;AAEH,kBAAK,MAFF;AAGH,0BAAc,IAHX;AAIH,qBAAS;AAAA,uBAAK,QAAQ,EAAE,MAAF,CAAS,KAAjB,CAAL;AAAA,aAJN;AAKH,sBAAU;AAAA,uBAAK,QAAQ,EAAE,MAAF,CAAS,KAAjB,CAAL;AAAA;AALP,UAAP;AAOH;AAfqD;kBAArC,kB;AAAA,kB,CACV,S,GAAY;AACf,UAAM,iBAAU,MAAV,CAAiB,UADR;AAEf,aAAS,iBAAU,IAAV,CAAe;AAFT,C","file":"views/components/InputNameComponent.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\n\nexport default class InputNameComponent extends Component {\n    static propTypes = {\n        name: PropTypes.string.isRequired,\n        setName: PropTypes.func.isRequired,\n    };\n\n    render() {\n        const { name, setName } = this.props;\n        return <input\n            autoComplete=\"off\"\n            type=\"text\"\n            defaultValue={name}\n            onKeyUp={e => setName(e.target.value)}\n            onChange={e => setName(e.target.value)}\n        />;\n    }\n}\n"],"sourceRoot":"/"}