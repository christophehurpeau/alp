{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAKA,MAAM,WAAW;AACb,mBAAe,sBAAa,YAAY,+BAAZ,CAAb,CAA0D,QAA1D,EAAf;CADE;;AAIN,SAAS,iBAAT,CAA2B,MAA3B,EAAmC,OAAnC,EAA4C;AACxC,WAAO,CACH,MADG,EAEH,OAFG,EAGL,GAHK,CAGD,KACF,EACK,IADL,GAEK,OAFL,CAEa,WAFb,EAE0B,EAF1B,EAGK,OAHL,CAGa,oCAHb,EAGmD,EAHnD,CADE,CAHN,CADwC;CAA5C;;AAYA,MAAM,mBAAN,EAA2B,YAAW;AAClC,QAAI,SAAS,6BAAa,CACtB,cADsB,EAEtB,cAFsB,EAGtB,QAHsB,EAItB,IAJsB,CAAb,CAAT,CAD8B;;AAQlC,eAAW,QAAQ;AACf,eAAO,KAAP,GADe;AAEf,eAAO,EAAP,CAAU,QAAV,EAAoB,QAAU;AAC1B,gBAAI,SAAS,KAAK,QAAL,GAAgB,WAAhB,EAAT,CADsB;AAE1B,gBAAI,OAAO,OAAP,CAAe,WAAf,MAAgC,CAAC,CAAD,EAAI;AACpC,oBAAI,IAAJ,EAAU;AACN,2BADM;iBAAV;;AAIA,wBAAQ,GAAR,CAAY,gBAAZ,EALoC;aAAxC;SAFgB,CAApB,CAFe;KAAR,CAAX,CARkC;;AAsBlC,kBAAc,MAAM;AAChB,eAAO,IAAP,GADgB;KAAN,CAAd,CAtBkC;;AA0BlC,SAAK,oBAAL,EAA2B,MAAM;AAC7B,eAAO,yBAAM,wBAAN,EACF,IADE,CACG,OAAO,IAAI,IAAJ,EAAP,CADH,CAEF,IAFE,CAEG,OAAO;AACT,qCACI,GAAG,kBAAkB,GAAlB,EAAuB,SAAS,aAAT,CAAvB,CAAH,CADJ,CADS;SAAP,CAFV,CAD6B;KAAN,CAA3B,CA1BkC;;AAoClC,SAAK,iBAAL,EAAwB,MAAM;AAC1B,eAAO,yBAAM,mCAAN,EACF,IADE,CACG,OAAO,IAAI,IAAJ,EAAP,CADH,CAEF,IAFE,CAEG,OAAO;AACT,qCACI,GAAG,kBACC,GADD,EAEC,SAAS,aAAT,EACK,OADL,CACa,eADb,EAC8B,cAD9B,EAEK,OAFL,CAEa,aAFb,EAE4B,kBAF5B,EAGK,OAHL,CAIQ,sBAJR,EAKQ,2BALR,CAFD,CAAH,CADJ,CADS;SAAP,CAFV,CAD0B;KAAN,CAAxB,CApCkC;CAAX,CAA3B","file":"index.js","sourcesContent":["import { node as createDaemon } from 'springbokjs-daemon';\nimport fetch from 'node-fetch';\nimport { strictEqual } from 'assert';\nimport { readFileSync } from 'fs';\n\nconst fixtures = {\n    'hello-world': readFileSync(__dirname + '/../fixtures/hello-world.html').toString(),\n};\n\nfunction comparableContent(result, fixture) {\n    return [\n        result,\n        fixture\n    ].map(s => (\n        s\n            .trim()\n            .replace(/\\r?\\n\\s*/g, '')\n            .replace(/ data-react(id|-checksum)=\"[^\"]+\"/g, '')\n    ));\n}\n\nsuite('test hello server', function() {\n    let daemon = createDaemon([\n        '--es_staging',\n        'lib/index.js',\n        '--port',\n        5555,\n    ]);\n\n    suiteSetup(done => {\n        daemon.start();\n        daemon.on('stdout', (data) => {\n            let string = data.toString().toLowerCase();\n            if (string.indexOf('listening') !== -1) {\n                if (done) {\n                    done();\n                }\n\n                console.log('Server started');\n            }\n        });\n    });\n\n    suiteTeardown(() => {\n        daemon.stop();\n    });\n\n    test('hello without name', () => {\n        return fetch('http://localhost:5555/')\n            .then(res => res.text())\n            .then(res => {\n                strictEqual(\n                    ...comparableContent(res, fixtures['hello-world'])\n                );\n            });\n    });\n\n    test('hello with name', () => {\n        return fetch('http://localhost:5555/?name=Chris')\n            .then(res => res.text())\n            .then(res => {\n                strictEqual(\n                    ...comparableContent(\n                        res,\n                        fixtures['hello-world']\n                            .replace(/Hello World!/g, 'Hello Chris!')\n                            .replace('{\"name\":\"\"}', '{\"name\":\"Chris\"}')\n                            .replace(\n                                'type=\"text\" value=\"\"',\n                                'type=\"text\" value=\"Chris\"'\n                            )\n                    )\n                );\n            });\n    });\n});\n"]}