{"version":3,"file":"index-browser.es.js","sources":["../src/index.tsx"],"sourcesContent":["import { POB_TARGET } from 'pob-babel';\nimport type { GetServerSidePropsContext } from 'alp-nextjs';\nimport { getServerCookieValue } from 'alp-nextjs';\nimport BrowserCookies from 'js-cookie';\n\nconst COOKIE_NAME_STATE = 'loggedInUserState';\n\ninterface AuthStateValue {\n  loggedInUserId: string;\n  expiresIn: number;\n}\n\nconst parseCookie = (stateValue?: string): AuthStateValue | null => {\n  return stateValue ? (JSON.parse(stateValue) as AuthStateValue) : null;\n};\n\ninterface LoggedInUserState {\n  isLoggedIn: boolean;\n  loggedInUserId: string | undefined;\n  expiresIn: number | undefined;\n}\n\nconst browserStateValueParsed = parseCookie(\n  BrowserCookies.get(COOKIE_NAME_STATE),\n);\n\nfunction useLoggedInUserStateBrowser(): LoggedInUserState {\n  return {\n    isLoggedIn: !!browserStateValueParsed,\n    loggedInUserId: browserStateValueParsed?.loggedInUserId,\n    expiresIn: browserStateValueParsed?.expiresIn,\n  };\n}\n\nfunction useLoggedInUserStateServer(\n  serverCookieValue?: string,\n): LoggedInUserState {\n  if (serverCookieValue) {\n    const serverStateValueParsed = parseCookie(serverCookieValue);\n    return {\n      isLoggedIn: !!serverStateValueParsed,\n      loggedInUserId: serverStateValueParsed?.loggedInUserId,\n      expiresIn: serverStateValueParsed?.expiresIn,\n    };\n  }\n  return {\n    isLoggedIn: false,\n    loggedInUserId: undefined,\n    expiresIn: undefined,\n  };\n}\n\nexport const useLoggedInUserState =\n  POB_TARGET === 'node'\n    ? useLoggedInUserStateServer\n    : useLoggedInUserStateBrowser;\n\nexport const getServerAuthCookieValue = (\n  ctx: GetServerSidePropsContext,\n): string | undefined => getServerCookieValue(ctx, COOKIE_NAME_STATE);\n"],"names":["COOKIE_NAME_STATE","parseCookie","stateValue","JSON","parse","browserStateValueParsed","BrowserCookies","get","useLoggedInUserStateBrowser","isLoggedIn","loggedInUserId","expiresIn","useLoggedInUserState","getServerAuthCookieValue","ctx","getServerCookieValue"],"mappings":";;;AAKA,IAAMA,iBAAiB,GAAG,mBAAmB,CAAA;AAO7C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,UAAmB,EAA4B;EAClE,OAAOA,UAAU,GAAIC,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,GAAsB,IAAI,CAAA;AACvE,CAAC,CAAA;AAQD,IAAMG,uBAAuB,GAAGJ,WAAW,CACzCK,cAAc,CAACC,GAAG,CAAkB,mBAAA,CACtC,CAAC,CAAA;AAED,SAASC,2BAA2BA,GAAsB;EACxD,OAAO;IACLC,UAAU,EAAE,CAAC,CAACJ,uBAAuB;AACrCK,IAAAA,cAAc,EAAEL,uBAAuB,IAAvBA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,uBAAuB,CAAEK,cAAc;AACvDC,IAAAA,SAAS,EAAEN,uBAAuB,IAAvBA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,uBAAuB,CAAEM,SAAAA;GACrC,CAAA;AACH,CAAA;AAoBO,IAAMC,oBAAoB,GAG3BJ,4BAA2B;IAEpBK,wBAAwB,GAAG,SAA3BA,wBAAwBA,CACnCC,GAA8B,EAAA;AAAA,EAAA,OACPC,oBAAoB,CAACD,GAAG,EAAEd,iBAAiB,CAAC,CAAA;AAAA;;;;"}